local Main5u6 = MakeTab({Name = "Setting"})
local function isNumber(str)
  if tonumber(str) ~= nil or str == 'inf' then
    return true
  end
end
getgenv().TPSpeed = 3
getgenv().TPWalk = false
getgenv().Walkspeed = game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed
getgenv().Jumppower = game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower
local player = game:GetService("Players").LocalPlayer
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = player
local players = game:GetService('Players')
local lplr = players.LocalPlayer
local ps = game:GetService("Players")
local lp = ps.LocalPlayer

getgenv().TweenSpeed = 16
getgenv().TweenWalk = false

local Toggle = AddToggle(Main5u6, {
  Name = "Infinite Jump",
  Default = false,
  Callback = function(s)
  getgenv().InfJ = s
    game:GetService("UserInputService").JumpRequest:connect(function()
        if InfJ == true then
            game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
        end
    end)
  end
})

AddTextBox(Main5u6, {
  Name = "Number WalkSpeed",
  Default = "Enter",
  PlaceholderText = "Enter number",
  ClearText = true,
  Callback = function(value)
    getgenv().Walkspeed = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
        end) 
  end
})

local Toggle = AddToggle(Main5u6, {
  Name = "WalkSpeed",
  Default = false,
  Callback = function(state)
  getgenv().loopW = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopW == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
            end)
        end
    end)
  end
})

AddTextBox(Main5u6, {
  Name = "Number JumpPower",
  Default = "Enter",
  PlaceholderText = "Enter number",
  ClearText = true,
  Callback = function(value)
    getgenv().Jumppower = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = value
    end)
  end
})

local Toggle = AddToggle(Main5u6, {
  Name = "JumpPower",
  Default = false,
  Callback = function(stahte)
  getgenv().loopJ = stahte
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopJ == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Jumppower
            end)
        end
    end)
  end
})

local function setupTPWalk()
    local runService = game:GetService("RunService")
    local connection
    if connection then
        connection:Disconnect()
    end
    local function onCharacterAdded(character)
        local hum = character:WaitForChild("Humanoid")
        connection = runService.Stepped:Connect(function()
            if getgenv().TPWalk and hum and hum.Parent then
                if hum.Health > 0 then
                    if hum.MoveDirection.Magnitude > 0 then
                        if getgenv().TPSpeed and isNumber(getgenv().TPSpeed) then
                            character:TranslateBy(hum.MoveDirection * tonumber(getgenv().TPSpeed))
                        else
                            character:TranslateBy(hum.MoveDirection)
                        end
                    end
                else
                    connection:Disconnect()
                end
            else
                connection:Disconnect()
            end
        end)
    end

    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then
        onCharacterAdded(player.Character)
    end
end

AddTextBox(Main5u6, {
    Name = "Number Tpwalk",
    Default = "Enter",
    PlaceholderText = "Enter number",
    ClearText = true,
    Callback = function(value)
        if isNumber(value) then
            getgenv().TPSpeed = tonumber(value)
        end
    end
})

local Toggle = AddToggle(Main5u6, {
    Name = "Tpwalk",
    Default = false,
    Callback = function(s)
        getgenv().TPWalk = s
        if s then
            setupTPWalk() 
        else
            if connection then
                connection:Disconnect()
            end
        end
    end
})

local Toggle = AddToggle(Main5u6, {
    Name = "Gui Roblox",
    Default = false,
    Callback = function(Allgui)
if Allgui then
   local StarterGui = game:GetService("StarterGui")
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Captures, true)
    else
    local StarterGui = game:GetService("StarterGui")
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Captures, false)
   end
end
})

local lastCF, stop, heartbeatConnection
local Enabled = false
local teleported = false

local function start()
    if heartbeatConnection then
        heartbeatConnection:Disconnect()
    end
    heartbeatConnection = game:GetService('RunService').Heartbeat:Connect(function()
        if stop or not Enabled then
            return
        end
        if lplr.Character and lplr.Character:FindFirstChildOfClass('Humanoid') and lplr.Character:FindFirstChildOfClass('Humanoid').RootPart then
            lastCF = lplr.Character:FindFirstChildOfClass('Humanoid').RootPart.CFrame
        end
    end)

    lplr.Character:WaitForChild('Humanoid').RootPart:GetPropertyChangedSignal('CFrame'):Connect(function()
        if Enabled then
            stop = true
            if lplr.Character and lplr.Character:FindFirstChildOfClass('Humanoid') and lplr.Character:FindFirstChildOfClass('Humanoid').RootPart then
                local currentCF = lplr.Character:FindFirstChildOfClass('Humanoid').RootPart.CFrame
                if currentCF ~= lastCF and not teleported then
                    lplr.Character:FindFirstChildOfClass('Humanoid').RootPart.CFrame = lastCF
                    teleported = true
                end
            end
            game:GetService('RunService').Heartbeat:Wait()
            teleported = false
            stop = false
        end
    end)
end

local function setupCharacter(character)
    teleported = false
    repeat game:GetService('RunService').Heartbeat:Wait() until character:FindFirstChildOfClass('Humanoid')
    repeat game:GetService('RunService').Heartbeat:Wait() until character:FindFirstChildOfClass('Humanoid').RootPart
    if Enabled then
        start()
    end
end

lplr.CharacterAdded:Connect(function(character)
    setupCharacter(character)
end)

AddToggle(Main5u6, {
    Name = "Character CFrame Lock",
    Default = false,
    Callback = function(state)
        Enabled = state
        if Enabled then
            if lplr.Character then
                setupCharacter(lplr.Character)
            end
        else
            if heartbeatConnection then
                heartbeatConnection:Disconnect()
            end
        end
    end
})

local function allowCameraToPassThrough(object, canPassThrough)
    if object:IsA("BasePart") then
        object.CanCollide = not canPassThrough
        object.LocalTransparencyModifier = canPassThrough and 0.5 or 0  -- เปลี่ยนความโปร่งใสให้เหมาะสม
    end
end

local function setCameraPassThrough(canPassThrough)
    for _, object in pairs(workspace:GetDescendants()) do
        allowCameraToPassThrough(object, canPassThrough)
    end
end

workspace.DescendantAdded:Connect(function(object)
    allowCameraToPassThrough(object, false)
end)

AddToggle(Main5u6, {
    Name = "Toggle Camera Pass-Through",
    Default = false,
    Callback = function(value)
        if value then
            setCameraPassThrough(true)
        else
            setCameraPassThrough(false)
        end
        setCameraPassThrough(value)
    end
})
