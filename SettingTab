local Main5u6 = MakeTab({Name = "Setting"})
local function isNumber(str)
    if tonumber(str) ~= nil or str == 'inf' then
        return true
    end
end
getgenv().TPSpeed = 3
getgenv().TPWalk = false
getgenv().Walkspeed = game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed
getgenv().Jumppower = game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower
local player = game:GetService("Players").LocalPlayer
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = player
local userInputService = game:GetService("UserInputService")
getgenv().TweenSpeed = 16
getgenv().TweenWalk = false
local dragging = false
local clickTeleportActive = false
local dragTeleportActive = false

local Toggle = AddToggle(Main5u6, {
    Name = "Infinite Jump",
    Default = false,
    Callback = function(s)
        getgenv().InfJ = s
        userInputService.JumpRequest:connect(function()
            if InfJ == true then
                player.Character:FindFirstChildOfClass('Humanoid'):ChangeState("Jumping")
            end
        end)
    end
})

AddTextBox(Main5u6, {
    Name = "Number WalkSpeed",
    Default = "Enter",
    PlaceholderText = "Enter number",
    ClearText = true,
    Callback = function(value)
        getgenv().Walkspeed = value
        pcall(function()
            player.Character.Humanoid.WalkSpeed = value
        end)
    end
})

local Toggle = AddToggle(Main5u6, {
    Name = "WalkSpeed",
    Default = false,
    Callback = function(state)
        getgenv().loopW = state
        RunService.Heartbeat:Connect(function()
            if loopW == true then
                pcall(function()
                    player.Character.Humanoid.WalkSpeed = Walkspeed
                end)
            end
        end)
    end
})

AddTextBox(Main5u6, {
    Name = "Number JumpPower",
    Default = "Enter",
    PlaceholderText = "Enter number",
    ClearText = true,
    Callback = function(value)
        getgenv().Jumppower = value
        pcall(function()
            player.Character.Humanoid.JumpPower = value
        end)
    end
})

local Toggle = AddToggle(Main5u6, {
    Name = "JumpPower",
    Default = false,
    Callback = function(stahte)
        getgenv().loopJ = stahte
        RunService.Heartbeat:Connect(function()
            if loopJ == true then
                pcall(function()
                    player.Character.Humanoid.JumpPower = Jumppower
                end)
            end
        end)
    end
})

local function setupTPWalk()
    local runService = game:GetService("RunService")
    local connection
    if connection then
        connection:Disconnect()
    end
    local function onCharacterAdded(character)
        local hum = character:WaitForChild("Humanoid")
        connection = runService.Stepped:Connect(function()
            if getgenv().TPWalk and hum and hum.Parent then
                if hum.Health > 0 then
                    if hum.MoveDirection.Magnitude > 0 then
                        if getgenv().TPSpeed and isNumber(getgenv().TPSpeed) then
                            character:TranslateBy(hum.MoveDirection * tonumber(getgenv().TPSpeed))
                        else
                            character:TranslateBy(hum.MoveDirection)
                        end
                    end
                else
                    connection:Disconnect()
                end
            else
                connection:Disconnect()
            end
        end)
    end

    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then
        onCharacterAdded(player.Character)
    end
end

AddTextBox(Main5u6, {
    Name = "Number Tpwalk",
    Default = "Enter",
    PlaceholderText = "Enter number",
    ClearText = true,
    Callback = function(value)
        if isNumber(value) then
            getgenv().TPSpeed = tonumber(value)
        end
    end
})

local Toggle = AddToggle(Main5u6, {
    Name = "Tpwalk",
    Default = false,
    Callback = function(s)
        getgenv().TPWalk = s
        if s then
            setupTPWalk() 
        else
            if connection then
                connection:Disconnect()
            end
        end
    end
})

local function teleportToMousePosition()
    local pos = player:GetMouse().Hit + Vector3.new(0, 2.5, 0)
    player.Character.HumanoidRootPart.CFrame = CFrame.new(pos.X, pos.Y, pos.Z)
end

local ToggleClickTeleport = AddToggle(Main5u6, {
    Name = "Click Teleport",
    Default = false,
    Callback = function(state)
        clickTeleportActive = state
    end
})

userInputService.InputBegan:Connect(function(input, gameProcessed)
    if clickTeleportActive and not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton1 then
        teleportToMousePosition()
    end
end)

local ToggleDragTeleport = AddToggle(Main5u6, {
    Name = "Drag Teleport",
    Default = false,
    Callback = function(state)
        dragTeleportActive = state
        if state then
            userInputService.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)

            userInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                    teleportToMousePosition()
                end
            end)

            RunService.Heartbeat:Connect(function()
                if dragging and dragTeleportActive then
                    player.Character:MoveTo(mouse.Hit.Position)
                end
            end)
        end
    end
})
