local Main5u6 = MakeTab({Name = "Setting"})
local function isNumber(str)
  if tonumber(str) ~= nil or str == 'inf' then
    return true
  end
end
getgenv().TPSpeed = 3
getgenv().TPWalk = false
getgenv().Walkspeed = game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed
getgenv().Jumppower = game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower
local player = game:GetService("Players").LocalPlayer
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = player
local camera = workspace.CurrentCamera
local camera = workspace.CurrentCamera
local controlModule = require(player:WaitForChild('PlayerScripts'):WaitForChild('PlayerModule'):WaitForChild('ControlModule'))

getgenv().TweenSpeed = 16
getgenv().TweenWalk = false

local Toggle = AddToggle(Main5u6, {
  Name = "Infinite Jump",
  Default = false,
  Callback = function(s)
  getgenv().InfJ = s
    game:GetService("UserInputService").JumpRequest:connect(function()
        if InfJ == true then
            game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
        end
    end)
  end
})

AddTextBox(Main5u6, {
  Name = "Number WalkSpeed",
  Default = "Enter",
  PlaceholderText = "Enter number",
  ClearText = true,
  Callback = function(value)
    getgenv().Walkspeed = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
        end) 
  end
})

local Toggle = AddToggle(Main5u6, {
  Name = "WalkSpeed",
  Default = false,
  Callback = function(state)
  getgenv().loopW = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopW == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
            end)
        end
    end)
  end
})

AddTextBox(Main5u6, {
  Name = "Number JumpPower",
  Default = "Enter",
  PlaceholderText = "Enter number",
  ClearText = true,
  Callback = function(value)
    getgenv().Jumppower = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = value
    end)
  end
})

local Toggle = AddToggle(Main5u6, {
  Name = "JumpPower",
  Default = false,
  Callback = function(stahte)
  getgenv().loopJ = stahte
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopJ == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Jumppower
            end)
        end
    end)
  end
})

local function setupTPWalk()
    local connection
    if connection then
        connection:Disconnect()
    end
    
    local function onCharacterAdded(character)
        local hum = character:WaitForChild("Humanoid")
        connection = RunService.Stepped:Connect(function()
            if getgenv().TPWalk and hum and hum.Parent then
                if hum.Health > 0 then
                    if hum.MoveDirection.Magnitude > 0 then
                        local speed = getgenv().TPSpeed or 1
                        local targetPosition = character.Position + (hum.MoveDirection * speed)
                        local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
                        local tween = TweenService:Create(character, tweenInfo, {Position = targetPosition})
                        tween:Play()
                        tween.Completed:Wait()
                    end
                else
                    connection:Disconnect()
                end
            else
                connection:Disconnect()
            end
        end)
    end

    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then
        onCharacterAdded(player.Character)
    end
end

AddTextBox(Main5u6, {
    Name = "Number Tpwalk",
    Default = "Enter",
    PlaceholderText = "Enter number",
    ClearText = true,
    Callback = function(value)
        if isNumber(value) then
            getgenv().TPSpeed = tonumber(value)
        end
    end
})

local Toggle = AddToggle(Main5u6, {
    Name = "Tpwalk",
    Default = false,
    Callback = function(s)
        getgenv().TPWalk = s
        if s then
            setupTPWalk() 
        else
            if connection then
                connection:Disconnect()
            end
        end
    end
})

local cameraNoclipConnection
local cameraSpeed = 10
local cameraRotationSpeed = 1

local function toggleCameraNoclip()
    if getgenv().CameraNoclip then
        getgenv().CameraNoclip = false
        if cameraNoclipConnection then
            cameraNoclipConnection:Disconnect()
        end
        camera.CameraType = Enum.CameraType.Custom
    else
        getgenv().CameraNoclip = true
        camera.CameraType = Enum.CameraType.Scriptable

        cameraNoclipConnection = RunService.RenderStepped:Connect(function(deltaTime)
            local moveDirection = controlModule:GetMoveVector()
            if moveDirection.Magnitude > 0 then
                camera.CFrame = camera.CFrame + moveDirection * cameraSpeed * deltaTime
            end

            local userInputService = game:GetService("UserInputService")
            local mouseDelta = userInputService:GetMouseDelta()
            local yaw = -mouseDelta.X * cameraRotationSpeed * deltaTime
            local pitch = -mouseDelta.Y * cameraRotationSpeed * deltaTime

            local cameraRotation = CFrame.Angles(pitch, yaw, 0)
            camera.CFrame = camera.CFrame * cameraRotation
        end)
    end
end

local CameraNoclipToggle = AddToggle(Main5u6, {
    Name = "Camera Noclip",
    Default = false,
    Callback = toggleCameraNoclip
})

AddTextBox(Main5u6, {
    Name = "Camera Speed",
    Default = tostring(cameraSpeed),
    PlaceholderText = "Enter camera speed",
    ClearText = true,
    Callback = function(value)
        if isNumber(value) then
            cameraSpeed = tonumber(value)
        end
    end
})

AddTextBox(Main5u6, {
    Name = "Camera Rotation Speed",
    Default = tostring(cameraRotationSpeed),
    PlaceholderText = "Enter rotation speed",
    ClearText = true,
    Callback = function(value)
        if isNumber(value) then
            cameraRotationSpeed = tonumber(value)
        end
    end
})


local Toggle = AddToggle(Main5u6, {
    Name = "Toggle Gui Roblox",
    Default = false,
    Callback = function(Allgui)
if Allgui then
   local StarterGui = game:GetService("StarterGui")
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, true)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Captures, true)
    else
    local StarterGui = game:GetService("StarterGui")
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, false)
   StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Captures, false)
   end
end
})
