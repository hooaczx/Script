local Main5u6 = MakeTab({Name = "Setting"})
local function isNumber(str)
  if tonumber(str) ~= nil or str == 'inf' then
    return true
  end
end
getgenv().TPSpeed = 3
getgenv().TPWalk = false
getgenv().Walkspeed = game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed
getgenv().Jumppower = game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower
local player = game:GetService("Players").LocalPlayer
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = player
local players = game:GetService('Players')
local lplr = players.LocalPlayer
local ps = game:GetService("Players")
local lp = ps.LocalPlayer
getgenv().TweenSpeed = 16
getgenv().TweenWalk = false
getgenv().name = ""
getgenv().ProtectName = false
getgenv().otherName = ""
getgenv().ProtectOtherName = false
local Players = game:GetService("Players")
local Plr = Players.LocalPlayer
local SelectedPlayer

local Toggle = AddToggle(Main5u6, {
  Name = "Infinite Jump",
  Default = false,
  Callback = function(s)
  getgenv().InfJ = s
    game:GetService("UserInputService").JumpRequest:connect(function()
        if InfJ == true then
            game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
        end
    end)
  end
})

AddTextBox(Main5u6, {
  Name = "Number WalkSpeed",
  Default = "Enter",
  PlaceholderText = "Enter number",
  ClearText = true,
  Callback = function(value)
    getgenv().Walkspeed = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
        end) 
  end
})

local Toggle = AddToggle(Main5u6, {
  Name = "WalkSpeed",
  Default = false,
  Callback = function(state)
  getgenv().loopW = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopW == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
            end)
        end
    end)
  end
})

AddTextBox(Main5u6, {
  Name = "Number JumpPower",
  Default = "Enter",
  PlaceholderText = "Enter number",
  ClearText = true,
  Callback = function(value)
    getgenv().Jumppower = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = value
    end)
  end
})

local Toggle = AddToggle(Main5u6, {
  Name = "JumpPower",
  Default = false,
  Callback = function(stahte)
  getgenv().loopJ = stahte
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopJ == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Jumppower
            end)
        end
    end)
  end
})

local function setupTPWalk()
    local runService = game:GetService("RunService")
    local connection
    if connection then
        connection:Disconnect()
    end
    local function onCharacterAdded(character)
        local hum = character:WaitForChild("Humanoid")
        connection = runService.Stepped:Connect(function()
            if getgenv().TPWalk and hum and hum.Parent then
                if hum.Health > 0 then
                    if hum.MoveDirection.Magnitude > 0 then
                        if getgenv().TPSpeed and isNumber(getgenv().TPSpeed) then
                            character:TranslateBy(hum.MoveDirection * tonumber(getgenv().TPSpeed))
                        else
                            character:TranslateBy(hum.MoveDirection)
                        end
                    end
                else
                    connection:Disconnect()
                end
            else
                connection:Disconnect()
            end
        end)
    end

    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then
        onCharacterAdded(player.Character)
    end
end

AddTextBox(Main5u6, {
    Name = "Number Tpwalk",
    Default = "Enter",
    PlaceholderText = "Enter number",
    ClearText = true,
    Callback = function(value)
        if isNumber(value) then
            getgenv().TPSpeed = tonumber(value)
        end
    end
})

local Toggle = AddToggle(Main5u6, {
    Name = "Tpwalk",
    Default = false,
    Callback = function(s)
        getgenv().TPWalk = s
        if s then
            setupTPWalk() 
        else
            if connection then
                connection:Disconnect()
            end
        end
    end
})

local function replaceNameInTextLabels(targetPlayerName, replacementName)
    for _, Value in ipairs(game:GetDescendants()) do
        if Value:IsA("TextLabel") then
            local has = string.find(Value.Text, targetPlayerName)
            if has then
                local str = Value.Text:gsub(targetPlayerName, replacementName)
                Value.Text = str
            end
            Value:GetPropertyChangedSignal("Text"):Connect(function()
                local str = Value.Text:gsub(targetPlayerName, replacementName)
                Value.Text = str
            end)
        end
    end
end

local function updateDropdownOptions(dropdown)
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    dropdown:UpdateOptions(playerNames)
end

local SelfNameTextBox = AddTextBox(Main5u6, {
    Name = "Enter Custom Name (Self)",
    Default = "Enter",
    PlaceholderText = "Enter Name",
    ClearText = true,
    Callback = function(text)
        getgenv().name = text
        if getgenv().ProtectName then
            replaceNameInTextLabels(Plr.Name, getgenv().name)
        end
    end
})

local SelfProtectToggle = AddToggle(Main5u6, {
    Name = "Enable Name Protection (Self)",
    Default = false,
    Callback = function(state)
        getgenv().ProtectName = state
        if state then
            replaceNameInTextLabels(Plr.Name, getgenv().name)
        else
            replaceNameInTextLabels(getgenv().name, Plr.Name)
        end
    end
})

-- Elements for renaming other players
local OtherNameTextBox = AddTextBox(Main5u6, {
    Name = "Enter Custom Name (Other Player)",
    Default = "Enter",
    PlaceholderText = "Enter Name",
    ClearText = true,
    Callback = function(text)
        getgenv().otherName = text
        if getgenv().ProtectOtherName and SelectedPlayer then
            replaceNameInTextLabels(SelectedPlayer.Name, getgenv().otherName)
        end
    end
})

local OtherProtectToggle = AddToggle(Main5u6, {
    Name = "Enable Name Protection (Other Player)",
    Default = false,
    Callback = function(state)
        getgenv().ProtectOtherName = state
        if state and SelectedPlayer then
            replaceNameInTextLabels(SelectedPlayer.Name, getgenv().otherName)
        elseif not state and SelectedPlayer then
            replaceNameInTextLabels(getgenv().otherName, SelectedPlayer.Name)
        end
    end
})

local PlayerDropdown = AddDropdown(Main66, {
    Name = "Select Player",
    Options = {},
    Callback = function(selected)
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Name == selected then
                SelectedPlayer = player
                break
            end
        end
        if getgenv().ProtectOtherName and SelectedPlayer then
            replaceNameInTextLabels(SelectedPlayer.Name, getgenv().otherName)
        end
    end
})

updateDropdownOptions(PlayerDropdown)

Players.PlayerAdded:Connect(function()
    updateDropdownOptions(PlayerDropdown)
end)

Players.PlayerRemoving:Connect(function()
    updateDropdownOptions(PlayerDropdown)
end)

local lastCF, stop, heartbeatConnection
local Enabled = false

local function start()
    if heartbeatConnection then
        heartbeatConnection:Disconnect()
    end
    heartbeatConnection = game:GetService('RunService').Heartbeat:Connect(function()
        if stop or not Enabled then
            return
        end
        if lplr.Character and lplr.Character:FindFirstChildOfClass('Humanoid') and lplr.Character:FindFirstChildOfClass('Humanoid').RootPart then
            lastCF = lplr.Character:FindFirstChildOfClass('Humanoid').RootPart.CFrame
        end
    end)

    lplr.Character:WaitForChild('Humanoid').RootPart:GetPropertyChangedSignal('CFrame'):Connect(function()
        if Enabled then
            stop = true
            if lplr.Character and lplr.Character:FindFirstChildOfClass('Humanoid') and lplr.Character:FindFirstChildOfClass('Humanoid').RootPart then
                lplr.Character:FindFirstChildOfClass('Humanoid').RootPart.CFrame = lastCF
            end
            game:GetService('RunService').Heartbeat:Wait()
            stop = false
        end
    end)
end

local function setupCharacter(character)
    repeat game:GetService('RunService').Heartbeat:Wait() until character:FindFirstChildOfClass('Humanoid')
    repeat game:GetService('RunService').Heartbeat:Wait() until character:FindFirstChildOfClass('Humanoid').RootPart
    if Enabled then
        start()
    end
end

lplr.CharacterAdded:Connect(function(character)
    setupCharacter(character)
end)

AddToggle(Main5u6, {
    Name = "Character Lock CFrame",
    Default = false,
    Callback = function(state)
        Enabled = state
        if Enabled then
            if lplr.Character then
                setupCharacter(lplr.Character)
            end
        else
            if heartbeatConnection then
                heartbeatConnection:Disconnect()
            end
        end
    end
})

local function setCameraOcclusion()
    lp.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Zoom
end

setCameraOcclusion()

lp.CharacterAdded:Connect(function()
    setCameraOcclusion()
end)

AddToggle(Main5u6, {
    Name = "Camera no Occlusion",
    Default = false,
    Callback = function(value)
        if value then
            lp.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam
        else
            lp.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Zoom
        end
    end
})

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local camera = workspace.CurrentCamera
local tweenService = game:GetService("TweenService")
local soundId = 1445412859
local effectEnabled = false
local originalMaxZoom = player.CameraMaxZoomDistance
local originalMinZoom = player.CameraMinZoomDistance
local zoomedMaxZoom = 5
local zoomedMinZoom = 2
local followPlayer = true

local hitSound = Instance.new("Sound", player:WaitForChild("PlayerScripts"))
hitSound.SoundId = "rbxassetid://" .. soundId
hitSound.Volume = 1

local blurEffect = Instance.new("BlurEffect", camera)
blurEffect.Size = 0

local colorCorrectionEffect = Instance.new("ColorCorrectionEffect", camera)
colorCorrectionEffect.TintColor = Color3.new(1, 1, 1)
colorCorrectionEffect.Saturation = 0

local overlayFrame = Instance.new("Frame")
overlayFrame.Size = UDim2.new(1, 0, 1, 0)
overlayFrame.Position = UDim2.new(0, 0, 0, 0)
overlayFrame.BackgroundColor3 = Color3.new(0, 0, 0)
overlayFrame.BackgroundTransparency = 1
overlayFrame.Visible = true
overlayFrame.Parent = player:WaitForChild("PlayerGui")

local function followCharacter()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    game:GetService("RunService").RenderStepped:Connect(function()
        if followPlayer then
            camera.CFrame = CFrame.new(camera.CFrame.Position, humanoidRootPart.Position)
        end
    end)
end

local function triggerHitEffect()
    if not effectEnabled then return end

    game.StarterGui:SetCore("SendNotification", {
        Title = "Alert!",
        Text = "your blood, reduction",
        icon = "rbxassetid://78608769732362",
        Duration = 2,
    })

    followPlayer = true
    followCharacter()

    hitSound:Play()
    wait(0.1)

    local zoomInTweenMax = tweenService:Create(player, TweenInfo.new(0.5), {CameraMaxZoomDistance = zoomedMaxZoom})
    local zoomInTweenMin = tweenService:Create(player, TweenInfo.new(0.5), {CameraMinZoomDistance = zoomedMinZoom})
    zoomInTweenMax:Play()
    zoomInTweenMin:Play()

    tweenService:Create(blurEffect, TweenInfo.new(0.5), {Size = 24}):Play()
    wait(0.5)

    local shakeTween = tweenService:Create(camera, TweenInfo.new(0.5), {CFrame = camera.CFrame * CFrame.new(0, 0, -2)})
    shakeTween:Play()

    local twistTween = tweenService:Create(camera, TweenInfo.new(0.5), {CFrame = camera.CFrame * CFrame.Angles(0, math.rad(45), 0)})
    twistTween:Play()

    twistTween.Completed:Connect(function()
        local zoomOutTweenMax = tweenService:Create(player, TweenInfo.new(0.5), {CameraMaxZoomDistance = originalMaxZoom})
        local zoomOutTweenMin = tweenService:Create(player, TweenInfo.new(0.5), {CameraMinZoomDistance = originalMinZoom})

        zoomOutTweenMax:Play()
        zoomOutTweenMin:Play()

        followPlayer = false

        tweenService:Create(blurEffect, TweenInfo.new(0.5), {Size = 0}):Play()
        wait(0.5)
    end)

    local function changeColor()
        tweenService:Create(colorCorrectionEffect, TweenInfo.new(0.5), {TintColor = Color3.new(1, 0, 0), Saturation = -1}):Play()
        wait(0.5)
        tweenService:Create(colorCorrectionEffect, TweenInfo.new(0.5), {TintColor = Color3.new(1, 1, 1), Saturation = 0}):Play()
        wait(0.5)
    end

    local elapsedTime = 0
    while elapsedTime < 1.5 do
        changeColor()
        elapsedTime = elapsedTime + 1
    end
end

local function onHealthChanged(humanoid)
    humanoid.HealthChanged:Connect(function(newHealth)
        if effectEnabled and newHealth < humanoid.MaxHealth then
            triggerHitEffect()
        end
    end)
end

local function onCharacterAdded(newCharacter)
    character = newCharacter
    local humanoid = character:WaitForChild("Humanoid")
    onHealthChanged(humanoid)
end

if player.Character then
    onCharacterAdded(player.Character)
end

player.CharacterAdded:Connect(onCharacterAdded)

AddToggle(Main5u6, {
    Name = "Injury effect character when hit or attack or blood reduction",
    Default = false,
    Callback = function(value) 
        effectEnabled = value
    end
})
