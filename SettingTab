local Main5u6 = MakeTab({Name = "Setting"})
local function isNumber(str)
    return tonumber(str) ~= nil or str == 'inf'
end
local camera = workspace.CurrentCamera
local ifGameId = game.PlaceId
getgenv().TPSpeed = 0
getgenv().TPJpBst = 0
getgenv().TPWalk = false
getgenv().NV_Brightness = 0
local player = game:GetService("Players").LocalPlayer
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = player
local players = game:GetService('Players')
local lplr = players.LocalPlayer
local ps = game:GetService("Players")
local lp = ps.LocalPlayer
local mouse = game.Players.LocalPlayer:GetMouse()
local gui, con, isOn, fpsV = nil, nil, false, 0

Service = setmetatable({}, {
    __index = function(Self, Index)
        local NewService = game:GetService(Index)
        if NewService then
            Self[Index] = NewService
        end
        return NewService
    end
})

local localPuppet = Service.Players.LocalPlayer

function SendDetailedNotification(title, text, duration)
    game.StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration or 5
    })
end

function Create(instance, parent, props)
    local new = Instance.new(instance, parent)
    if props then
        for prop, value in pairs(props) do
            new[prop] = value
        end
    end
    return new
end

function CreateTween(instance, prop, value, time, tweenWait)
    local tween = TweenService:Create(instance, TweenInfo.new(time, Enum.EasingStyle.Linear), {[prop] = value})
    tween:Play()
    if tweenWait then
        tween.Completed:Wait()
    end
end

local to = loadstring(game:HttpGet("https://raw.githubusercontent.com/hooaczx/Script/refs/heads/main/God%20mod%20obby"))()

AddToggle(Main5u6, {
    Name = "God Mode (Bypass deadly parts in any obby[for obby game])",
    Default = false,
    Callback = function(state)
        to.toggle(state)
    end
})

local M = loadstring(game:HttpGet("https://raw.githubusercontent.com/hooaczx/Script/refs/heads/main/CharacterForceField"))()
local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/hooaczx/Script/main/Forcefield"))()

AddDropdown(Main5u6, {
    Name = "Detection Zone And ForceField Color Mode",
    Default = "Normal",
    Options = {"Normal", "Rainbow"},
    Callback = function(mode)
        M.mode(mode)
        module.setColorMode(mode)
    end
})

AddTextBox(Main5u6, {
    Name = "Detection Radius",
    Default = "Enter",
    PlaceholderText = "Enter number",
    ClearText = true,
    Callback = function(value)
        module.setDetectionRadius(value)
    end
})

AddToggle(Main5u6, {
    Name = "Zone Visibility",
    Default = false,
    Callback = function(state)
        module.toggleVisibility(state)
    end
})

AddToggle(Main5u6, {
    Name = "LookAt Player",
    Default = false,
    Callback = function(state)
        module.toggleLookAt(state)
    end
})

AddToggle(Main5u6, {
    Name = "Character ForceField",
    Default = false,
    Callback = function(state)
        M.tgl(state)
    end
})

AddColorPicker(Main5u6, {
    Name = "Detection Zone And Character ForceField Color",
    Default = Color3.fromRGB(255, 255, 255),
    Callback = function(color)
       M.clr(color)
       module.setColor(color)
    end
})

local jmpC

AddToggle(Main5u6, {
    Name = "Infinite Jump",
    Default = false,
    Callback = function(s)
        getgenv().InfJ = s
        if s then
            if not jmpC then
                jmpC = game:GetService("UserInputService").JumpRequest:Connect(function()
                    if getgenv().InfJ == true then
                        game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState("Jumping")
                    end
                end)
            end
        else
            if jmpC then
                jmpC:Disconnect()
                jmpC = nil
            end
        end
    end
})

local funcs = {}
funcs["G8"] = funcs["G8"] or {}
funcs["B1"] = funcs["B1"] or {}
funcs["D4"] = nil
funcs["hF"] = nil
funcs["C4"] = funcs["C4"] or {
	box = true,
	tracer = true,
	highlight = true,
	color = Color3.fromRGB(0, 255, 0),
}function CreateDrawing(type, properties)
	local obj = Drawing.new(type)
	for prop, val in pairs(properties) do
		obj[prop] = val
	end
	return obj
end function CreateHighlight(player)
	local char = player.Character
	if not funcs["hF"] or not funcs["hF"].Parent then
		funcs["hF"] = Create("Folder", ((not is_sirhurt_closure and not (syn and DrawingImmediate)) and syn and syn.protect_gui and game:GetService("CoreGui")) or (typeof(get_hidden_gui) == "function" and get_hidden_gui()) or (typeof(gethui) == "function" and gethui()) or game:GetService("CoreGui"), {Name = "Highlight_Storage_Player"})
	end
	local Storage = funcs["hF"]
	if char then
		local highlight = Storage:FindFirstChild(player.Name.."Highlight_1hooaczx1")
		if highlight then
			highlight:Destroy()
		end
		if funcs["C4"].highlight then
			Create("Highlight", Storage, {
				Name = player.Name.."Highlight_1hooaczx1",
				Adornee = char,
				FillColor = _G.ESPColor or funcs["C4"].color,
				FillTransparency = 1,
				OutlineColor = _G.ESPColor or funcs["C4"].color,
				OutlineTransparency = 0,
				DepthMode = Enum.HighlightDepthMode.AlwaysOnTop,
				Enabled = true
			})
		end
	end
end

funcs["A1"] = function(enable)
	if enable then
		if funcs["D4"] then
			funcs["D4"]:Disconnect()
		end
		if not funcs["hF"] or not funcs["hF"].Parent then
			funcs["hF"] = Create("Folder", (gethui and gethui()) or game:GetService("CoreGui"), {Name = "Highlight_Storage_Player"})
		end
		local Storage = funcs["hF"]
		funcs["D4"] = RunService.RenderStepped:Connect(function()
			local camera = workspace.CurrentCamera
			local vs = camera.ViewportSize
			local Color = _G.ESPColor or funcs["C4"].color
			for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
				if player ~= game:GetService("Players").LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
					local hrp = player.Character.HumanoidRootPart
					local pos, visible = camera:WorldToViewportPoint(hrp.Position)
					local S = visible and pos.X >= 0 and pos.X <= vs.X and pos.Y >= 0 and pos.Y <= vs.Y
					if S then
						if not funcs["G8"][player] then
							funcs["G8"][player] = {
								Box = CreateDrawing("Square", {
									Thickness = 1,
									Filled = false,
									Color = Color,
									Visible = false,
								}),
								Name = CreateDrawing("Text", {
									Size = 14,
									Center = true,
									Outline = true,
									Color = Color,
									Visible = false,
								}),
								Tracer = CreateDrawing("Line", {
									Thickness = 1,
									Color = Color,
									Visible = false,
								}),
							}
						end
						local d = funcs["G8"][player]
						local h = math.abs(camera:WorldToViewportPoint(hrp.Position + Vector3.new(0, 3, 0)).Y - camera:WorldToViewportPoint(hrp.Position - Vector3.new(0, 2.5, 0)).Y)
						local w = h / 2
						d.Box.Size = Vector2.new(w, h)
						d.Box.Position = Vector2.new(pos.X - w / 2, pos.Y - h / 2)
						d.Box.Visible = funcs["C4"].box
						d.Box.Color = Color
						d.Name.Position = Vector2.new(pos.X, pos.Y - h / 2 - 18)
						d.Name.Text = player.Name
						d.Name.Visible = funcs["C4"].box
						d.Name.Color = Color
						d.Tracer.From = Vector2.new(vs.X / 2, vs.Y)
						d.Tracer.To = Vector2.new(pos.X, pos.Y)
						d.Tracer.Visible = funcs["C4"].tracer
						d.Tracer.Color = Color
						local highlight = Storage:FindFirstChild(player.Name.."Highlight_1hooaczx1")
						if not highlight then
							CreateHighlight(player)
							highlight = Storage:FindFirstChild(player.Name.."Highlight_1hooaczx1")
						end
						if highlight then
							highlight.FillColor = Color
							highlight.OutlineColor = Color
							highlight.Enabled = funcs["C4"].highlight
						end
					else
						if funcs["G8"][player] then
							for _, d in pairs(funcs["G8"][player]) do
								d.Visible = false
							end
						end
						local h = Storage:FindFirstChild(player.Name)
						if h then
							h.Enabled = false
						end
					end
					if not funcs["B1"][player] then
						funcs["B1"][player] = player.CharacterAdded:Connect(function()
							CreateHighlight(player)
						end)
					end
				else
					if funcs["G8"][player] then
						for _, d in pairs(funcs["G8"][player]) do
							d:Remove()
						end
						funcs["G8"][player] = nil
					end
					local h = Storage:FindFirstChild(player.Name)
					if h then
						h:Destroy()
					end
				end
			end
			for player, draw in pairs(funcs["G8"]) do
				if not game:GetService("Players"):FindFirstChild(player.Name) then
					for _, d in pairs(draw) do
						d:Remove()
					end
					funcs["G8"][player] = nil
					if funcs["B1"][player] then
						funcs["B1"][player]:Disconnect()
						funcs["B1"][player] = nil
					end
					local h = Storage:FindFirstChild(player.Name.."Highlight_1hooaczx1")
					if h then
						h:Destroy()
					end
				end
			end
		end)
	else
		if funcs["D4"] then
			funcs["D4"]:Disconnect()
			funcs["D4"] = nil
		end
		for _, conn in pairs(funcs["B1"]) do
			conn:Disconnect()
		end
		funcs["B1"] = {}
		for _, draw in pairs(funcs["G8"]) do
			for _, d in pairs(draw) do
				d:Remove()
			end
		end
		funcs["G8"] = {}
		if funcs["hF"] then
			funcs["hF"]:ClearAllChildren()
			funcs["hF"]:Destroy()
			funcs["hF"] = nil
		end
	end
end

AddToggle(Main5u6, {
	Name = "Box_ESP",
	Default = false,
	Callback = function(bool)
		funcs["C4"].box = bool
		if _G.ESP then
			for _, esp in pairs(funcs["G8"]) do
				esp.Box.Visible = bool
				esp.Name.Visible = bool
			end
		end
	end
})

AddToggle(Main5u6, {
	Name = "Tracer_ESP",
	Default = false,
	Callback = function(bool)
		funcs["C4"].tracer = bool
		if _G.ESP then
			for _, esp in pairs(funcs["G8"]) do
				esp.Tracer.Visible = bool
			end
		end
	end
})

AddToggle(Main5u6, {
	Name = "Highlight_ESP",
	Default = true,
	Callback = function(bool)
		funcs["C4"].highlight = bool
		if _G.ESP and funcs["hF"] then
			for _, h in pairs(funcs["hF"]:GetChildren()) do
				h.Enabled = bool
			end
		end
	end
})

AddToggle(Main5u6, {
	Name = "ESP Player",
	Default = false,
	Callback = function(bool)
		_G.ESP = bool
		if type(funcs["A1"]) == "function" then
			funcs["A1"](bool)
		end
	end
})

AddColorPicker(Main5u6, {
	Name = "ESP Player Color",
	Default = Color3.fromRGB(0, 255, 0),
	Callback = function(colorNew)
		_G.ESPColor = colorNew
		funcs["C4"].color = colorNew
		if _G.ESP then
			if funcs["hF"] then
				for _, highlight in pairs(funcs["hF"]:GetChildren()) do
					highlight.FillColor = colorNew
					highlight.OutlineColor = colorNew
				end
			end
			for player, draw in pairs(funcs["G8"]) do
				if draw.Box then
					draw.Box.Color = colorNew
				end
				if draw.Name then
					draw.Name.Color = colorNew
				end
				if draw.Tracer then
					draw.Tracer.Color = colorNew
				end
			end
		end
	end
})

AddSlider(Main5u6, {
    Name = "NV_Brightness",
    Increase = 0.1,
    MinValue = 0,
    MaxValue = 1.5,
    Default = NV_Brightness,
    Callback = function(value)
        getgenv().NV_Brightness = value
        local nv = game:GetService("Lighting"):FindFirstChild("NV_1hooaczx1")
        if nv and nv:IsA("ColorCorrectionEffect") then
            nv.Brightness = getgenv().NV_Brightness
        end
    end
})

AddToggle(Main5u6, {
    Name = "Night Vision",
    Default = false,
    Callback = function(v)
        local l,r,w=game:GetService("Lighting"),game:GetService("RunService"),workspace
        if v then
            if getgenv().__c then getgenv().__c:Disconnect() end
            local s={
                GS=l.GlobalShadows,
                T=l.Technology,
                FS=l.FogStart,
                FE=l.FogEnd,
                E={},
                L={}
            }
            getgenv().__saved={
                GS=s.GS,
                T=s.T,
                A=l.Ambient,
                OA=l.OutdoorAmbient,
                EDS=l.EnvironmentDiffuseScale,
                ESS=l.EnvironmentSpecularScale,
                E={},
                L={},
                FS=s.FS,
                FE=s.FE
            }
            local effects = {}
            for _, e in ipairs(l:GetChildren()) do
                local cn = e.ClassName
                if cn=="ShadowMapEffect" or cn=="SunRaysEffect" or cn=="BloomEffect" then
                    effects[#effects+1] = e
                    getgenv().__saved.E[e] = e.Enabled
                end
            end
            local lights = {}
            for _, lt in ipairs(w:GetDescendants()) do
                local cn = lt.ClassName
                if cn=="PointLight" or cn=="SpotLight" or cn=="SurfaceLight" then
                    lights[#lights+1] = lt
                    getgenv().__saved.L[lt] = lt.Shadows
                end
            end
            local cGS,cT,cFS,cFE = l.GlobalShadows,l.Technology,l.FogStart,l.FogEnd
            local cE,cL = {},{}
            getgenv().__c = r.Heartbeat:Connect(function()
                if not l:FindFirstChild("NV_1hooaczx1") then
                    Create("ColorCorrectionEffect",l,{
                        Name="NV_1hooaczx1",
                        Brightness=getgenv().NV_Brightness or 1,
                        Contrast=1,
                        Saturation=-0.8,
                        TintColor=Color3.fromRGB(0,255,0)
                    })
                end
                if l.GlobalShadows ~= false then
                    l.GlobalShadows = false
                    cGS = false
                end
                if l.Technology ~= Enum.Technology.Compatibility then
                    l.Technology = Enum.Technology.Compatibility
                    cT = Enum.Technology.Compatibility
                end
                if l.FogStart ~= 0 then
                    l.FogStart = 0
                    cFS = 0
                end
                if l.FogEnd ~= 100000 then
                    l.FogEnd = 100000
                    cFE = 100000
                end
                for _, e in ipairs(effects) do
                    local en = e.Enabled
                    if cE[e] ~= false and en == true then
                        e.Enabled = false
                        cE[e] = false
                    elseif cE[e] == nil then
                        cE[e] = en
                    end
                end
                for _, lt in ipairs(lights) do
                    local sh = lt.Shadows
                    if cL[lt] ~= false and sh == true then
                        lt.Shadows = false
                        cL[lt] = false
                    elseif cL[lt] == nil then
                        cL[lt] = sh
                    end
                end
            end)
        else
            local nv=l:FindFirstChild("NV_1hooaczx1")
            if nv then nv:Destroy() end
            if getgenv().__c then getgenv().__c:Disconnect() getgenv().__c=nil end
            local s=getgenv().__saved
            if s then
                l.GlobalShadows = s.GS
                l.Technology = s.T
                l.Ambient = s.A
                l.OutdoorAmbient = s.OA
                l.EnvironmentDiffuseScale = s.EDS
                l.EnvironmentSpecularScale = s.ESS
                for e,en in pairs(s.E) do if e and e.Parent then e.Enabled = en end end
                for lt,sh in pairs(s.L) do if lt and lt.Parent then lt.Shadows = sh end end
                l.FogStart = s.FS
                l.FogEnd = s.FE
            end
        end
    end
})

AddTextBox(Main5u6, {
  Name = "Number CameraFieldOfView",
  Default = "Enter",
  PlaceholderText = "Enter number",
  ClearText = true,
  Callback = function(value)
    getgenv().CameraZoom = tonumber(value) or 70
  end
})

AddToggle(Main5u6, {
  Name = "Camera FieldOfView",
  Default = false,
  Callback = function(state)
    getgenv().loopZoom = state
    local player = game:GetService("Players").LocalPlayer
    local camera = game:GetService("Workspace").CurrentCamera
    if camera then
      if state then
        if not getgenv().originalFOV then
          getgenv().originalFOV = camera.FieldOfView
        end
        getgenv().zoomConnection = game:GetService("RunService").Heartbeat:Connect(function()
          if getgenv().loopZoom then
            pcall(function()
              camera.FieldOfView = getgenv().originalFOV + (getgenv().CameraZoom or 0)
            end)
          end
        end)
      else
        if getgenv().zoomConnection then
          getgenv().zoomConnection:Disconnect()
          getgenv().zoomConnection = nil
        end
        if getgenv().originalFOV then
          camera.FieldOfView = getgenv().originalFOV
        end
      end
    end
  end
})

AddTextBox(Main5u6, {
  Name = "Number CameraZoom",
  Default = "Enter",
  PlaceholderText = "Enter zoom distance",
  ClearText = true,
  Callback = function(value)
    getgenv().CameraZoom = tonumber(value)
    if getgenv().isZoomActive then
      game.Players.LocalPlayer.CameraMaxZoomDistance = getgenv().CameraZoom
    end
  end
})

AddToggle(Main5u6, {
  Name = "Camera Zoom",
  Default = false,
  Callback = function(state)
    getgenv().isZoomActive = state
    local camera = game:GetService("Workspace").CurrentCamera
    if camera then
      if state then
        if not getgenv().initialMaxZoom then
          getgenv().initialMaxZoom = player.CameraMaxZoomDistance
        end
        getgenv().zoomUpdateConnection = game:GetService("RunService").Heartbeat:Connect(function()
          if getgenv().isZoomActive then
            pcall(function()
              local zoomValue = getgenv().CameraZoom
              player.CameraMaxZoomDistance = zoomValue
            end)
          end
        end)
      else
        if getgenv().zoomUpdateConnection then
          getgenv().zoomUpdateConnection:Disconnect()
          getgenv().zoomUpdateConnection = nil
        end
        if getgenv().initialMaxZoom then
          player.CameraMaxZoomDistance = getgenv().initialMaxZoom
        end
      end
    end
  end
})

local dWS, dJP = 16, 50
local wsCon, jpCon

AddTextBox(Main5u6, {
  Name = "WS Number",
  Default = "Enter",
  PlaceholderText = "Enter number",
  ClearText = true,
  Callback = function(v)
    local s = tonumber(v)
    if s then
      getgenv().WS = s
    end
  end
})

AddToggle(Main5u6, {
  Name = "WalkSpeed",
  Default = false,
  Callback = function(st)
    local plr = game:GetService("Players").LocalPlayer
    if st then
      wsCon = game:GetService("RunService").Heartbeat:Connect(function()
        local char = plr.Character or plr.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
          hum.WalkSpeed = getgenv().WS or dWS
        end
      end)
    else
      if wsCon then wsCon:Disconnect() wsCon = nil end
      local char = plr.Character
      local hum = char and char:FindFirstChildOfClass("Humanoid")
      if hum then
        hum.WalkSpeed = dWS
      end
    end
  end
})

AddTextBox(Main5u6, {
  Name = "JP Number",
  Default = "Enter",
  PlaceholderText = "Enter number",
  ClearText = true,
  Callback = function(v)
    local j = tonumber(v)
    if j then
      getgenv().JP = j
    end
  end
})

AddToggle(Main5u6, {
  Name = "JumpPower",
  Default = false,
  Callback = function(st)
    local plr = game:GetService("Players").LocalPlayer
    if st then
      jpCon = game:GetService("RunService").Heartbeat:Connect(function()
        local char = plr.Character or plr.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
          hum.JumpPower = getgenv().JP or dJP
        end
      end)
    else
      if jpCon then jpCon:Disconnect() jpCon = nil end
      local char = plr.Character
      local hum = char and char:FindFirstChildOfClass("Humanoid")
      if hum then
        hum.JumpPower = dJP
      end
    end
  end
})

local tpCon, cfCon = nil, nil
local cfMode = "Nope"
getgenv().TPSpeed = 1
getgenv().Cframewalk = 0
getgenv().TPWalk = false

AddTextBox(Main5u6, {
	Name = "Number Tpwalk",
	Default = "Enter",
	PlaceholderText = "Enter number",
	ClearText = true,
	Callback = function(v)
		local n = tonumber(v)
		if n then getgenv().TPSpeed = n end
	end
})

AddToggle(Main5u6, {
	Name = "Tpwalk",
	Default = false,
	Callback = function(state)
		getgenv().TPWalk = state
		if state then
			if not tpCon then
				local rs = game:GetService("RunService")
				local plr = game.Players.LocalPlayer
				tpCon = rs.Heartbeat:Connect(function()
					local ch = plr.Character
					local hum = ch and ch:FindFirstChildOfClass("Humanoid")
					if not ch or not hum or not hum.Parent or not getgenv().TPWalk then return end
					local ctrl = require(plr:WaitForChild("PlayerScripts"):WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
					local ct = ctrl.activeController
					local spd = tonumber(getgenv().TPSpeed) or 1
					if ct and ct.Name == "ClickToMoveController" then
						local hrp = ch:FindFirstChild("HumanoidRootPart")
						local tgt = ct.targetPoint
						if hrp and tgt then
							local dir = (tgt - hrp.Position)
							if dir.Magnitude > 0.1 then
								ch:TranslateBy(dir.Unit * spd)
							end
						end
						return
					end
					if hum.MoveDirection.Magnitude > 0 then
						ch:TranslateBy(hum.MoveDirection * spd)
					end
				end)
			end
		else
			if tpCon then
				tpCon:Disconnect()
				tpCon = nil
			end
		end
	end
})

AddDropdown(Main5u6, {
	Name = "Cframe walk Mode",
	Default = "Nope",
	Options = {"Tween Mode", "Nope"},
	Callback = function(opt)
		cfMode = opt
	end
})

AddTextBox(Main5u6, {
	Name = "Number Cframe walk",
	Default = "Enter",
	PlaceholderText = "Enter speed",
	ClearText = true,
	Callback = function(v)
		local n = tonumber(v)
		if n then getgenv().Cframewalk = n end
	end
})

AddToggle(Main5u6, {
	Name = "Cframe walk",
	Default = false,
	Callback = function(state)
		if state then
			if not cfCon then
				local plr = game.Players.LocalPlayer
				local rs = game:GetService("RunService")
				local cam = workspace.CurrentCamera
				cfCon = rs.RenderStepped:Connect(function()
					local ch = plr.Character or plr.CharacterAdded:Wait()
					local hrp = ch and ch:FindFirstChild("HumanoidRootPart")
					if not hrp or not getgenv().Cframewalk then return end
					local ctrl = require(plr:WaitForChild("PlayerScripts"):WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
					local ct = ctrl.activeController
					local mv = Vector3.zero
					local spd = tonumber(getgenv().Cframewalk) or 1
					if ct and ct.Name == "ClickToMoveController" then
						local tgt = ct.targetPoint
						if tgt then
							local dir = (tgt - hrp.Position)
							if dir.Magnitude > 0.1 then
								mv = dir.Unit
							end
						end
					else
						mv = ctrl:GetMoveVector()
						if mv.Magnitude > 0 then
							local fwd = Vector3.new(cam.CFrame.LookVector.X, 0, cam.CFrame.LookVector.Z).Unit
							local rgt = Vector3.new(cam.CFrame.RightVector.X, 0, cam.CFrame.RightVector.Z).Unit
							mv = (rgt * mv.X - fwd * mv.Z).Unit
						end
					end
					if mv.Magnitude > 0 then
						local tgt = hrp.CFrame + mv * spd
						if cfMode == "Tween Mode" then
							CreateTween(hrp, "CFrame", tgt, 0.1, false)
						else
							hrp.CFrame = tgt
						end
					end
				end)
			end
		else
			if cfCon then
				cfCon:Disconnect()
				cfCon = nil
			end
		end
	end
})

local _c_, _s_, _h_
local _H_

AddSlider(Main5u6, {
	Name = "StrafeJump Slowness",
	Increase = 0.01,
	MinValue = 0,
	MaxValue = 1,
	Default = 0,
	Callback = function(v)
		getgenv().TPJpBst = tonumber(v) or 0
		if getgenv().TPJpBst > 0 then
			if _s_ then _s_:Disconnect() _s_ = nil end
			if _c_ then _c_:Disconnect() _c_ = nil end
			if _h_ then _h_:Disconnect() _h_ = nil end
			_H_ = nil
			_c_ = game:GetService("RunService").Heartbeat:Connect(function()
				local _ch_ = game.Players.LocalPlayer.Character
				if _ch_ then
					local _hum_ = _ch_:FindFirstChildOfClass("Humanoid")
					if _hum_ and _hum_ ~= _H_ then
						if _s_ then _s_:Disconnect() _s_ = nil end
						if _h_ then _h_:Disconnect() _h_ = nil end
						_H_ = _hum_
						_s_ = _hum_.StateChanged:Connect(function(_, _st_)
							if (_st_ == Enum.HumanoidStateType.Jumping or _st_ == Enum.HumanoidStateType.Freefall) and getgenv().TPJpBst > 0 and not _h_ then
								_h_ = game:GetService("RunService").Heartbeat:Connect(function()
									if _hum_:GetState() == Enum.HumanoidStateType.Freefall and _hum_.MoveDirection.Magnitude > 0 then
										_ch_:TranslateBy(_hum_.MoveDirection.Unit * getgenv().TPJpBst)
									else
										if _h_ then _h_:Disconnect() _h_ = nil end
									end
								end)
							end
						end)
					elseif _hum_ and _hum_.Health <= 0 then
						if _s_ then _s_:Disconnect() _s_ = nil end
						if _h_ then _h_:Disconnect() _h_ = nil end
						_H_ = nil
					end
				end
			end)
		else
			if _s_ then _s_:Disconnect() _s_ = nil end
			if _c_ then _c_:Disconnect() _c_ = nil end
			if _h_ then _h_:Disconnect() _h_ = nil end
			_H_ = nil
		end
	end
})

local _P, _ori, _id = game.Players.LocalPlayer, game.Players.LocalPlayer.UserId

AddTextBox(Main5u6, {
	Name = "Custom Profile in leaderboard",
	Default = "Enter ID",
	PlaceholderText = "Enter UserID",
	ClearText = true,
	Callback = function(v)
		_id = tonumber(v)
		if _id then _P.UserId = _id end
	end
})

AddToggle(Main5u6, {
	Name = "Custom UserID",
	Default = false,
	Callback = function(s)
		_P.UserId = s and _id or (_ori or (game.CreatorType == Enum.CreatorType.User and game.CreatorId) or game:GetService("GroupService"):GetGroupInfoAsync(game.CreatorId).Owner.Id)
	end
})

getgenv()._pN = false
local _w, _oN, _cN
for _,p in ipairs(game.Players:GetPlayers()) do if p==game.Players.LocalPlayer then _oN=p.Name break end end

local function _m(n,r,s)
	s = s or getgenv()._pN
	if r then
		for _,x in ipairs(_w or {}) do x:Disconnect() end
		_w = {}
		if not (_cN and _oN) then return end
		for _,v in ipairs(game:GetDescendants()) do
			if v:IsA("TextLabel") and v.Text then
				v.Text = v.Text:gsub(_cN,_oN)
			end
		end
		return
	end
	if not (n and _oN) or not s then return end
	_cN = n
	for _,v in ipairs(game:GetDescendants()) do
		if v:IsA("TextLabel") and v.Text then
			if v.Text:find(_oN) then v.Text = v.Text:gsub(_oN,n) end
			table.insert(_w,v:GetPropertyChangedSignal("Text"):Connect(function()
				if getgenv()._pN then v.Text = v.Text:gsub(_oN,n) end
			end))
		end
	end
	table.insert(_w,game.DescendantAdded:Connect(function(v)
		if v:IsA("TextLabel") and v.Text then
			if v.Text:find(_oN) then v.Text = v.Text:gsub(_oN,n) end
			v:GetPropertyChangedSignal("Text"):Connect(function()
				if getgenv()._pN then v.Text = v.Text:gsub(_oN,n) end
			end)
		end
	end))
end

AddTextBox(Main5u6, {
	Name = "Custom Name",
	Default = "Enter",
	PlaceholderText = "Enter name to replace",
	ClearText = true,
	Callback = function(i)
		if i ~= "" and i ~= _oN then
			_m(i, false, getgenv()._pN)
		end
	end
})

AddToggle(Main5u6, {
	Name = "Name Protection",
	Default = false,
	Callback = function(s)
		getgenv()._pN = s
		if s and _cN then
			_m(_cN, false, true)
		else
			_m(nil, true)
		end
	end
})

local C = loadstring(game:HttpGet("https://raw.githubusercontent.com/hooaczx/Script/main/FreeNameTag"))()

AddTextBox(Main5u6, {
    Name = "CustomNameTag",
    Default = "Enter",
    PlaceholderText = "Enter name",
    ClearText = true,
    Callback = function(value)
      C.changeName(value)
    end
})

AddToggle(Main5u6, {
    Name = "NameTag",
    Default = false,
    Callback = function(value)
      C.toggle(value)
    end
})

AddColorPicker(Main5u6, {
    Name = "NameTagColor",
    Default = Color3.fromRGB(255, 255, 255),
    Callback = function(color)
       C.changeColor(color)
    end
})

AddSlider(Main5u6, {
    Name = "NameTagheight",
    Increase = 0.1,
    MinValue = 1,
    MaxValue = 10,
    Default = 1,
    Callback = function(value)
      C.changeHeight(value)
    end
})

local f = loadstring(game:HttpGet("https://raw.githubusercontent.com/hooaczx/Script/main/AuraCharacter"))()

AddToggle(Main5u6, {
    Name = "Aura",
    Default = false,
    Callback = function(state)
        f.aura(state, CreateTween)
    end
})

AddColorPicker(Main5u6, {
    Name = "Aura Color",
    Default = _G._AuraColor or Color3.fromRGB(255, 255, 255),
    Callback = function(color)
        f.SetAuraColor(color)
    end
})

AddSlider(Main5u6, {
    Name = "Halo Height",
    Increase = 0.1,
    MinValue = 0,
    MaxValue = 10,
    Default = 0,
    Callback = function(value)
        f.SetHaloDistance(value)
    end
})

AddDropdown(Main5u6, {
    Name = "Aura Mode",
    Default = "up",
    Options = {"up", "down", "left", "right", "front", "back"},
    Callback = function(option)
        f.SetAuraMode(option)
    end
})

AddSlider(Main5u6, {
    Name = "Aura Distance",
    Increase = 0.1,
    MinValue = 0,
    MaxValue = 10,
    Default = 0,
    Callback = function(value)
        f.SetAuraDistance(value)
    end
})

local M = loadstring(game:HttpGet("https://raw.githubusercontent.com/hooaczx/Script/main/Dodgeplayers"))()

AddToggle(Main5u6, {
  Name = "Dodge players on touch",
  Default = false,
  Callback = function(state)
     M.toggle(state)
  end
})

local _b_t,_t_t,_a_t= nil, {}, false
 
AddToggle(Main5u6, {
    Name = "Anti Sit",
    Default = false,
    Callback = function(_x_t)
        _a_t = _x_t
        if _a_t then
            if not _b_t then
                _b_t = game:GetService("RunService").Heartbeat:Connect(function()
                    local _f_t = false
                    local _c_t = false
                    for _, v in pairs(workspace:GetDescendants()) do
                        if (v:IsA("Seat") or v:IsA("VehicleSeat")) and not v:FindFirstChild("SeatWeld") then
                            local _id_t = v:GetDebugId()
                            if _t_t[_id_t] == nil then
                                _t_t[_id_t] = v.Disabled
                            end
                            if v.Disabled ~= true then
                                v.Disabled = true
                                _c_t = true
                            end
                            if not v.Disabled then
                                _f_t = true
                            end
                            if _t_t[_id_t] ~= v.Disabled then
                                _t_t[_id_t] = v.Disabled
                                _c_t = true
                            end
                        end
                    end
                    if not _f_t and not _c_t then
                        _b_t:Disconnect()
                        _b_t = nil
                        _t_t = {}
                    end
                end)
            end
        else
            if _b_t then
                _b_t:Disconnect()
                _b_t = nil
            end
            _t_t = {}
            for _, v in pairs(workspace:GetDescendants()) do
                if (v:IsA("Seat") or v:IsA("VehicleSeat")) and not v:FindFirstChild("SeatWeld") then
                    if v.Disabled then
                        v.Disabled = false
                    end
                end
            end
        end
    end
})

AddToggle(m,{
    Name = "Anti Adonis Bypass",
    Default = false,
    Callback = function(s)
        local st,gg,hf=db.setthreadidentity,getgc,hookfunction
        local di=(debug and type(debug.info)=="function"and debug.info)or(debug and type(debug.getinfo)=="function"and debug.getinfo)
        if type(st)~="function"or type(gg)~="function"or type(hf)~="function"or not di then return end
        if not _G.i then
            _G.i=true
            pcall(function()st(2)end)
            for _,v in gg(true)do
                if type(v)=="table"then
                    local d,k=rawget(v,"Detected"),rawget(v,"Kill")
                    if type(d)=="function"and not _G.od then _G.d,_G.od=d,d end
                    if rawget(v,"Variables")and rawget(v,"Process")and type(k)=="function"and not _G.ok then _G.k,_G.ok=k,k end
                end
            end
            _G.oi=di
            pcall(function()st(7)end)
        end
        if s then
            if _G.d then _G.hd=hf(_G.d,function(...)return true end)end
            if _G.k then _G.hk=hf(_G.k,function(...)end)end
            if _G.oi then
                _G.hi=hf(di,newcclosure(function(a,...)if a==_G.d then return coroutine.yield(coroutine.running())end return _G.oi(a,...)end))
            end
        else
            if _G.d and _G.hd then hf(_G.d,_G.od)end
            if _G.k and _G.hk then hf(_G.k,_G.ok)end
            if _G.oi and _G.hi then hf(di,_G.oi)end
            pcall(function()st(2)end)
        end
    end
})

local _c___, _p___

AddToggle(Main5u6, {
    Name = "ClickTp",
    Default = false,
    Callback = function(_s___)
        if _s___ then
            game:GetService("UserInputService").InputBegan:Connect(function(_i___)
                if _i___.UserInputType == Enum.UserInputType.Touch or _i___.UserInputType == Enum.UserInputType.MouseButton1 then
                    _p___ = _i___.Position
                end
            end)
            _c___ = game:GetService("UserInputService").InputEnded:Connect(function(_i___, _g___)
                if _g___ or not _p___ or (_i___.Position - _p___).Magnitude > 5 then return end
                if _i___.UserInputType ~= Enum.UserInputType.Touch and _i___.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
                local _m___ = game.Players.LocalPlayer:GetMouse()
                local _b___ = false
                if _i___.UserInputType == Enum.UserInputType.MouseButton1 then
                    _b___ = game:GetService("GuiService"):IsMouseOverGui()
                    local _h___ = ((not is_sirhurt_closure and not (syn and DrawingImmediate)) and syn and syn.protect_gui and game:GetService("CoreGui")) or (typeof(get_hidden_gui) == "function" and get_hidden_gui()) or (typeof(gethui) == "function" and gethui()) or game:GetService("CoreGui")
                    if _m___.Target and (_m___.Target:IsDescendantOf(_h___) or _m___.Target:IsDescendantOf(game:GetService("CoreGui"))) then
                        _b___ = true
                    end
                end
                if _m___.Target then
                    local parent = _m___.Target
                    while parent do
                        if parent:IsA("GuiObject") then
                            _b___ = true
                            break
                        end
                        parent = parent.Parent
                    end
                end
                if game:GetService("UserInputService"):GetFocusedTextBox() or _b___ then return end
                if _m___.Target and _m___.Target.Transparency < 1 then
                    local _p2___ = _m___.Hit.p
                    local _c2___ = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
                    local _h2___ = _c2___:WaitForChild("HumanoidRootPart")
                    _h2___.CFrame = CFrame.new(_p2___)
                end
            end)
        elseif _c___ then
            _c___:Disconnect()
            _c___ = nil
        end
    end
})

local x1 = false
local x2
local x3

AddToggle(Main5u6, {
    Name = "Touch Fling",
    Default = false,
    Callback = function(x4)
        x1 = x4
        if x1 then
          if not x2 then
            x2 = RunService.Heartbeat:Connect(function()
                local x5 = game:GetService("Players").LocalPlayer
                local x6, x7, x8, x9 = nil, nil, nil, 0.1
                x6 = x5.Character
                x7 = x6 and x6:FindFirstChild("HumanoidRootPart")
                if x7 then
                    x8 = x7.Velocity
                    x7.Velocity = x8 * 10000 + Vector3.new(0, 10000, 0)
                    RunService.RenderStepped:Wait()
                    x7.Velocity = x8
                    RunService.Stepped:Wait()
                    x7.Velocity = x8 + Vector3.new(0, x9, 0)
                    x9 = -x9
                 end
              end)
           end
        else
            if x2 then
                x2:Disconnect()
                x2 = nil
            end
        end
    end
})

local _ct_, _st_ = nil, {}

AddToggle(Main5u6, {
  Name = "Anti Fling",
  Default = false,
  Callback = function(state)
    if state then
      if not _ct_ then
        _ct_ = RunService.RenderStepped:Connect(function()
          if #game:GetService("Players"):GetPlayers() <= 1 then return end
          for _, pl in ipairs(game:GetService("Players"):GetPlayers()) do
            if pl ~= game:GetService("Players").LocalPlayer then 
              if pl.Character and pl.Character.Parent == workspace then
                for _, part in ipairs(pl.Character:GetDescendants()) do
                  if part:IsA("BasePart") then
                    local partsCheck = {}
                    partsCheck[1] = part
                    local Parts = part:GetConnectedParts()
                    for i = 1, #Parts do
                      partsCheck[i + 1] = Parts[i]
                    end
                    for i = 1, #partsCheck do
                      local p = partsCheck[i]
                      local old = _st_[p]
                      local cur = p.CanCollide
                      if old == nil then
                        _st_[p] = cur
                        if cur then
                          p.CanCollide = false
                        end
                      elseif old ~= cur then
                        if cur then
                          p.CanCollide = false
                        end
                        _st_[p] = p.CanCollide
                      end
                    end
                  end
                end
              end
            end
          end
        end)
      end
    else
      if _ct_ then
        _ct_:Disconnect()
        _ct_ = nil
      end
      for p, o in pairs(_st_) do
        if p and p:IsA("BasePart") then
          p.CanCollide = o
        end
      end
      table.clear(_st_)
    end
  end
})

if ifGameId == 16116270224 or ifGameId == 16552821455 or ifGameId == 18984416148 then
    AddWarningMessage(Main5u6, {
        WarningMessage = "Noclip, Removed due to security concerns, may be banned from the game",
        ImageId = "rbxthumb://type=Asset&id=116573046454042&w=420&h=420"
    })
else
    local ncp, ncpDflt = {}, nil
    AddToggle(Main5u6, {
        Name = "No-Clip",
        Default = false,
        Callback = function(state)
            if state then
                if not ncpDflt then 
                    ncpDflt = game:GetService("RunService").Stepped:Connect(function()
                        local character = game.Players.LocalPlayer.Character
                        if character then
                            for _, part in ipairs(character:GetDescendants()) do
                                if part:IsA("BasePart") then
                                    if not ncp[part] then
                                        ncp[part] = part.CanCollide
                                    end
                                    part.CanCollide = false
                                end
                            end 
                        end
                    end)
                end
            else
                if ncpDflt then
                    ncpDflt:Disconnect()
                    ncpDflt = nil
                end
                for part, canCollide in pairs(ncp) do
                    if part and part.Parent then
                        part.CanCollide = canCollide
                    end
                end
                table.clear(ncp)
            end
        end
    })
end

local antiIdle

AddToggle(Main5u6, {
    Name = "Anti-Idle",
    Default = false,
    Callback = function(state)
        if state then
            if not antiIdle then antiIdle = game:GetService("Players").LocalPlayer.Idled:Connect(function()
                game:GetService("VirtualUser"):CaptureController()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
            end)
         end
        else
            if antiIdle then
                antiIdle:Disconnect()
                antiIdle = nil
            end
        end
    end
})

local __7Z = {
	Q9 = nil,
	Ra = nil,
	Lk = nil,
	Vv = false,
	Tt = false,
	Yy = nil,
	Mm = nil
}

AddToggle(Main5u6, {
	Name = "Character Lock CFrame",
	Default = false,
	Callback = function(Uu)
		__7Z.Vv = Uu
		if not Uu then
			if __7Z.Q9 then __7Z.Q9:Disconnect() __7Z.Q9 = nil end
			if __7Z.Mm then __7Z.Mm:Disconnect() __7Z.Mm = nil end
			__7Z.Ra = nil
			__7Z.Lk = nil
			return
		end
		if not __7Z.Q9 then
			__7Z.Q9 = game:GetService("RunService").Heartbeat:Connect(function()
				if not __7Z.Vv then return end
				local Dq = localPuppet.Character
				local We = Dq and Dq:FindFirstChildOfClass("Humanoid")
				local Xx = Dq and Dq:FindFirstChild("HumanoidRootPart")
				if Dq and We and Xx and Xx ~= __7Z.Lk then
					__7Z.Ra = Dq
					if __7Z.Mm then __7Z.Mm:Disconnect() end
					__7Z.Lk = Xx
					__7Z.Yy = Xx.CFrame
					__7Z.Mm = Xx:GetPropertyChangedSignal("CFrame"):Connect(function()
						if __7Z.Vv and __7Z.Yy then
							__7Z.Tt = true
							Xx.CFrame = __7Z.Yy
							game:GetService("RunService").Heartbeat:Wait()
							__7Z.Tt = false
						end
					end)
				end
				if Xx and not __7Z.Tt then
					__7Z.Yy = Xx.CFrame
				end
			end)
		end
	end
})

local cm = loadstring(game:HttpGet("https://raw.githubusercontent.com/hooaczx/Script/main/Cameranoclip"))()

AddToggle(Main5u6, {
    Name = "Camera Noclip",
    Default = false,
    Callback = function(value)
       cm(value)
    end
})

local _t_t = {
	_e_e = false,
	_t_r = nil,
	_a0_ = nil,
	_a1_ = nil,
	hbt = nil,
	hue = 0
}

AddToggle(Main5u6, {
	Name = "Trail Rainbow",
	Default = false,
	Callback = function(state)
		_t_t._e_e = state
		if _t_t._e_e then
			if not _t_t.hbt then
				_t_t.hbt = game:GetService("RunService").Heartbeat:Connect(function()
					local Plr = game:GetService("Players").LocalPlayer
					local char = Plr.Character
					local hrp = char and char:FindFirstChild("HumanoidRootPart")
					if not char or not hrp then
						if _t_t._t_r then _t_t._t_r:Destroy() _t_t._t_r = nil end
						if _t_t._a0_ then _t_t._a0_:Destroy() _t_t._a0_ = nil end
						if _t_t._a1_ then _t_t._a1_:Destroy() _t_t._a1_ = nil end
					else
						if not _t_t._t_r then _t_t._t_r = Create("Trail", hrp)
						elseif _t_t._t_r.Parent ~= hrp then _t_t._t_r.Parent = hrp end
						if not _t_t._a0_ then _t_t._a0_ = Create("Attachment", hrp)
						elseif _t_t._a0_.Parent ~= hrp then _t_t._a0_.Parent = hrp end
						if not _t_t._a1_ then _t_t._a1_ = Create("Attachment", hrp)
						elseif _t_t._a1_.Parent ~= hrp then _t_t._a1_.Parent = hrp end
						_t_t._t_r.Attachment0 = _t_t._a0_
						_t_t._t_r.Attachment1 = _t_t._a1_
						_t_t._a0_.Position = Vector3.new(0,0,0)
						_t_t._a1_.Position = Vector3.new(0,-0.2,0)
						_t_t.hue = (_t_t.hue + 1) % 360
						local keys = {}
						for i=0,4 do
							local sh = (_t_t.hue + i*72) % 360
							table.insert(keys, ColorSequenceKeypoint.new(i/4, Color3.fromHSV(sh/360,1,1)))
						end
						_t_t._t_r.Color = ColorSequence.new(keys)
					end
				end)
			end
		else
			if _t_t.hbt then _t_t.hbt:Disconnect() _t_t.hbt = nil end
			if _t_t._t_r then _t_t._t_r:Destroy() _t_t._t_r = nil end
			if _t_t._a0_ then _t_t._a0_:Destroy() _t_t._a0_ = nil end
			if _t_t._a1_ then _t_t._a1_:Destroy() _t_t._a1_ = nil end
		end
	end
})

local _l_t = {
	_on = false,
	_lt = nil,
	_hbt = nil
}

AddToggle(Main5u6, {
	Name = "Light Around Character",
	Default = false,
	Callback = function(s)
		_l_t._on = s
		if _l_t._on then
			if not _l_t._hbt then
				_l_t._hbt = game:GetService("RunService").Heartbeat:Connect(function()
					local c = game.Players.LocalPlayer.Character
					local hrp = c and c:FindFirstChild("HumanoidRootPart")
					if hrp then
						if not _l_t._lt then
	                       local l=Create("PointLight",gui,{
			                     Name = "Character_Light_1hooaczx1",
				                 Range = 30,
						     	Brightness = 2.3,
							     Color = Color3.new(1,1,1)
		                	})
							_l_t._lt = l
						elseif _l_t._lt.Parent ~= hrp then
							_l_t._lt.Parent = hrp
						end
					else
						if _l_t._lt then
							_l_t._lt:Destroy()
							_l_t._lt = nil
						end
					end
				end)
			end
		else
			if _l_t._hbt then
				_l_t._hbt:Disconnect()
				_l_t._hbt = nil
			end
			if _l_t._lt then
				_l_t._lt:Destroy()
				_l_t._lt = nil
			end
		end
	end
})

function addui(on)
	if on then
		if isOn then return end
		isOn = true
		gui = Create("ScreenGui", ((not is_sirhurt_closure and not (syn and DrawingImmediate)) and syn and syn.protect_gui and game:GetService("CoreGui")) or (typeof(get_hidden_gui) == "function" and get_hidden_gui()) or (typeof(gethui) == "function" and gethui()) or game:GetService("CoreGui"), {
			Name = "fap_1hooaczx1", ResetOnSpawn = false, DisplayOrder = math.huge
		})
		Create("UIListLayout", gui, {SortOrder=Enum.SortOrder.LayoutOrder, FillDirection=Enum.FillDirection.Vertical, Padding=UDim.new(0,4)})
		local function mkframe(txt,col)
			local f=Create("Frame",gui,{
				Size=UDim2.new(0,160,0,24),
				BackgroundColor3=Color3.new(0,0,0),
				BackgroundTransparency=0.6,
				BorderSizePixel=0,
				Active=true,
				Draggable=true
			})
			local l=Create("TextLabel",f,{
				Size=UDim2.new(1,0,1,0),
				BackgroundTransparency=1,
				TextColor3=col,
				Text=txt,
				Font=Enum.Font.Gotham,
				TextScaled=true,
				TextXAlignment=Enum.TextXAlignment.Left
			})
			Create("UIPadding",l,{PaddingLeft=UDim.new(0,5)})
			Create("UICorner",f,{CornerRadius=UDim.new(0,4)})
			return f,l
		end
		local _,fpsLabel=mkframe("fps: ...",Color3.fromRGB(255,255,0))
		local _,pingLabel=mkframe("ping: ...",Color3.fromRGB(0,255,255))
		local posBtn = Create("TextButton", gui, {
			Size=UDim2.new(0,160,0,24),
			BackgroundColor3=Color3.new(0,0,0),
			BackgroundTransparency=0.6,
			BorderSizePixel=0,
			AutoButtonColor=false,
			TextColor3=Color3.new(1,1,1),
			Text="X: ? Y: ? Z: ?",
			Font=Enum.Font.Gotham,
			TextScaled=true,
			TextXAlignment=Enum.TextXAlignment.Left,
			Active=true,
			Draggable=true
		})
		Create("UIPadding",posBtn,{PaddingLeft=UDim.new(0,5)})
		Create("UICorner",posBtn,{CornerRadius=UDim.new(0,4)})
		posBtn.MouseButton1Click:Connect(function()
			local plr = game.Players.LocalPlayer
			local hrp = plr and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
        	if hrp then
	       	local p = hrp.Position
	       	local x, y, z = string.format("%.2f", p.X), string.format("%.2f", p.Y), string.format("%.2f", p.Z)
	       	local code = string.format([[local c = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
               local h = c:WaitForChild("HumanoidRootPart")
               h.CFrame = CFrame.new(%s, %s, %s)
               ]], x, y, z)
		       setclipboard(code)
		   	game.StarterGui:SetCore("SendNotification", {
					Title="Copy", Text="Copied position!", Duration=3
		   	})
			end
		end)
		con = game:GetService("RunService").RenderStepped:Connect(function()
			local fpsTarget = math.floor(1 / game:GetService("RunService").RenderStepped:Wait())
			if fpsV < fpsTarget then fpsV+=1 elseif fpsV > fpsTarget then fpsV-=1 end
			local pstat = game:GetService("Stats"):FindFirstChild("PerformanceStats")
			local pingVal = pstat and pstat:FindFirstChild("Ping") and math.floor(pstat.Ping:GetValue()) or 0
			fpsLabel.Text = "fps: "..fpsV
			pingLabel.Text = "ping: "..pingVal.."ms"
			local plr = game.Players.LocalPlayer
			local hrp = plr and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
			if hrp then
				local p=hrp.Position
				posBtn.Text=string.format("X: %s Y: %s Z: %s", string.format("%.0f", p.X), string.format("%.0f", p.Y), string.format("%.0f", p.Z))
			else
				posBtn.Text="X: ? Y: ? Z: ?"
			end
		end)
		gui.AncestryChanged:Connect(function()
			if not gui:IsDescendantOf(game) then
				if con then con:Disconnect() con=nil end
				isOn=false
			end
		end)
	else
		if not isOn then return end
		isOn=false
		if con then con:Disconnect() con=nil end
		if gui then gui:Destroy() gui=nil end
	end
end

AddToggle(Main5u6, {
	Name="FpsAndPingAndPos",
	Default=false,
	Callback=addui
})

local t1w8y6 = 2
local z9o4p3 = false
local r5j7b1v = nil
local y4654hhvc = nil

function GetAnimationContainer(model)
	local container = model:FindFirstChildOfClass("AnimationController")
	if not container then
		local humanoid = model:FindFirstChildOfClass("Humanoid")
		if humanoid then
			container = humanoid:FindFirstChildOfClass("Animator")
		end
	end
	return container
end

function CloneAnimations(model)
	local container = GetAnimationContainer(model)
	if not container then
		return
	end
	for _, child in pairs(container:GetChildren()) do
		if (child:IsA("Animation") or child:IsA("AnimationTrack") or child:IsA("Animator") or child:IsA("Humanoid")) and child:GetAttribute("IsClone") then
			child:Destroy()
		end
	end
	for _, anim in pairs(container:GetChildren()) do
		if (anim:IsA("Animation") or anim:IsA("AnimationTrack") or anim:IsA("Animator") or anim:IsA("Humanoid")) and not anim:GetAttribute("IsClone") then
			local clonedAnim = anim:Clone()
			clonedAnim.Parent = container
			clonedAnim:SetAttribute("IsClone", true)
		end
	end
end

function g2y5x8v9(model)
	local cloneModel = Instance.new("Model")
	cloneModel.Name = "X3z5Q"
	local humanoidRoot = model:FindFirstChild("HumanoidRootPart")
	if not humanoidRoot then
	    return
	end
	local rootCFrame = humanoidRoot.CFrame
	CloneAnimations(model)
	for _, part in pairs(model:GetDescendants()) do
		if part:IsA("BasePart") and part.Transparency < 1 then
			local clonePart = part:Clone()
			for _, child in pairs(clonePart:GetChildren()) do
				if not child:IsA("SpecialMesh") and not child:IsA("Texture") and not child:IsA("Decal") then
					child:Destroy()
				end
			end
			clonePart.CanCollide = false
			clonePart.CanQuery = part.CanTouch
			clonePart.CanTouch = part.CanTouch
			clonePart.Anchored = true
			clonePart.Material = part.Material
			clonePart.CFrame = rootCFrame:ToWorldSpace(humanoidRoot.CFrame:ToObjectSpace(part.CFrame))
			clonePart.Parent = cloneModel
			local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
			local tweenProps = {Transparency = 1}
			local success, tween = pcall(function()
				return TweenService:Create(clonePart, tweenInfo, tweenProps)
			end)
			if success then
				tween:Play()
				tween.Completed:Connect(function()
					if clonePart and clonePart.Parent then
						clonePart:Destroy()
					end
				end)
			end
		end
	end
	cloneModel.Parent = workspace
	game:GetService("Debris"):AddItem(cloneModel, 1)
end

function v2o8f9d3(model)
	local humanoid = model:WaitForChild("Humanoid")
	local humanoidRoot = model:WaitForChild("HumanoidRootPart")
	if not humanoidRoot then
		return
	end
	
	local lastPos = humanoidRoot.Position
	
	r5j7b1v = RunService.Heartbeat:Connect(function()
		if not z9o4p3 then
			if r5j7b1v then
				r5j7b1v:Disconnect()
				r5j7b1v = nil
			end
			return
		end
		
		local currentRoot = model:FindFirstChild("HumanoidRootPart")
		if not currentRoot then
			return
		end
		
		local currentPos = currentRoot.Position
		local distance = (lastPos - currentPos).Magnitude
		if humanoid.MoveDirection.Magnitude > 0 and distance >= t1w8y6 then
			g2y5x8v9(model)
			lastPos = currentPos
		end
	end)
end

AddToggle(Main5u6, {
    Name = "Walk Character Afterimage Effect",
    Default = false,
    Callback = function(state)
        z9o4p3 = state
        if z9o4p3 then
            if player.Character then
                v2o8f9d3(player.Character)
            end
            y4654hhvc = player.CharacterAdded:Connect(function(character)
                if z9o4p3 then
                    v2o8f9d3(character)
                end
            end)
        else
            if r5j7b1v then
                r5j7b1v:Disconnect()
                r5j7b1v = nil
            end
            if y4654hhvc then
                y4654hhvc:Disconnect()
                y4654hhvc = nil
            end
        end
    end
})

local _d, _i, _e, _c, _x = 14.4, 8, false, nil, 1
local _s = tick() - (_i / 24 * _d)
local _a = true
local _w = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"}

AddTextBox(Main5u6, {
	Name = "Day Cycle Speed",
	Default = "Enter",
	PlaceholderText = "Enter number",
	ClearText = true,
	Callback = function(_v)
		local _n = tonumber(_v)
		if _n and _n > 0 then
			_d = 14.4 / _n
			_s = tick() - (game.Lighting.ClockTime / 24 * _d)
		else
			warn("Invalid number entered")
		end
	end
})

AddToggle(Main5u6, {
	Name = "Day Cycle",
	Default = false,
	Callback = function(_z)
		_e = _z
		if _z then
			_c = game:GetService("RunService").Stepped:Connect(function()
				local _t = (tick() - _s) / _d * 24
				if _t >= 12 then _a = false end
				if _t >= 24 then
					_s = tick()
					_x = (_x % 7) + 1
					_a = true
				end
				game.Lighting.ClockTime = _t % 24
			end)
		elseif _c then
			_c:Disconnect()
			_c = nil
		end
	end
})

loadstring(game:HttpGet("https://raw.githubusercontent.com/hooaczx/Script/refs/heads/main/feedback"))()

local MusicPlayerTab = MakeTab({
   Name = "Music Player",
   image = "rbxthumb://type=Asset&id=107723524907022&w=420&h=420"
})
  
AddMusicPlayer(MusicPlayerTab, {
    Default = "Enter Id Music", 
    PlaceholderText = "Enter Id Music", 
    ClearText = true
})
