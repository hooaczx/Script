local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\253\107","\100\211\69\177\58\58\105"),function(v42) if (v9(v42,2)==79) then local v102=0;while true do if (0==v102) then v30=v8(v11(v42,1,1));return "";end end else local v103=0;local v104;while true do if (0==v103) then v104=v10(v8(v42,16));if v30 then local v121=v13(v104,v30);v30=nil;return v121;else return v104;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v105=(v43/(2^(v44-(1 -0))))%((5 -3)^(((v45-1) -(v44-(439 -(145 + 293)))) + 1)) ;return v105-(v105%(2 -1)) ;else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + (1 -0) ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + (432 -(44 + 386)) ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==1) then v58=1;v59=(v31(v57,1,20) * (2^(82 -50))) + v56 ;v55=2;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (2==v55) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or 1 ;v55=3;end if (v55==3) then if (v60==(0 + 0)) then if (v59==0) then return v61 * 0 ;else v60=1;v58=0;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end end end local function v36(v62) local v63;if  not v62 then local v108=0;while true do if (v108==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v80=1,v69 do local v81=v32();local v82;if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v70[v80]=v82;end v68[3]=v32();for v84=1,v34() do local v85=v32();if (v31(v85,1,1)==(568 -(367 + 201))) then local v112=0;local v113;local v114;local v115;while true do if (0==v112) then v113=v31(v85,2,3);v114=v31(v85,931 -(214 + 713) ,6);v112=1;end if (3==v112) then if (v31(v114,3,3)==1) then v115[881 -(282 + 595) ]=v70[v115[1641 -(1523 + 114) ]];end v65[v84]=v115;break;end if (v112==1) then v115={v33(),v33(),nil,nil};if (v113==0) then v115[3]=v33();v115[4]=v33();elseif (v113==1) then v115[3]=v34();elseif (v113==2) then v115[3]=v34() -(2^16) ;elseif (v113==(3 + 0)) then local v132=0;while true do if (v132==0) then v115[3]=v34() -(2^16) ;v115[2 + 2 ]=v33();break;end end end v112=2;end if (2==v112) then if (v31(v114,773 -(201 + 571) ,1)==1) then v115[2]=v70[v115[2]];end if (v31(v114,2,2)==(1 + 0)) then v115[1141 -(116 + 1022) ]=v70[v115[3]];end v112=3;end end end end for v86=1,v34() do v66[v86-(1 + 0) ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v88=v75;local v89=v76;local v90=v77;local v91=v38;local v92=1;local v93= -(1 -0);local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v109=0,v96 do if (v109>=v90) then v94[v109-v90 ]=v95[v109 + 1 ];else v98[v109]=v95[v109 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do v100=v88[v92];v101=v100[1];if (v101<=38) then if (v101<=18) then if (v101<=8) then if (v101<=(12 -9)) then if (v101<=1) then if (v101==0) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end else v98[v100[2]]=v98[v100[3]];end elseif (v101==2) then v98[v100[2]][v98[v100[3]]]=v100[4];else v98[v100[2]]=v98[v100[3]][v100[4]];end elseif (v101<=5) then if (v101==4) then v98[v100[2]]=v74[v100[3]];else local v141=0;local v142;local v143;local v144;while true do if (v141==1) then v144={};v143=v18({},{[v7("\218\70\252\231\133\71\175","\215\133\25\149\137\225\34")]=function(v320,v321) local v322=0;local v323;while true do if (v322==0) then v323=v144[v321];return v323[1][v323[1067 -(68 + 997) ]];end end end,[v7("\13\197\225\53\235\193\60\254\234\40","\168\82\154\143\80\156")]=function(v324,v325,v326) local v327=v144[v325];v327[1][v327[2]]=v326;end});v141=2;end if (v141==0) then v142=v89[v100[3]];v143=nil;v141=1;end if (v141==2) then for v329=1271 -(226 + 1044) ,v100[4] do v92=v92 + (4 -3) ;local v330=v88[v92];if (v330[3 -2 ]==30) then v144[v329-(3 -2) ]={v98,v330[3]};else v144[v329-1 ]={v73,v330[3]};end v97[ #v97 + 1 ]=v144;end v98[v100[4 -2 ]]=v40(v142,v143,v74);break;end end end elseif (v101<=6) then v98[v100[2]]=v73[v100[3]];elseif (v101>7) then for v296=v100[2],v100[120 -(32 + 85) ] do v98[v296]=nil;end else local v232=v100[2];v98[v232]=v98[v232](v21(v98,v232 + 1 + 0 ,v100[2 + 1 ]));end elseif (v101<=13) then if (v101<=10) then if (v101==9) then local v147=v100[2];local v148=v98[v147];local v149=v98[v147 + 2 ];if (v149>0) then if (v148>v98[v147 + 1 ]) then v92=v100[888 -(261 + 624) ];else v98[v147 + 3 ]=v148;end elseif (v148<v98[v147 + 1 ]) then v92=v100[3];else v98[v147 + (4 -1) ]=v148;end elseif (v98[v100[2 + 0 ]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=11) then local v150=0;local v151;local v152;while true do if (v150==1) then for v336=v151 + 1 ,v100[3] do v15(v152,v98[v336]);end break;end if (v150==0) then v151=v100[2];v152=v98[v151];v150=1;end end elseif (v101>(3 + 9)) then v98[v100[2]][v98[v100[3]]]=v98[v100[4]];else v98[v100[2]]=v98[v100[3]]%v100[4] ;end elseif (v101<=15) then if (v101>14) then if (v100[2]==v98[v100[4]]) then v92=v92 + (958 -(892 + 65)) ;else v92=v100[3];end else local v153=0;local v154;local v155;local v156;while true do if (v153==2) then for v337=1,v100[4] do local v338=0;local v339;while true do if (v338==1) then if (v339[1]==(1453 -(630 + 793))) then v156[v337-1 ]={v98,v339[3]};else v156[v337-1 ]={v73,v339[3]};end v97[ #v97 + 1 ]=v156;break;end if (v338==0) then v92=v92 + 1 ;v339=v88[v92];v338=1;end end end v98[v100[2]]=v40(v154,v155,v74);break;end if (v153==1) then v156={};v155=v18({},{[v7("\186\141\58\5\76\75\145","\233\229\210\83\107\40\46")]=function(v340,v341) local v342=v156[v341];return v342[1][v342[1082 -(1020 + 60) ]];end,[v7("\254\125\60\211\18\200\76\54\211\29","\101\161\34\82\182")]=function(v343,v344,v345) local v346=0;local v347;while true do if (v346==0) then v347=v156[v344];v347[1][v347[2]]=v345;break;end end end});v153=2;end if (v153==0) then v154=v89[v100[3]];v155=nil;v153=1;end end end elseif (v101<=16) then v92=v100[3];elseif (v101==(30 -13)) then do return v98[v100[2]]();end else v98[v100[6 -4 ]]=v98[v100[3]]%v98[v100[4]] ;end elseif (v101<=(51 -23)) then if (v101<=23) then if (v101<=20) then if (v101==19) then v98[v100[2]]=v73[v100[353 -(87 + 263) ]];else v98[v100[2]][v98[v100[3]]]=v100[184 -(67 + 113) ];end elseif (v101<=(16 + 5)) then local v162=v100[2];v98[v162]=v98[v162]();elseif (v101>(53 -31)) then local v240=0;local v241;while true do if (v240==0) then v241=v100[2];v98[v241]=v98[v241]();break;end end else for v302=v100[2],v100[3] do v98[v302]=nil;end end elseif (v101<=(118 -93)) then if (v101>(18 + 6)) then v98[v100[2]]=v98[v100[11 -8 ]] + v100[4] ;else v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;end elseif (v101<=26) then local v166=v100[954 -(802 + 150) ];do return v98[v166](v21(v98,v166 + 1 ,v100[3]));end elseif (v101==27) then local v242=0;local v243;local v244;while true do if (v242==1) then v98[v243 + (1 -0) ]=v244;v98[v243]=v244[v100[4]];break;end if (0==v242) then v243=v100[2];v244=v98[v100[7 -4 ]];v242=1;end end else local v245=v100[2];v98[v245]=v98[v245](v21(v98,v245 + 1 ,v93));end elseif (v101<=33) then if (v101<=30) then if (v101==29) then v98[v100[6 -4 ]]=v98[v100[3]][v100[4]];else v98[v100[2]]=v98[v100[3]];end elseif (v101<=31) then v98[v100[1749 -(760 + 987) ]]();elseif (v101==32) then local v247=0;local v248;while true do if (v247==0) then v248=v100[2];do return v21(v98,v248,v93);end break;end end else v98[v100[2]]=v100[3 + 0 ];end elseif (v101<=35) then if (v101==(1947 -(1789 + 124))) then if (v98[v100[768 -(745 + 21) ]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end else local v171=0;local v172;local v173;while true do if (0==v171) then v172=v100[3];v173=v98[v172];v171=1;end if (v171==1) then for v348=v172 + 1 + 0 ,v100[4] do v173=v173   .. v98[v348] ;end v98[v100[2]]=v173;break;end end end elseif (v101<=(1033 -(915 + 82))) then local v174=v100[5 -3 ];local v175,v176=v91(v98[v174](v21(v98,v174 + (2 -1) ,v100[3])));v93=(v176 + v174) -1 ;local v177=0;for v225=v174,v93 do v177=v177 + 1 ;v98[v225]=v175[v177];end elseif (v101>37) then v98[v100[2]]= #v98[v100[2 + 1 ]];elseif v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=58) then if (v101<=48) then if (v101<=43) then if (v101<=(52 -12)) then if (v101==39) then local v178=v100[2];local v179=v98[v178];for v228=v178 + 1 ,v93 do v15(v179,v98[v228]);end else local v180=v100[2];local v181,v182=v91(v98[v180](v21(v98,v180 + (3 -2) ,v100[1 + 2 ])));v93=(v182 + v180) -1 ;local v183=0;for v229=v180,v93 do local v230=0;while true do if (v230==0) then v183=v183 + 1 + 0 ;v98[v229]=v181[v183];break;end end end end elseif (v101<=41) then do return v98[v100[2]]();end elseif (v101>42) then v98[v100[2]][v98[v100[1190 -(1069 + 118) ]]]=v98[v100[1059 -(87 + 968) ]];else local v255=0;local v256;local v257;local v258;while true do if (0==v255) then v256=v100[2];v257=v98[v256];v255=1;end if (v255==1) then v258=v100[3];for v387=1,v258 do v257[v387]=v98[v256 + v387 ];end break;end end end elseif (v101<=45) then if (v101>44) then v98[v100[2]]={};else v98[v100[2]]=v98[v100[3]] + v100[8 -4 ] ;end elseif (v101<=46) then local v186=0;local v187;while true do if (v186==0) then v187=v100[2];do return v21(v98,v187,v93);end break;end end elseif (v101>47) then local v259=v100[2];local v260,v261=v91(v98[v259](v98[v259 + (1 -0) ]));v93=(v261 + v259) -1 ;local v262=0;for v308=v259,v93 do local v309=0;while true do if (0==v309) then v262=v262 + (4 -3) ;v98[v308]=v260[v262];break;end end end else local v263=0;local v264;while true do if (v263==0) then v264=v100[2 + 0 ];v98[v264]=v98[v264](v21(v98,v264 + 1 + 0 ,v93));break;end end end elseif (v101<=53) then if (v101<=50) then if (v101>49) then do return;end else local v188=0;local v189;while true do if (0==v188) then v189=v100[2];do return v98[v189](v21(v98,v189 + 1 ,v100[3]));end break;end end end elseif (v101<=51) then local v190=0;local v191;local v192;while true do if (0==v190) then v191=v100[2];v192=v98[v191];v190=1;end if (1==v190) then for v352=v191 + 1 ,v93 do v15(v192,v98[v352]);end break;end end elseif (v101==(1465 -(447 + 966))) then if (v100[2]==v98[v100[10 -6 ]]) then v92=v92 + 1 ;else v92=v100[3];end else local v265=0;local v266;while true do if (v265==0) then v266=v100[2];v98[v266]=v98[v266](v21(v98,v266 + 1 ,v100[3]));break;end end end elseif (v101<=55) then if (v101==54) then if v98[v100[2]] then v92=v92 + (1 -0) ;else v92=v100[1820 -(1703 + 114) ];end else local v193=0;local v194;local v195;local v196;local v197;while true do if (1==v193) then v93=(v196 + v194) -(1 + 0) ;v197=701 -(376 + 325) ;v193=2;end if (v193==0) then v194=v100[2];v195,v196=v91(v98[v194](v98[v194 + 1 ]));v193=1;end if (v193==2) then for v354=v194,v93 do local v355=0;while true do if (v355==0) then v197=v197 + 1 ;v98[v354]=v195[v197];break;end end end break;end end end elseif (v101<=(91 -35)) then v98[v100[2]]= #v98[v100[8 -5 ]];elseif (v101==57) then local v268=0;local v269;local v270;local v271;while true do if (v268==0) then v269=v100[2];v270=v98[v269];v268=1;end if (v268==1) then v271=v100[3];for v392=1,v271 do v270[v392]=v98[v269 + v392 ];end break;end end else local v272=v100[2];v98[v272](v21(v98,v272 + 1 ,v100[3]));end elseif (v101<=68) then if (v101<=63) then if (v101<=60) then if (v101==59) then local v199=0;local v200;local v201;local v202;while true do if (v199==1) then v202=v98[v200] + v201 ;v98[v200]=v202;v199=2;end if (2==v199) then if (v201>0) then if (v202<=v98[v200 + 1 ]) then local v409=0;while true do if (v409==0) then v92=v100[3];v98[v200 + 3 ]=v202;break;end end end elseif (v202>=v98[v200 + 1 ]) then local v410=0;while true do if (v410==0) then v92=v100[1 + 2 ];v98[v200 + 3 ]=v202;break;end end end break;end if (v199==0) then v200=v100[2];v201=v98[v200 + 2 ];v199=1;end end elseif  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=61) then local v203=v100[2];local v204=v98[v203];local v205=v98[v203 + 2 ];if (v205>0) then if (v204>v98[v203 + 1 ]) then v92=v100[3];else v98[v203 + (6 -3) ]=v204;end elseif (v204<v98[v203 + (792 -(368 + 423)) ]) then v92=v100[3];else v98[v203 + 3 ]=v204;end elseif (v101>(76 -(9 + 5))) then v98[v100[2]]=v100[379 -(85 + 291) ] + v98[v100[4]] ;else v98[v100[2]]=v100[9 -6 ];end elseif (v101<=65) then if (v101==64) then local v206=0;local v207;local v208;local v209;local v210;while true do if (0==v206) then v207=v100[2];v208,v209=v91(v98[v207](v21(v98,v207 + 1 ,v93)));v206=1;end if (v206==1) then v93=(v209 + v207) -1 ;v210=0;v206=2;end if (v206==2) then for v360=v207,v93 do local v361=0;while true do if (v361==0) then v210=v210 + 1 ;v98[v360]=v208[v210];break;end end end break;end end else do return;end end elseif (v101<=66) then v98[v100[20 -(10 + 8) ]]=v100[3] + v98[v100[4]] ;elseif (v101==(257 -190)) then local v277=0;local v278;local v279;local v280;local v281;while true do if (1==v277) then v93=(v280 + v278) -1 ;v281=0;v277=2;end if (2==v277) then for v395=v278,v93 do local v396=0;while true do if (v396==0) then v281=v281 + 1 ;v98[v395]=v279[v281];break;end end end break;end if (v277==0) then v278=v100[7 -5 ];v279,v280=v91(v98[v278](v21(v98,v278 + 1 ,v93)));v277=1;end end else local v282=v100[2];local v283=v98[v282 + 2 ];local v284=v98[v282] + v283 ;v98[v282]=v284;if (v283>0) then if (v284<=v98[v282 + 1 ]) then v92=v100[3];v98[v282 + (445 -(416 + 26)) ]=v284;end elseif (v284>=v98[v282 + 1 + 0 ]) then v92=v100[1183 -(1123 + 57) ];v98[v282 + 3 ]=v284;end end elseif (v101<=73) then if (v101<=70) then if (v101>69) then local v212=v100[2];local v213=v98[v100[3 + 0 ]];v98[v212 + 1 ]=v213;v98[v212]=v213[v100[12 -8 ]];else v98[v100[2]]={};end elseif (v101<=71) then v98[v100[2]]=v74[v100[3]];elseif (v101>72) then local v286=0;local v287;local v288;while true do if (0==v286) then v287=v100[3];v288=v98[v287];v286=1;end if (v286==1) then for v401=v287 + 1 ,v100[4] do v288=v288   .. v98[v401] ;end v98[v100[2]]=v288;break;end end else local v289=0;local v290;while true do if (v289==0) then v290=v100[2];v98[v290](v21(v98,v290 + 1 ,v100[3]));break;end end end elseif (v101<=75) then if (v101>74) then local v220=0;local v221;while true do if (v220==0) then v221=v100[2];v98[v221](v21(v98,v221 + 1 ,v93));break;end end else v92=v100[3];end elseif (v101<=76) then local v223=0;local v224;while true do if (v223==0) then v224=v100[2];v98[v224](v21(v98,v224 + 1 + 0 ,v93));break;end end elseif (v101==77) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else v98[v100[2]]();end v92=v92 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- โ ๏ธ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--
