-- Tohru [Fencing Admin Script] [Formally known as "Fencing Admin"] [~Tōru (トール ) [Tohru]#0582  | Wes#0002]
loadtime = tick()
alreadyrunning = false
ver = 1.2
prefix = ";"
for i,v in pairs(game.CoreGui:GetChildren()) do
if v.Name == "Tohru Confirmation" then
alreadyrunning = true
game.StarterGui:SetCore("SendNotification", {Title = "Tohru Admin"; Text = "Tohru Admin ver "..ver.." is already running!"})
else
alreadyrunning = false
end
end
if not alreadyrunning then
Check = Instance.new("BoolValue")
Check.Name = "Tohru Confirmation"
Check.Parent = game.CoreGui
for i,v in pairs(workspace:GetChildren()) do
if v:IsA("Message") and v.Text ~= "" then
v:Destroy()
end
end
welcomer = Instance.new("Message", workspace)
spawn(function()
welcomer.Text = "Welcome "..game:GetService("Players").LocalPlayer.Name.." to Tohru Admin!"
wait(2)
welcomer.Text = "This script was brought to you by Tohru~ UWU >_<#6969"
wait(2)
welcomer.Text = "You are currently running Version "..tonumber(ver).."!"
wait(2)
welcomer:Destroy()
end)
-- functions
function canwritefile()
if writefile and readfile and loadfile then 
return true
else
return false
end
end
-- Noclip Func
Noclip = false
spawn (function()
game:GetService("RunService").Stepped:connect(function()
if Noclip then
if game:GetService("Players").LocalPlayer.Character.Humanoid.PlatformStand ~= "Air" then
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
if v:IsA("BasePart") or v:IsA("MeshPart") then
v.CanCollide = false
end
end
end
end
end)
end)
-- Respawn
function respawn()
randomizer = math.random(1, 999)
Grouper = Instance.new("Model", game:GetService("Workspace"))
Grouper.Name = ""..tostring(game:GetService("Players").LocalPlayer.Name)..""..randomizer..""
Life = Instance.new("Humanoid", Grouper)
Life.Name = "Humanoid"
Body = Instance.new("Part", Grouper)
Body.Name = "Torso"
Body.CanCollide = false
game:GetService("Players").LocalPlayer.Character:Destroy()
game:GetService("Players").LocalPlayer.Character = Grouper
spawn (function()
while wait() do
if game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
workspace[""..tostring(game:GetService("Players").LocalPlayer.Name)..""..randomizer..""]:Destroy()
break
end
end
end)
end
-- Refresh
function refresh()
randomizer = math.random(1, 999)
previous_position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
Grouper = Instance.new("Model", game:GetService("Workspace"))
Grouper.Name = ""..tostring(game:GetService("Players").LocalPlayer.Name)..""..randomizer..""
Life = Instance.new("Humanoid", Grouper)
Life.Name = "Humanoid"
Body = Instance.new("Part", Grouper)
Body.Name = "Torso"
Body.CanCollide = false
game:GetService("Players").LocalPlayer.Character:Destroy()
game:GetService("Players").LocalPlayer.Character = Grouper
spawn (function()
while wait() do
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Part") and v.Name == "HumanoidRootPart" then
v.CFrame = previous_position
end
end
if game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
workspace[""..tostring(game:GetService("Players").LocalPlayer.Name)..""..randomizer..""]:Destroy()
break
end
end
end)
end
-- Loop Goto
LoopGoto = false
loopgotoplayer = {}
spawn (function()
game:GetService("RunService").Stepped:connect(function()
if LoopGoto then
for i,v in pairs(loopgotoplayer) do
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(-1.5, 0, 2))
end
end
end)
end)
-- Loop Bring
LoopBring = false
loopbringplayer = {}
spawn (function()
game:GetService("RunService").Stepped:connect(function()
if LoopBring then
for i,v in pairs(loopbringplayer) do
v.Character.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(1.5, 0, -2))
end
end
end)
end)
-- Rejoin
function rejoin()
game:GetService("TeleportService"):Teleport(game.PlaceId)
end
-- Quit
function quit()
game:shutdown()
end
-- Loop Follow
LoopFollow = false
loopfollowplayer = {}
spawn (function()
game:GetService("RunService").Stepped:connect(function()
if LoopFollow then
for i,v in pairs(loopfollowplayer) do
game:GetService("Players").LocalPlayer.Character.Humanoid:MoveTo(v.Character.HumanoidRootPart.Position)
end
end
end)
end)
-- Suicide
function suicide()
game:GetService("Players").LocalPlayer.Character:BreakJoints()
end
-- Loop Heal
LoopHeal = false
native_pos1 = workspace.Button.CFrame
native_pos2 = workspace.Button.Position
spawn (function()
game:GetService("RunService").Stepped:connect(function()
if LoopHeal then
workspace.Button.Transparency = 1
workspace.Button.CanCollide = false
workspace.Button.Anchored = false
for i,v in pairs(workspace.Button:GetChildren()) do
if v:IsA("Decal") or v:IsA("Sparkles") then
v:Destroy()
end
end
workspace.Button.BrickColor = BrickColor.new("New Yeller")
workspace.Button.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
end
end)
end)
-- Notifier
function Notify(Text)
Text = Text or "Return: nil"
game.StarterGui:SetCore("SendNotification", {Title = "Tohru Admin"; Text = Text})
end
-- Force Chat
function SendMsg(String)
String = tostring(String) or "Hello!"
game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(String, "all")
end
-- Fly Script by [RGEENEUS]
local flyingspeed = 25

local c
local h
local bv
local bav
local cam
local flying
local p = game:GetService("Players").LocalPlayer
local buttons = {W = false, S = false, A = false, D = false, Moving = false}

function fly()
	if not p.Character or not p.Character.Head or flying then return end
	c = p.Character
	h = c.Humanoid
	h.PlatformStand = true
	cam = workspace:WaitForChild('Camera')
	bv = Instance.new("BodyVelocity")
	bav = Instance.new("BodyAngularVelocity")
	bv.Velocity, bv.MaxForce, bv.P = Vector3.new(0, 0, 0), Vector3.new(10000, 10000, 10000), 1000
	bav.AngularVelocity, bav.MaxTorque, bav.P = Vector3.new(0, 0, 0), Vector3.new(10000, 10000, 10000), 1000
	bv.Parent = c.Head
	bav.Parent = c.Head
	flying = true
	h.Died:connect(function() flying = false end)
end

function unfly()
	if not p.Character or not flying then return end
	for i,v in pairs(c.Head:GetChildren()) do
	if v:IsA("BodyVelocity") then
	v:Destroy()
	end
	if v:IsA("BodyAngularVelocity") then
	v:Destroy()
	end
	end
	flying = false
	h.PlatformStand = false
end

game:GetService("UserInputService").InputBegan:connect(function (input, GPE) 
	if GPE then return end
	for i, e in pairs(buttons) do
		if i ~= "Moving" and input.KeyCode == Enum.KeyCode[i] then
			buttons[i] = true
			buttons.Moving = true
		end
	end
end)

game:GetService("UserInputService").InputEnded:connect(function (input, GPE) 
	if GPE then return end
	local a = false
	for i, e in pairs(buttons) do
		if i ~= "Moving" then
			if input.KeyCode == Enum.KeyCode[i] then
				buttons[i] = false
			end
			if buttons[i] then a = true end
		end
	end
	buttons.Moving = a
end)

local setVec = function (vec)
	return vec * (flyingspeed / vec.Magnitude)
end

game:GetService("RunService").Heartbeat:connect(function (step)
	if flying and c and c.PrimaryPart then
		local p = c.PrimaryPart.Position
		local cf = cam.CFrame
		local ax, ay, az = cf:toEulerAnglesXYZ()
		c:SetPrimaryPartCFrame(CFrame.new(p.x, p.y, p.z) * CFrame.Angles(ax, ay, az))
		if buttons.Moving then
			local t = Vector3.new()
			if buttons.W then t = t + (setVec(cf.lookVector)) end
			if buttons.S then t = t - (setVec(cf.lookVector)) end
			if buttons.A then t = t - (setVec(cf.rightVector)) end
			if buttons.D then t = t + (setVec(cf.rightVector)) end
			c:TranslateBy(t * step)
		end
	end
end)
-- Endless Jump
LoopJump = false
mouse = game:GetService("Players").LocalPlayer:GetMouse()
mouse.KeyDown:connect(function(Jump)
if LoopJump then
if Jump:byte() == 32 then
if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState("Jumping")
wait()
game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState("Seated")
end
end
end
end)
-- Time Check [Some Guy on V3RM]
function currenttime()
the_hour = math.floor((tick() % 86400) / 3600)
the_minute = math.floor((tick() % 3600) / 60)
the_second = math.floor(tick() % 60)
the_time_of_day = the_hour > 11 and 'PM' or 'AM'
the_hour = (the_hour % 12 == 0 and 12 or the_hour % 12)
the_hour = the_hour < 10 and '0' .. the_hour or the_hour
the_minute = the_minute < 10 and '0' .. the_minute or the_minute
the_second = the_second < 10 and '0' .. the_second or the_second
return the_hour .. ':' .. the_minute .. ':' .. the_second .. ' ' .. the_time_of_day
end
-- Invisibility/God Script [Timeless]
function invis()
invisible = true
if game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
previous_position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
Platform = Instance.new("Part", workspace)
Platform.Size = Vector3.new(10, 1, 10)
Platform.Anchored = true
Platform.Position = Vector3.new(9999, 9999, 9999)
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Platform.Position) + Vector3.new(0, 1, 0)
wait(1)
Part = Instance.new("Part", workspace)
Part.Size = Vector3.new(5,0,5)
Part.Anchored = true
Part.CFrame = CFrame.new(Vector3.new(9999,9999,9999))
game:GetService("Players").LocalPlayer.Character.PrimaryPart.CFrame = Part.CFrame*CFrame.new(0,3,0)
spawn (function()
wait(3)
Part:Destroy()
Platform:Destroy()
end)
Clone = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:Clone()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:Destroy()
Clone.Parent = game:GetService("Players").LocalPlayer.Character
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = previous_position
game:GetService("Players").LocalPlayer.Character.Humanoid.Died:connect(function()
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("BasePart") or v:IsA("MeshPart") then
v.CFrame = CFrame.new(Vector3.new(9999, 9999, 9999))
invisible = false
end
end
end)
game:GetService("Players").LocalPlayer.CharacterAdded:connect(function()
invisible = false
end)
end
end
-- String Match
function has(sample, text)
    sample = sample or "Sample Text"
    text = text or "Sample"
    if (string.match(sample, text) and true or false) then
		return true 
		else 
		return false
	end
end
-- Player Finder
function findplayer(input)
input = tostring(input)
local matched_players = {}
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if input == "all" then
table.insert(matched_players, v)
elseif input == "others" then
if v.Name ~= game:GetService("Players").LocalPlayer.Name then 
table.insert(matched_players, v)
end
elseif input == "me" then 
if v.Name == game:GetService("Players").LocalPlayer.Name then
table.insert(matched_players, v)
end
else
if string.sub(string.lower(v.Name),1,#input) == string.lower(input) then
table.insert(matched_players, v)
end
end
end
return matched_players
end
-- Teleport Kill
function tkill(target)
target = tostring(target)
previous = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") and v.Name == "Foil" then
v.Parent = game:GetService("Players").LocalPlayer.Backpack
end
end
game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack.Foil)
mouse1click()
wait()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = findplayer(target)[1].Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(-1.5, 0, 2))
mouse1click()
wait()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = findplayer(target)[1].Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(-1.5, 0, 2))
wait(.5)
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = previous
end
-- Spam
Spamming = false
spam_msg = "PlaceHolder"
spawn (function()
while wait() do
if Spamming then
wait(2)
SendMsg(spam_msg)
end
end
end)
-- FE Fling
function FEFling(fling)
spawn (function() 
previous = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 25
game:GetService("Players").LocalPlayer.Character.Humanoid.AutoJumpEnabled = false
wait()
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = findplayer(fling)[1].Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(-1.5, 0, 2))
table.insert(loopfollowplayer, findplayer(fling)[1])
LoopFollow = true
game:GetService("Players").LocalPlayer.DevEnableMouseLock = false
Noclip = true
spinner = Instance.new("BodyThrust")
spinner.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
spinner.Force = Vector3.new(5e3, 0, 5e3)
spinner.Location = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position
wait(1)
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
if v:IsA("BodyThrust") then
v:Destroy()
end
end
wait()
game:GetService("Players").LocalPlayer.DevEnableMouseLock = true
game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
game:GetService("Players").LocalPlayer.Character.Humanoid.AutoJumpEnabled = true
wait()
LoopFollow = false
table.remove(loopfollowplayer, #loopfollowplayer)
wait()
while wait() do
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
if v:IsA("BasePart") or v:IsA("MeshPart") then
v.Velocity = Vector3.new(0, 0, 0)
end
end
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = previous
wait()
if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame == previous then
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
if v:IsA("BasePart") or v:IsA("MeshPart") then
v.Anchored = true
wait(.1)
v.Anchored = false
end
end
Noclip = false
break
end
end
end)
end
-- Chatlogs
logging = false
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
v.Chatted:connect(function(theirmsg)
if logging then
print(currenttime().." ["..v.Name.."]: "..theirmsg)
end
end)
end
game:GetService("Players").PlayerAdded:connect(function(newplayer)
newplayer.Chatted:connect(function(newplayermsg)
if logging then
print(currenttime().." ["..newplayer.Name.."]: "..newplayermsg)
end
end)
end)
-- Ride
riding = false
headsitplayer = {}
spawn (function()
game:GetService("RunService").Stepped:connect(function()
if riding then
for i,v in pairs(headsitplayer) do
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 2, 0.5))
game:GetService("Players").LocalPlayer.Character.Humanoid.Sit = true
end
end
end)
end)

-- Drop tool
dropping = false
spawn (function()
game:GetService("RunService").Stepped:connect(function()
if dropping then
for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
if v:IsA("Tool") and v.Name == "Spray" then
v.Parent = game:GetService("Players").LocalPlayer.Character
end
end
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") and v.Name == "Spray" then
if v.Handle:FindFirstChild("Mesh") then
v.Handle.Mesh:Destroy()
end
v.Parent = workspace.Terrain
end
end
original = workspace.Handle.CFrame
workspace.Handle.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
wait()
workspace.Handle.CFrame = original
end
end)
end)

-- Loop sounds
LoopSound = false
spawn(function()
while wait() do
if LoopSound then
wait(1)
for i,v in pairs(game:GetDescendants()) do
if v:IsA("Sound") then
v:Play()
end
end
end
end
end)
-- Join logs
spawn (function()
JoinLogs = false
game:GetService("Players").PlayerAdded:connect(function(thenewplayer)
if JoinLogs then
print(thenewplayer.Name.." joined the server at "..currenttime()..", Age: "..thenewplayer.AccountAge..", OS: "..thenewplayer.OsPlatform)
end
end)
game:GetService("Players").PlayerRemoving:connect(function(theoldplayer)
if JoinLogs then
print(theoldplayer.Name.." left the server at "..currenttime()..", Age: "..theoldplayer.AccountAge..", OS: "..theoldplayer.OsPlatform)
end
end)
end)


function cmds()
print([[
1. prefix [prefix] - Sets a new prefix!
2. nofloat - Prevents you from floating when you lunge!
3. time - Displays your local time [EDT]
4. respawn - Respawns your character
5. refresh - Respawns you back to your last position
6. ws [speed] - Change your walkspeed to [speed]
7. jp [power] - Change your jumppower to [power]
8. reach [length] - Set your foil's length to [length]
9. fspeed [speed] - Sets your flying speed to [speed]
10. fly - Makes you fly
11. unfly - Makes you stop flying
12. invis - Makes you invisible to other players
13. infreach - No place is safe
14. hh [height] - Sets your hipheight to [height]
15. dex - Launches/Reopens dex
16. killdex - Closes dex
17. lgoto [plr] - Loop teleports you to [plr]
18. lbring [plr] - Loop teleports [plr] to you (Client-side)
19. follow [plr] - Makes you follow a players
20. rejoin - Makes you rejoin the game
21. quit - Quits the roblox process
22. antikill - Enables protection from fe kill and fe bring
23. unantikill - Disables protection from fe kill and fe bring
24. antivoid - Prevents you from falling off the void
25. goto [plr] - Teleports you to [plr]
26. tkill [plr] - Backstabs a player
27. rlimbs - Removes your limbs
28. clone - Clones currently equipped tool into your backpack (Client-side)
29. getspray - Gives you the spray can
30. noclip - Allows you to walk through walls
31. clip - Prevents you from walking through walls
32. float - Disables nofloat
33. gaey [plr] - Determine how gay someone is
34. spam [msg] - Constantly spam [msg]
35. infjump - Enables infinite jump!
36. uninfjump - Disables infinite jump!
37. loopheal - Constantly loop the doublehealth pad to your character
38. unloopheal - Stop teleporting the doublehealth pad to your character
39. unfollow - Disables follow
40. unlgoto - Disables lgoto
41. unlbring - Disables lbring
42. write - Writes a file to your exploits workspace
43. s [code] - Quicky run code via chat
44. age [plr] - Shows you long [plr] has been on roblox
45. os [plr] - Shows you the operating system of [plr]
46. freeze [plr] - Freezes [plr] (Client-Side)
47. thaw [plr] - Thaws a frozen player
48. view [plr] - View [plr]
49. unview - Stop viewing
50. cmds - Dislays all logged commands
51. noreach - Disables sword reach
52. reset - Resets your character
53. btools - Gives you btools (Client-Side)
54. version - Checks your Tohru Admin Version
55. disc - Copies my discord to clipboard so you can add me :)
56. chatlogs - Logs all chats to dev console
57. nochatlogs - Stops logging chats to dev console
58. spamdrop - Spam drops the spraycan!
59. ride [plr] - Makes you ride [plr]'s headsit [Broken IDK WHY]
60. unride - Makes you stop riding heads!
63. nospamdrop - Stop spamming the spraycan
64. loopsound - Loops all the sounds in the game [Could lag]
65. noloopsound - Stops looping the sounds
66. heal - Heals your character via the DH pad
67. friend [plr] - Sends a friend request to [plr]
68. unfriend [plr] - Removes [plr] from your friendslist
69. block [plr] - Blocks [plr]
70. unblock [plr]  - Unblocks [plr]
71. joinlogs - Logs players leaving and joining
72. nojoinlogs - No longer logs the players leaving and joining
73. region [plr] - Tells you the region a player is from
74. suggest [suggestion] - Sends a suggestion to me via discord
]])
end


-- Chat Hook
game:GetService("Players").LocalPlayer.Chatted:connect(function(chat)
wait(.1)
if has(chat:lower(), prefix.."prefix") then
chat = chat:gsub(prefix.."prefix ", "")
if prefix == chat then
Notify("Your prefix is already "..prefix.."!")
else
prefix = chat
Notify("New prefix: "..prefix)
end
end
if has(chat:lower(), prefix.."nofloat") then
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Part") then
if v.CustomPhysicalProperties == PhysicalProperties.new(100, 0.3, 0.5) then
Notify("Nofloat is already enabled!")
else
v.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
end
end
end
Notify("Enabled NoFloat!")
end
if has(chat:lower(), prefix.."time") then
Notify("The current time is: "..currenttime())
end
if has(chat:lower(), prefix.."respawn") then
respawn()
Notify("Respawned your character!")
end
if has(chat:lower(), prefix.."refresh") then
refresh()
Notify("Refreshed your character!")
end
if has(chat:lower(), prefix.."invis") then
if invisible then
Notify("You are already invisible!")
else
invis()
Notify("You are now invisible to other players!")
end
end
if has(chat:lower(), prefix.."fly") then
if flying then
Notify("You are already flying!")
else
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Part") then
v.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
end
end
fly()
Notify("Enabled fly!")
end
end
if has(chat:lower(), prefix.."unfly") then
if not flying then
Notify("You are not flying!")
else
unfly()
Notify("Disabled fly!")
end
end
if has(chat:lower(), prefix.."float") then
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Part") then
if v.CustomPhysicalProperties == PhysicalProperties.new(0.7, 0.3, 0.5) then
Notify("Nofloat already disabled!")
else
v.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
end
end
end
Notify("Disabled NoFloat")
end
if has(chat:lower(), prefix.."loopheal") then
if LoopHeal then
Notify("LoopHealing already enabled!")
else
LoopHeal = true
Notify("Enabled LoopHeal!")
end
end
if has(chat:lower(), prefix.."unloopheal") then
if not LoopHeal then
Notify("Loophealing already disabled!")
else
LoopHeal = false
workspace.Button.CFrame = native_pos1
workspace.Button.Position = native_pos2
workspace.Button.Transparency = 0
workspace.Button.Anchored = true
workspace.Button.CanCollide = true
Notify("Disabled Loopheal!")
end
end
if has(chat:lower(), prefix.."infjump") then
if LoopJump then
Notify("Infinite Jump already enabled!")
else
LoopJump = true
Notify("Enabled Infinite Jump!")
end
end
if has(chat:lower(), prefix.."noinfjump") then
if not LoopJump then
Notify("Infinite Jump already disabled!")
else
LoopJump = false
Notify("Disabled Infinite Jump!")
end
end
if has(chat:lower(), prefix.."noclip") then
if Noclip then
Notify("Noclip already enabled!")
else
Noclip = true
Notify("Enabled Noclip!")
end
end
if has(chat:lower(), prefix.."clip") then
if not Noclip then
Notify("Noclip already disabled!")
else
Noclip = false
Notify("Disabled Noclip!")
end
end
if has(chat:lower(), prefix.."rejoin") then
Notify("Rejoining!")
wait(1.5)
rejoin()
end
if has(chat:lower(), prefix.."quit") then
Notify("Quitting the roblox process!")
wait(1.5)
quit()
end
if has(chat:lower(), prefix.."ws") then
res, _ = chat:gsub("%D+", "")
walkspeed = tonumber(res)
if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = walkspeed
Notify("Set your walkspeed to "..walkspeed)
end
end
if has(chat:lower(), prefix.."jp") then
res, _ = chat:gsub("%D+", "")
jumppower = tonumber(res)
if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = walkspeed
Notify("Set your JumpPower to "..jumppower)
end
end
if has(chat:lower(), prefix.."hh") then
res, _ = chat:gsub("%D+", "")
hipheight = tonumber(res)
if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = hipheight
Notify("Set your HipHeight to "..hipheight)
end
end
if has(chat:lower(), prefix.."sit") then
if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
game:GetService("Players").LocalPlayer.Character.Humanoid.Sit = true
Notify("You are now sitting!")
end
end
if has(chat:lower(), prefix.."rlimbs") then
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("BasePart") and 
v.Name == "Right Leg" or 
v.Name == "Left Leg" or 
v.Name == "Right Arm" or 
v.Name == "Left Arm" then 
v:Destroy()
end
end
end
if has(chat:lower(), prefix.."reach") then
res, _ = chat:gsub("%D+", "")
length = tonumber(res)
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") and v.Name == "Foil" then
v.Parent = game:GetService("Players").LocalPlayer.Backpack
end
end
for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
if v:IsA("Tool") and v.Name == "Foil" then
v.Handle.Size = Vector3.new(2, 2, length)
v.Handle.Massless = true
game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(v)
end
end
Notify("Set your foil's length to "..length)
end
if has(chat:lower(), prefix.."infreach") then
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") and v.Name == "Foil" then
v.Parent = game:GetService("Players").LocalPlayer.Backpack
end
end
for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
if v:IsA("Tool") and v.Name == "Foil" then
v.Handle.Size = Vector3.new(math.huge, math.huge, math.huge)
v.Handle.Massless = true
game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(v)
end
end
Notify("Gave your foil infinite Reach! [May cause lag!]")
end
if has(chat:lower(), prefix.."goto ") then
chat = chat:gsub(prefix.."goto ", "")
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = findplayer(chat)[1].Character.HumanoidRootPart.CFrame
Notify("Teleported to "..findplayer(chat)[1].Name)
end
if has(chat:lower(), prefix.."lgoto ") then
chat = chat:gsub(prefix.."lgoto ", "")
table.insert(loopgotoplayer, findplayer(chat)[1])
LoopGoto = true
Notify("Loop teleporting to "..findplayer(chat)[1])
end
if has(chat:lower(), prefix.."unlgoto") then
LoopGoto = false
table.remove(loopgotoplayer, #loopgotoplayer)
Notify("No longer loop teleporting!")
end
if has(chat:lower(), prefix.."lbring ") then
chat = chat:gsub(prefix.."lbring ", "")
for i,v in pairs(findplayer(chat)) do
table.insert(loopbringplayer, v)
end
LoopBring = true
Notify("Loop bringing!")
end
if has(chat:lower(), prefix.."unlbring") then
LoopBring = false
table.remove(loopbringplayer, #loopbringplayer)
Notify("No longer loop bringing!")
end
if has(chat:lower(), prefix.."view ") then
chat = chat:gsub(prefix.."view ", "")
workspace.CurrentCamera.CameraSubject = findplayer(chat)[1].Character
Notify("Now viewing "..findplayer(chat)[1].Name)
end
if has(chat:lower(), prefix.."unview") then
workspace.CurrentCamera.CameraSubject = game:GetService("Players").LocalPlayer.Character
Notify("No longer viewing anyone!")
end
if has(chat:lower(), prefix.."age ") then
chat = chat:gsub(prefix.."age ", "")
for i,v in pairs(findplayer(chat)) do
Notify(v.Name.." age: "..v.AccountAge)
end
end
if has(chat:lower(), prefix.."os ") then
chat = chat:gsub(prefix.."os ", "")
for i,v in pairs(findplayer(chat)) do
Notify(v.Name.." OS: "..v.OsPlatform)
end
end
if has(chat:lower(), prefix.."freeze ") then
chat = chat:gsub(prefix.."freeze ", "")
for i,v in pairs(findplayer(chat)) do
for i,v in pairs(v.Character:GetChildren()) do
if v:IsA("Part") then
v.Anchored = true
end
end
end
Notify("Froze Players!")
end
if has(chat:lower(), prefix.."thaw ") then
chat = chat:gsub(prefix.."thaw ", "")
for i,v in pairs(findplayer(chat)) do
for i,v in pairs(v.Character:GetChildren()) do
if v:IsA("Part") then
v.Anchored = false
end
end
end
Notify("Thawed Players!")
end
if has(chat:lower(), prefix.."btools") then   
BinType = 1
spawn (function()
while wait(0.2) do
if BinType == 5 then
break
end
Instance.new("HopperBin", game:GetService("Players").LocalPlayer.Backpack).BinType = BinType
BinType = BinType + 1
end
end)
Notify("Giving btools!")
end
if has(chat:lower(), prefix.."reset") then
game:GetService("Players").LocalPlayer.Character:BreakJoints()
Notify("Resetted your character!")
end
if has(chat:lower(), prefix.."antikill") then
spawn (function()
_G.STOP = true -- disable
wait(1)
_G.STOP = false -- enable

game:service'StarterGui':SetCore("SendNotification",{
    Title = "Tohru Admin";
    Text = "Loaded Antikill [Made by Backtakers]";
});

local off = false
local cf,pos
local sotp = false
local tools = {}

for i,v in pairs(game:service'Players'.LocalPlayer.Backpack:getChildren'') do
    tools[v] = true
end

game:service'Players'.LocalPlayer.Backpack.ChildAdded:connect(function(c)
    if off then return end
    tools[c] = true
end)

local thing = function(ob)
    if off then return end
    if ob:IsA("Tool") and not tools[ob] then
        game:service'RunService'.Stepped:wait''
        tools[ob] = true
        sotp = true
        ob.Parent = game:service'Players'.LocalPlayer.Backpack
        game:service'StarterGui':SetCore("SendNotification",{
            Title = "Tohru Admin";
            Text = "Someone is attempting FE Kill or FE Bring"
        });
        for i = 1,10 do
            if game:service'Players'.LocalPlayer.Character and game:service'Players'.LocalPlayer.Character:findFirstChild'HumanoidRootPart' then
                game:service'Players'.LocalPlayer.Character.HumanoidRootPart.CFrame = cf
                for i,v in pairs(game:service'Players'.LocalPlayer.Character:getChildren'') do
                    if v:IsA("BasePart") or v:IsA("MeshPart") then
                        v.Velocity = Vector3.new(0,0,0)
                    end
                end
                game:service'RunService'.Stepped:wait''
            end
        end
        sotp = false
    end
end

game:service'Players'.LocalPlayer.Character.ChildAdded:connect(thing)
game:service'Players'.LocalPlayer.CharacterAdded:connect(function(c)
    c.ChildAdded:connect(thing)
end)

while wait(.5) and not _G.STOP do
    if game:service'Players'.LocalPlayer.Character and game:service'Players'.LocalPlayer.Character:findFirstChild("HumanoidRootPart") and not sotp then
        cf =
game:service'Players'.LocalPlayer.Character.HumanoidRootPart.CFrame
        pos = game:service'Players'.LocalPlayer.Character.HumanoidRootPart.Position
    end
end

off = true
end)
end
if has(chat:lower(), prefix.."unantikill") then
_G.STOP = true
off = true
Notify("Disaled anti fe kill!")
end
if has(chat:lower(), prefix.."dex") then
if game.CoreGui:FindFirstChild("Dex") then
Notify("Reopening Dex")
game.CoreGui.Dex.Enabled = true
else
Notify("Launching Dex")
loadstring(game:GetObjects("rbxassetid://418957341")[1].Source)()
end
end
if has(chat:lower(), prefix.."killdex") then
if game.CoreGui:FindFirstChild("Dex") then
Notify("Closing Dex")
game.CoreGui.Dex.Enabled = false
else
Notify("Dex is not running!")
end
end
if has(chat:lower(), prefix.."disc") then
setclipboard("Tohru~ UWU >_<#6969")
Notify("Copied my discord to clipboard!")
end
if has(chat:lower(), prefix.."write ") then
if canwritefile() then
chat = chat:gsub(prefix.."write ", "")
randomizer = math.random(999, 9999999)
name = "[Tohru] "..randomizer..".txt"
writefile(name, chat)
Notify("Wrote file to workspace!")
else
Notify("Your exploit does not support this command!")
end
end
if has(chat:lower(), prefix.."s ") then
chat = chat:gsub(prefix.."s ", "")
loadstring(chat)()
Notify("Ran Code!")
end
if has(chat:lower(), prefix.."follow ") then
chat = chat:gsub(prefix.."follow ", "")
table.insert(loopfollowplayer, findplayer(chat)[1])
LoopFollow = true
Notify("Now Loop Following "..findplayer(chat)[1])
end
if has(chat:lower(), prefix.."tkill ") then
chat = chat:gsub(prefix.."tkill ", "")
tkill(chat)
Notify("Attempted to teleport kill "..tostring(findplayer(chat)[1]))
end
if has(chat:lower(), prefix.."version") then
Notify("You are running Tohru Admin Version "..ver)
end
if has(chat:lower(), prefix.."fspeed ") then
res, _ = chat:gsub("%D+", "")
newspeed = tonumber(res)
flyingspeed = newspeed * 25
Notify("Set your flying speed to "..newspeed)
end
if has(chat:lower(), prefix.."noreach") then
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") and v.Name == "Foil" then
v.Parent = game:GetService("Players").LocalPlayer.Backpack
end
end
for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
if v:IsA("Tool") and v.Name == "Foil" then
v.Handle.Size = Vector3.new(1, 0.4, 5)
v.Handle.Massless = false
game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(v)
end
end
Notify("Set your foil's size to default!")
end
if has(chat:lower(), prefix.."unfollow") then
LoopFollow = false
table.remove(loopfollowplayer, #loopfollowplayer)
Notify("No longer following!")
end
if has(chat:lower(), prefix.."antivoid") then
Anti_Void = Instance.new("Part")
Anti_Void.Parent = workspace
Anti_Void.Size = Vector3.new(math.huge, 0.1, math.huge)
Anti_Void.CFrame = CFrame.new(Vector3.new(0, -100, 0))
Anti_Void.Anchored = true
Anti_Void.CanCollide = false
Anti_Void.Transparency = 1
Anti_Void.Name = "Tohru Admin"
Anti_Void.Touched:connect(function(detect)
if detect.Parent == game:GetService("Players").LocalPlayer.Character then
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-70.261795, 3.9000001, 107.713387, 5.46174124e-06, 7.35261736e-08, -0.999999523, -1.7443222e-08, 1, 7.3526067e-08, 0.999999523, 1.74428241e-08, 5.46174124e-06)
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Humanoid") then
v.WalkSpeed = 16
v.JumpPower = 50
v.Sit = false
v.HipHeight = 0
end
if v:IsA("BasePart") or v:IsA("MeshPart") then
v.Velocity = Vector3.new(0, 0, 0)
end
end
Notify("Beamed you back up!")
end
end)
Notify("Enabled anti-void!")
end
if has(chat:lower(), prefix.."gaey ") then
chat = chat:gsub(prefix.."gaey ", "")
SendMsg(findplayer(chat)[1].Name.." is "..math.random(1, 100).."% gaey!")
Notify("Determined gay level!")
end
if has(chat:lower(), prefix.."spam ") then
chat = chat:gsub(prefix.."spam ", "")
spam_msg = chat
Spamming = true
Notify("Spamming the message "..chat)
end
if has(chat:lower(), prefix.."unspam") then
Spamming = false
spam_msg = "PlaceHolder"
Notify("No longer spamming!")
end
if has(chat:lower(), prefix.."fling ") then
chat = chat:gsub(prefix.."fling ", "")
the_vic = findplayer(chat)[1]
FEFling(the_vic)
Notify("Attempted to fling "..the_vic.Name.." with a force of 5000!")
end
if has(chat:lower(), prefix.."getspray") then
original = workspace.Handle.CFrame
workspace.Handle.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
wait()
workspace.Handle.CFrame = original
Notify("Gave you the spray can!")
end
if has(chat:lower(), prefix.."clone") then
for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
if v:IsA("Tool") then
the_tool = v.Name
the_clone = v:Clone()
end
end
for i,v in pairs(the_clone:GetDescendants()) do
the_children = v:Clone()
the_children.Parent = the_clone
end
the_clone.Parent = game:GetService("Players").LocalPlayer.Backpack
Notify("Cloned your "..the_tool)
end
if has(chat:lower(), prefix.."cmds") then
cmds()
Notify("Printed all commands to dev console!")
end
if has(chat:lower(), prefix.."chatlogs") then
logging = true
Notify("Logging all chats into dev console!")
end
if has(chat:lower(), prefix.."nochatlogs") then
logging = false
Notify("No longer logging chats in dev console")
end
if has(chat:lower(), prefix.."ride ") then
chat = chat:gsub(prefix.."ride ", "")
table.insert(headsitplayer, findplayer(chat)[1])
riding = true
Noclip = true
Notify("Now riding "..findplayer(chat)[1])
end
if has(chat:lower(), prefix.."unride") then
riding = false
table.remove(headsitplayer, #headsitplayer)
Noclip = false
game:GetService("Players").LocalPlayer.Character.Humanoid.Sit = false
Notify("No longer riding!")
end
if has(chat:lower(), prefix.."spamdrop") then
spraypos = workspace.Handle.CFrame
workspace.Handle.CanCollide = false
dropping = true
Notify("Loop dropping the spraycan!")
end
if has(chat:lower(), prefix.."nospamdrop") then
dropping = false
workspace.Handle.CanCollide = true
workspace.Handle.CFrame = spraypos
Notify("No longer spam dropping the spraycan!")
end
if has(chat:lower(), prefix.."loopsound") then
LoopSound = true
Notify("Looping all the sounds for everyone!")
end
if has(chat:lower(), prefix.."noloopsound") then
LoopSound = false
Notify("No longerlooping all the sounds")
end
if has(chat:lower(), prefix.."heal") then
firstpos1 = workspace.Button.CFrame
firstpos2 = workspace.Button.Position
workspace.Button.CanCollide = false
workspace.Button.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
wait()
workspace.Button.CFrame = firstpos1
workspace.Button.Position = firstpos2
workspace.Button.CanCollide = true
workspace.Button.BrickColor = BrickColor.new("New Yeller")
end
if has(chat:lower(), prefix.."friend ") then
chat = chat:gsub(prefix.."friend ", "")
for i,v in pairs(findplayer(chat)) do
game:GetService("Players").LocalPlayer:RequestFriendship(v)
end
Notify("Sent the friend requests!")
end
if has(chat:lower(), prefix.."unfriend ") then
chat = chat:gsub(prefix.."unfriend ", "")
for i,v in pairs(findplayer(chat)) do
game:GetService("Players").LocalPlayer:RevokeFriendship(v)
end
Notify("Unfriended the players!")
end
if has(chat:lower(), prefix.."joinlogs") then
JoinLogs = true
Notify("Logging everyone who leaves and joins!")
end
if has(chat:lower(), prefix.."nojoinlogs") then
JoinLogs = false
Notify("No longer logging everyone who leaves and joins!")
end
if has(chat:lower(), prefix.."block ") then
chat = chat:gsub(prefix.."block ", "")
for i,v in pairs(findplayer(chat)) do
game:GetService("StarterGui"):SetCore("PromptBlockPlayer", v)
end
end
if has(chat:lower(), prefix.."unblock ") then
chat = chat:gsub(prefix.."unblock ", "")
for i,v in pairs(findplayer(chat)) do
me:GetService("StarterGui"):SetCore("PromptUnblockPlayer", v)
end
end
if has(chat:lower(), prefix.."region ") then
chat = chat:gsub(prefix.."region ", "")
Notify(findplayer(chat)[1].Name.."'s region is: '"..findplayer(chat)[1].LocaleId.."'")
end
if has(chat:lower(), prefix.."suggest ") then
-- No spamming kids ok :)
spawn (function()
BL_Name = {
"Name1",
"Name2",
"Name3",
}
BL_UserId = {
"ID1",
"ID2",
"ID3",
}
blacklisted = false
is_verified = false
table.foreach(BL_Name, function(a, b)
if tostring(game:GetService("Players").LocalPlayer.Name) == tostring(b) then
blacklisted = true
end
end)
table.foreach(BL_UserId, function(a, b)
	if tostring(game:GetService("Players").LocalPlayer.UserId) == tostring(b) then
	blacklisted = true
	end
	end)
	if not game:GetService("MarketplaceService"):PlayerOwnsAsset(game:GetService("Players").LocalPlayer, 102611803) then
	is_verified = false
	else
	is_verified = true
	end
	if blacklisted then
	Notify("You are blacklisted from sending suggestions due to previous spam!")
	end
	if not is_verified then
	Notify("You need a verified roblox account in able to send suggestions!")
	end
	if is_verified and not blacklisted then
	suggestion = chat:gsub(prefix.."suggest ", "")
url = "https://discord.osyr.is/api/webhooks/534221854815158287/025vWMrc9hqWhmUxqsRVFZxGJMxG3H-8M_Ahbw4nAF8NbRTbxKUp1mEM9u1PT5MV7W-G"
data = {
["username"] = "Suggestion/FeedBack",
["content"] = "@ ["..currenttime().."] ["..game:GetService("Players").LocalPlayer.Name.."]: "..suggestion..""
}
game:HttpPost(url, game:GetService("HttpService"):JSONEncode(data))
Notify("Sent your request! [Do Not Spam!]")
end
end)
end
end)
-- Game Check
spawn (function()
if game.PlaceId ~= 12109643 then
function Choose(yourchoice)
if yourchoice == "Stay" then
print("You are in an unsupported game! Some commands may not work!")
elseif yourchoice == "Leave" then
wait(2)
game:GetService("TeleportService"):Teleport(12109643)
end
end
BF = Instance.new("BindableFunction")
BF.OnInvoke = Choose
game.StarterGui:SetCore("SendNotification", {
    Title = "Game is Unsupported"; 
    Text = "Would you like to teleport to a supported game?";
    Duration = 5;
    Callback = BF;
    Button1 = "Stay";
    Button2 = "Leave"
})
end
end)
spawn (function()
-- Version Check
if pcall(function() loadstring(game:HttpGet(("https://pastebin.com/raw/eXz8mKtL"), true))() end) then
if tonumber(ver) < tonumber(Version) then
function Choice(yourchoose)
if yourchoose == "Update" then
setclipboard("loadstring(game:HttpGet('https://pastebin.com/raw/s7MNHtse', true))()")
wait(2)
game:GetService("TeleportService"):Teleport(12109643)
elseif yourchoose == "Don't Update" then
print("Using Latest Version Of Tohru Admin? [X]")
end
BF2= Instance.new("BindableFunction")
BF2.OnInvoke = Choice
game.StarterGui:SetCore("SendNotification", {
    Title = "Outdated Version"; 
    Text = "Would you like to update?";
    Duration = 5;
    Callback = BF2;
    Button1 = "Update";
    Button2 = "Don't Update"
})
end
end
elseif tonumber(ver) == tonumber(Version) then
print("Using Latest Version Of Tohru Admin? [✓]")
elseif tonumber(ver) > tonumber(Version) then
print("Using Latest Version Of Tohru Admin? [Dev_Copy]")
end
end)
print("Loaded Tohru Admin Version ["..ver.."]. Execution time : "..tick() - loadtime)
end
