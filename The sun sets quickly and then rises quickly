local DayLength = 14.40
local InitialTime = 8

local days = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"}
local RS = game:GetService("RunService")
local CurrentDay = 1
local playerList = {}
local start = tick()-(InitialTime/24*DayLength)
local AM = true

RS.Stepped:Connect(function()
	local t = (tick()-start)/DayLength*24
	if t >= 12 then AM = false end
	if t >= 24 then
		start = tick()
		CurrentDay = math.fmod(CurrentDay, 7)+1
		AM = true
	end
	game.Lighting.ClockTime = math.fmod(t, 24)
	for i, plr in pairs(playerList) do
		local day = plr.PlayerGui.TimeGui.Day
		local Time = plr.PlayerGui.TimeGui.Time
		local AMPM = plr.PlayerGui.TimeGui.AMPM
		day.Text = days[CurrentDay]
		local hour = tonumber(string.sub(string.sub(game.Lighting.TimeOfDay, 0, 5), 0, string.find(game.Lighting.TimeOfDay, ":")-1))
		local minute = tonumber(string.sub(string.sub(game.Lighting.TimeOfDay, 0, 5), string.find(game.Lighting.TimeOfDay, ":")+1))
		if hour >= 13 then
			hour -= 12
		end
		if string.len(tostring(minute)) == 1 then minute = "0"..minute end
		Time.Text = hour..":"..minute
		AMPM.Text = if AM then "AM" else "PM"
	end
end)

game.Players.PlayerAdded:Connect(function(plr)
	plr.PlayerGui:WaitForChild("TimeGui")
	table.insert(playerList, plr)
end)

game.Players.PlayerRemoving:Connect(function(plr)
	if table.find(playerList, plr) then
		table.remove(playerList, table.find(playerList, plr))
	end
end)
