--Make by 1hooaczx1
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local Lp = Players.LocalPlayer

local singletonFlag = "AFKCheckScriptActive"

if game.ServerStorage:FindFirstChild(singletonFlag) then
StarterGui:SetCore("SendNotification", {
            Title = "Notification";
            Text = "The AFK Notification is already created.";
            Duration = 2;
        })
    return 
end

local flag = Instance.new("StringValue")
flag.Name = singletonFlag
flag.Value = "Active"
flag.Parent = game.ServerStorage

local notifications = {
    {Title = "Friendly reminder;)", Text = "You've been idle."},
    {Title = "Friendly reminder;)", Text = "You shouldn't be still"},
    {Title = "Friendly reminder;)", Text = "You should take a walk"},
    {Title = "Friendly reminder;)", Text = "Why are you standing like that"},
    {Title = "Friendly reminder;)", Text = "You should move some"},
    {Title = "Friendly reminder;)", Text = "Why don't you move"},
    {Title = "Friendly reminder;)", Text = "You should go do activities with other players"},
    {Title = "Friendly reminder;)", Text = "Staying still like that could get killed by other players"},
    {Title = "Friendly reminder;)", Text = "You should move>"},
    {Title = "Friendly reminder;)", Text = "You should go do things"},
    {Title = "Friendly reminder;)", Text = "You should take a walk"},
    {Title = "Friendly reminder;)", Text = "Why are you standing still like that"},
    {Title = "Friendly reminder;)", Text = "Please, you should move"},
    {Title = "Friendly reminder;)", Text = "You should go for a walk with other players"},
    {Title = "Friendly reminder;)", Text = "Why don't you move? Please move"},
    {Title = "Friendly reminder;)", Text = "Why, please move"},
    {Title = "Friendly reminder;)", Text = "You should be more enthusiastic"},
}

local notificationInterval = 5
local cooldownInterval = 10
local lastNotificationTime = tick()
local isAFK = false
local lastAFKTime = tick()

local function getRandomNotification()
    local index = math.random(1, #notifications)
    return notifications[index]
end

local function sendNotification()
    local notification = getRandomNotification()
    StarterGui:SetCore("SendNotification", {
        Title = notification.Title;
        Text = notification.Text;
        Icon = "rbxassetid://16855304544";
        Duration = 5;
    })
end

local function checkAFK()
    local character = Lp.Character
    if character and character:FindFirstChildOfClass("Humanoid") then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        
        local isMoving = humanoid.WalkSpeed > 0 and humanoid.MoveDirection.Magnitude > 0

        if isMoving then
            if isAFK then
                isAFK = false
            end
        else
            if not isAFK then
                isAFK = true
                lastAFKTime = tick()
            end

            if isAFK and tick() - lastAFKTime >= notificationInterval and tick() - lastNotificationTime >= cooldownInterval then
                sendNotification()
                lastNotificationTime = tick()
            end
        end
    end
end

RunService.Heartbeat:Connect(checkAFK)

local function cleanup()
    local flag = game.ServerStorage:FindFirstChild(singletonFlag)
    if flag then
        flag:Destroy()
    end
end

game:BindToClose(cleanup)
