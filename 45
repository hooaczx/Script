if not game:IsLoaded() then
game.Loaded:Wait()
end

local Configs_HUB = {
  Cor_Hub = Color3.fromRGB(15, 15, 15),
  Cor_Options = Color3.fromRGB(15, 15, 15),
  Cor_Stroke = Color3.fromRGB(60, 60, 60),
  Cor_Text = Color3.fromRGB(240, 240, 240),
  Cor_DarkText = Color3.fromRGB(140, 140, 140),
  Corner_Radius = UDim.new(0, 4),
  Text_Font = Enum.Font.FredokaOne
}

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
functionCreate = {}

functionCreate.Create = function(instance, parent, props)
  local new = Instance.new(instance, parent)
  if props then
    table.foreach(props, function(prop, value)
      new[prop] = value
    end)
  end
  local clse
  clse = new.AncestryChanged:Connect(function()
    if not new.Parent then
      new:Destroy()
      if clse then
        clse:Disconnect()
        clse = nil
      end
    end
  end)
  return new
end

Create = functionCreate.Create

functionCreate.SetProps = function(instance, props)
  if instance and props then
    table.foreach(props, function(prop, value)
      instance[prop] = value
    end)
  end
  return instance
end

functionCreate.Corner = function(parent, props)
  local new = Create("UICorner", parent)
  new.CornerRadius = Configs_HUB.Corner_Radius
  if props then
    SetProps(new, props)
  end
  return new
end

functionCreate.Stroke = function(parent, props)
  local new = Create("UIStroke", parent)
  new.Color = Configs_HUB.Cor_Stroke
  if props and props.Color then
    new.Color = props.Color
  end
  new.ApplyStrokeMode = "Border"
  if props then
    SetProps(new, props)
  end
  return new
end

functionCreate.CreateGradient = function(parent, props)
    local new = Instance.new("UIGradient")
    new.Parent = parent

    local defaultColors = {
        Color3.fromRGB(255, 255, 255),
        Color3.fromRGB(127, 127, 127),
        Color3.fromRGB(0, 0, 0)
    }
    if props and props.Color then
        local colorList = props.Color
        local colorCount = math.min(#colorList, 3)
        local colorKeypoints = {}
        for i = 1, colorCount do
            local position = (i - 1) / (colorCount - 1)
            table.insert(colorKeypoints, ColorSequenceKeypoint.new(position, colorList[i]))
        end
        new.Color = ColorSequence.new(colorKeypoints)
    else
        new.Color = ColorSequence.new(defaultColors[1], defaultColors[2], defaultColors[3])
    end
    if props and props.Rotation then
        new.Rotation = props.Rotation
    end
    if props and props.Intensity then
        local color1 = new.Color.Keypoints[1].Value
        local color2 = new.Color.Keypoints[#new.Color.Keypoints].Value

        local intensifiedColor1 = color1:Lerp(Color3.fromRGB(0, 0, 0), props.Intensity)
        local intensifiedColor2 = color2:Lerp(Color3.fromRGB(0, 0, 0), props.Intensity)

        new.Color = ColorSequence.new(intensifiedColor1, intensifiedColor2)
    end
    if props and props.Offset then
        new.Offset = props.Offset
    end
    if props and props.Tween then
        local speed = props.Speed or 2
        local goal = {Rotation = new.Rotation + 360}
        local tweenInfo = TweenInfo.new(speed, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)
        local tween = TweenService:Create(new, tweenInfo, goal)
        tween:Play()
    end
    return new
end

functionCreate.CreateTween = function(instance, prop, value, time, tweenWait)
  local tween = TweenService:Create(instance,
  TweenInfo.new(time, Enum.EasingStyle.Linear),
  {[prop] = value})
  tween:Play()
  if tweenWait then
    tween.Completed:Wait()
  end
end

functionCreate.CreateTween1 = function(instance, property, goal, duration, easingDirection)
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = TweenService:Create(instance, tweenInfo, {[property] = goal})
    tween:Play()
    return tween
end

functionCreate.TextSetColor = function(instance)
  if not instance or not instance.Parent then return end
  local connectionTextSetColor = {}
  local isMouseHovered = false
  connectionTextSetColor.MouseEnter = instance.MouseEnter:Connect(function()
    isMouseHovered = true
  end)
  connectionTextSetColor.MouseLeave = instance.MouseLeave:Connect(function()
    isMouseHovered = false
  end)
  connectionTextSetColor.RenderStepped = RunService.RenderStepped:Connect(function()
    if isMouseHovered then
      CreateTween(instance, "TextColor3", Color3.fromRGB(30, 140, 200), 0.4, true)
    else
      CreateTween(instance, "TextColor3", Configs_HUB.Cor_Text, 0.4, false)
    end
  end)
  local function cleanup()
    for _, connection in pairs(connectionTextSetColor) do
      if connection then
        connection:Disconnect()
      end
    end
    connectionTextSetColor = {}
  end
  connectionTextSetColor.AncestryChanged = instance.AncestryChanged:Connect(function(_, parent)
    if parent == nil and instance.Parent == nil then  -- เช็คให้แน่ใจว่า Parent หายไปจริง ๆ
       cleanup()
      end
   end)
 end

SetProps = functionCreate.SetProps
Corner = functionCreate.Corner
Stroke = functionCreate.Stroke
CreateGradient = functionCreate.CreateGradient
CreateTween = functionCreate.CreateTween
CreateTween1 = functionCreate.CreateTween1
TextSetColor = functionCreate.TextSetColor

local ScreenGui = Create("ScreenGui", CoreGui, {
  Name = "hcx hub library1",
  DisplayOrder = math.huge,
  IgnoreGuiInset = true
})

ScreenFind = CoreGui:FindFirstChild(ScreenGui.Name)
if ScreenFind and ScreenFind ~= ScreenGui then
  ScreenFind:Destroy()
end

functionCreate.DestroyScript = function()
  ScreenGui:Destroy()
end

DestroyScript = functionCreate.DestroyScript

local Menu_Notifi = Create("Frame", ScreenGui, {
  Size = UDim2.new(0.287, 0, 0.16, 0),
  Position = UDim2.new(1, 0, 0.6, 0),
  AnchorPoint = Vector2.new(1, 0),
  BackgroundTransparency = 1
})

functionCreate.MakeNotifi = function(Configs)
  local Title = Configs.Title or "REDz HUB"
  local text = Configs.Text or "Notificaรงรฃo"
  local timewait = Configs.Time or 5
  
  local Frame1 = Create("Frame", Menu_Notifi, {
    Size = UDim2.new(1, 0, 1, 0),
    BackgroundTransparency = 1,
    AutomaticSize = "Y",
    Name = "Title"
  })
  
  local Frame2 = Create("Frame", Frame1, {
    Size = UDim2.new(1, 0, 1, 0),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Position = UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0),
    AutomaticSize = "Y"
  })Corner(Frame2)
  
  local TextLabel = Create("TextLabel", Frame2, {
    Size = UDim2.new(0.9, 0, 0.58, 0),
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1,
    Text = Title,
    TextScaled = true, 
    TextXAlignment = "Left",
    TextColor3 = Configs_HUB.Cor_Text
  })
  
  local TextButton = Create("TextButton", Frame2, {
    Text = "X",
    Font = Configs_HUB.Text_Font,
    TextSize = 15,
    TextWrapped = true,
    BackgroundTransparency = 1,
    TextColor3 = Color3.fromRGB(200, 200, 200),
    Position = UDim2.new(1, 0, -0.12, 0),
    AnchorPoint = Vector2.new(1, 0),
    Size = UDim2.new(0.1, 0, 1, 0)
  })
  
  local TextLabel = Create("TextLabel", Frame2, {
    Size = UDim2.new(1, 0, 0.58, 0),
    Position = UDim2.new(0, 0, 0.58, 0),
    TextScaled = true,
    TextColor3 = Configs_HUB.Cor_DarkText,
    TextXAlignment = "Left",
    TextYAlignment = "Top",
    AutomaticSize = "Y",
    Text = text,
    BackgroundTransparency = 1,
    AutomaticSize = Enum.AutomaticSize.Y,
    TextWrapped = true
  })
  
  local FrameSize = Create("Frame", Frame2, {
    Size = UDim2.new(1, 0, 0.04, 0),
    BackgroundColor3 = Configs_HUB.Cor_Stroke,
    Position = UDim2.new(0, 0, 0.58, 0),
    BorderSizePixel = 0
  })Corner(FrameSize)Create("Frame", Frame2, {
    Size = UDim2.new(0, 0, 0, 5),
    Position = UDim2.new(0, 0, 1, 5),
    BackgroundTransparency = 1
  })
  
  task.spawn(function()
    CreateTween(FrameSize, "Size", UDim2.new(0, 0, 0.04, 0), timewait, true)
  end)
  
  TextButton.MouseButton1Click:Connect(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
    CreateTween(Frame2, "Position", UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0), 0.5, true)
    Frame1:Destroy()
  end)
  
  task.spawn(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.5, true)
    CreateTween(Frame2, "Position", UDim2.new(), 0.1, true)task.wait(timewait)
    if Frame2 then
      CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
      CreateTween(Frame2, "Position", UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0), 0.5, true)
      Frame1:Destroy()
    end
  end)
end

MakeNotifi = functionCreate.MakeNotifi

function MakeWindow(Configs)
 local title = Configs.Hub.Title or "hcx hub"
 local Anim_Title = Configs.Hub.Animation or "by : 1hooaczx1"
  
  local Menu = Create("Frame", ScreenGui, {
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Position = UDim2.new(0.77, 0, 0.227, 0),
      AnchorPoint = Vector2.new(1, 0),
      Active = true,
      Draggable = true
   })CreateGradient(Menu, {
      Color = {
         Color3.fromRGB(255, 255, 255),
         Color3.fromRGB(0, 0, 0),
         Color3.fromRGB(255, 0, 0)
      },
      Rotation = 45,
      Tween = true,
      Speed = 3
  })Corner(Menu)

  local TopBar = Create("Frame", Menu, {
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 0.09, 0),
    Visible = false
  })

  local BottomLine = Create("Frame", TopBar, {
    Size = UDim2.new(1, 0, 0.05, 0),
    Position = UDim2.new(0, 0, 1, -2),
    BackgroundColor3 = Configs_HUB.Cor_Stroke,
    BorderSizePixel = 0
  })

  local Title = Create("TextLabel", TopBar, {
    Size = UDim2.new(0.9, 0, 1, 0),
    Position = UDim2.new(0, 0, 0, 0),
    TextColor3 = Configs_HUB.Cor_Text,
    Font = Configs_HUB.Text_Font,
    TextXAlignment = "Left",
    Text = title,
    TextScaled = true,
    BackgroundTransparency = 1
  })
  
  local Close_Button = Create("TextButton", TopBar, {
    Size = UDim2.new(0.05, 0, 1, 0),
    Position = UDim2.new(0.95, 0, 0, 0),
    TextColor3 = Configs_HUB.Cor_Text,
    Text = "×",
    TextScaled = true,
    BackgroundTransparency = 1
  })Corner(Close_Button)
  
  local Minimize_BTN = Create("TextButton", TopBar, {
    Size = UDim2.new(0.05, 0, 1, 0),
    Position = UDim2.new(0.9, 0, 0, 0),
    TextColor3 = Configs_HUB.Cor_Text,
    Text = "-",
    TextScaled = true,
    BackgroundTransparency = 1
  })Corner(Close_Button)
  
  local AnimMenu = Create("Frame", ScreenGui, {
    Position = UDim2.new(0.5, 0, 0.57, 0),
    AnchorPoint = Vector2.new(0.5, 0.5),
    BackgroundColor3 = Configs_HUB.Cor_Hub
  })Corner(AnimMenu, {CornerRadius = UDim.new(0, 6)})
  
  local Anim_Credits = Create("TextLabel", AnimMenu, {
    Text = Anim_Title,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 1, 0),
    Visible = false,
    Font = Configs_HUB.Text_Font,
    TextTransparency = 1,
    TextColor3 = Configs_HUB.Cor_Text,
    Position = UDim2.new(0, 10, 0, 0),
    TextXAlignment = "Left",
    TextScaled = true
  })
  
  CreateTween(AnimMenu, "Size", UDim2.new(0, 0, 0.064, 0), 0.5, true)
  CreateTween(AnimMenu, "Size", UDim2.new(0.15, 0, 0.064, 0), 0.5, true)
  Anim_Credits.Visible = true
  task.wait(0.5)
  for i = 1, 0, -0.1 do task.wait()
    Anim_Credits.TextTransparency = i
  end
  task.wait(1)
  for i = 0, 1, 0.1 do task.wait()
    Anim_Credits.TextTransparency = i
  end
  Anim_Credits:Destroy()
  AnimMenu:Destroy()
  CreateTween(Menu, "Size", UDim2.new(0.576, 0, 0.09, 0), 0.5, true)
  TopBar.Visible = true
  CreateTween(Menu, "Size", UDim2.new(0.576, 0, 0.545, 0), 0.3, true)
  Menu.Draggable = true

  local line_Containers = Create("Frame", Menu, {
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 1, 0)
  })

   local ScrollBar = Create("ScrollingFrame", Menu, {
    Size = UDim2.new(0.225, 0, 0.91, 0),
    Position = UDim2.new(0, 0, 0.085, 0),
    CanvasSize = UDim2.new(0, 0, 0, 0),
    ScrollingDirection = Enum.ScrollingDirection.Y,
    AutomaticCanvasSize = Enum.AutomaticSize.Y,
    BackgroundTransparency = 1,
    ScrollBarThickness = 2
  })local listLayoutScrollBar = Create("UIListLayout", ScrollBar, {
    Padding = UDim.new(0, 5),
    SortOrder = Enum.SortOrder.LayoutOrder,
  })Create("UIPadding", ScrollBar, {
      PaddingLeft = UDim.new(0.028, 0),
      PaddingTop = UDim.new(0.003, 0),
      PaddingBottom = UDim.new(0.003, 0)
  })

  local Bottomright = Create("Frame", Menu, {
    Size = UDim2.new(0.002, 0, 0.913, 0),
    Position = UDim2.new(0.006 + ScrollBar.Position.X.Scale + ScrollBar.Size.X.Scale, ScrollBar.Position.X.Offset + ScrollBar.Size.X.Offset, 1, ScrollBar.Position.Y.Offset),
    AnchorPoint = Vector2.new(0, 1),
    BackgroundColor3 = Configs_HUB.Cor_Stroke,
    BorderSizePixel = 0
  })

  local Containers = Create("Frame", Menu, {
    Size = UDim2.new(0.762, 0, 0.915, 0),
    Position = UDim2.new(0.237, 0, 0.085, 0),
    BackgroundTransparency = 1
  })Corner(Containers)

IsMinimized = true
IsMinimizedu = false
local isLockedMinimize = false
local isLockedClose = false

Minimize_BTN.MouseButton1Click:Connect(function()
  if not isLockedMinimize then
    isLockedMinimize = true
    if IsMinimized then
      IsMinimized = false
      IsMinimizedu = true
      Containers.Visible = false
      Bottomright.Visible = false
      ScrollBar.Visible = false
      BottomLine.Visible = false
      CreateTween(Menu, "Size", UDim2.new(0.576, 0, 0.06, 0), 0.15, true)
      CreateTween(TopBar, "Size", UDim2.new(1, 0, 1, 0), 0, false)
    else
      IsMinimized = true
      IsMinimizedu = false
      CreateTween(TopBar, "Size", UDim2.new(1, 0, 0.09, 0), 0, false)
      CreateTween(Menu, "Size", UDim2.new(0.576, 0, 0.63, 0), 0.15, true)
      Containers.Visible = true
      ScrollBar.Visible = true
      BottomLine.Visible = true
      Bottomright.Visible = true
    end
    isLockedMinimize = false
  end
end)

function CreateClose()
  if not isLockedClose then
    isLockedClose = true
    if IsMinimizedu then
      IsMinimized = true
      IsMinimizedu = false
      CreateTween(TopBar, "Size", UDim2.new(1, 0, 0.09, 0), 0, false)
      CreateTween(Menu, "Size", UDim2.new(0.576, 0, 0.63, 0), 0.15, true)
      Containers.Visible = true
      ScrollBar.Visible = true
      BottomLine.Visible = true
      Bottomright.Visible = true
    end

    local CloseGui = Create("TextButton", Menu, {
      BackgroundTransparency = 0.5,
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Size = UDim2.new(1, 0, 1, 0),
      AutoButtonColor = false,
      Text = "",
      BackgroundTransparency = 0.5,
      Visible = false
    })Corner(CloseGui)

    local CloseMenu = Create("Frame", CloseGui, {
      Size = UDim2.new(),
      AnchorPoint = Vector2.new(0.5, 0.5),
      Position = UDim2.new(0.5, 0, 0.5, 0),
      Transparency = 1,
      BackgroundColor3 = Configs_HUB.Cor_Hub
    })Corner(CloseMenu)Stroke(CloseMenu)

    local Mensage = Create("TextLabel", CloseMenu, {
      Size = UDim2.new(0.8, 0, 0.25, 0),
      Text = "Are you sure you want to close this script?",
      Position = UDim2.new(0.1, 0, 0.2),
      Font = Configs_HUB.Text_Font,
      TextColor3 = Configs_HUB.Cor_Text,
      TextScaled = true,
      BackgroundTransparency = 1
    })

    local Confirm = Create("TextButton", CloseMenu, {
      Size = UDim2.new(0.35, 0, 0.3, 0),
      Position = UDim2.new(0.1, 0, 0.5, 0),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Text = "Close Script",
      Font = Configs_HUB.Text_Font,
      TextColor3 = Color3.fromRGB(240, 0, 0),
      TextScaled = true
    })Corner(Confirm)Stroke(Confirm)

    local Cancel = Create("TextButton", CloseMenu, {
      Size = UDim2.new(0.35, 0, 0.3, 0),
      Position = UDim2.new(0.9, 0, 0.5, 0),
      AnchorPoint = Vector2.new(1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Text = "Cancel",
      Font = Configs_HUB.Text_Font,
      TextColor3 = Color3.fromRGB(0, 240, 0),
      TextScaled = true
    })Corner(Cancel)Stroke(Cancel)

    CloseGui.Visible = true
    CreateTween(CloseMenu, "Transparency", 0, 0.2, false)
    CreateTween(CloseMenu, "Size", UDim2.new(0.7, 0, 0.7, 0), 0.2, false)

    Cancel.MouseButton1Click:Connect(function()
      CreateTween(CloseMenu, "Transparency", 1, 0.3, false)
      CreateTween(CloseMenu, "Size", UDim2.new(), 0.2, true)
      CloseGui:Destroy()
    end)

    Confirm.MouseButton1Click:Connect(function()
      CloseGui:Destroy()
      CreateTween(Menu, "Size", UDim2.new(), 0.3, true)
      DestroyScript()
    end)

    CloseGui.MouseButton1Click:Connect(function()
      CreateTween(CloseMenu, "Transparency", 1, 0.3, false)
      CreateTween(CloseMenu, "Size", UDim2.new(), 0.2, true)
      CloseGui:Destroy()
    end)
    isLockedClose = false
  end
end

Close_Button.MouseButton1Click:Connect(CreateClose)

local clicktoggle = Create("Sound", ScreenGui, {SoundId = "rbxassetid://6042053626", Volume = 0.1})
local falsetoggle = Create("Sound", ScreenGui, {SoundId = "rbxassetid://9083627113", Volume = 0.1})
local click1 = Create("Sound", ScreenGui, {SoundId = "rbxassetid://7475853483", Volume = 0.1})
local click2 = Create("Sound", ScreenGui, {SoundId = "rbxassetid://8432836186", Volume = 0.1})
local notifyfriend = Create("Sound", ScreenGui, {SoundId = "rbxassetid://1862045322", Volume = 0.2, PlaybackSpeed = 0.9})
local notifyfriendleave = Create("Sound", ScreenGui, {SoundId = "rbxassetid://489103549", Volume = 0.2})
local musicPlaying = false
local soundId1 = "rbxassetid://8486683243"
local soundId2 = "rbxassetid://4499400560"
local notificationgui = {}

local function notify(params)
    local Title = params.Title or "Default Title"
    local Text = params.Text or "Default Message"
    local buttondeleteText = params.buttonText or "OK"
    local image = params.image or "18488884411"
    local guiSize = params.guiSize or Vector2.new(400, 70)
    local duration = params.duration
    local position = params.Position or UDim2.new(0.5, -guiSize.X / 2, 0.45, 50)

    local NotificationLabelText = Create("TextLabel", ScreenGui, {
        Size = UDim2.new(0, guiSize.X, 0, guiSize.Y),
        BackgroundTransparency = 1,
        Text = Text,
        TextScaled = true,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Position = position
    })

    local sound2 = Create("Sound", NotificationLabelText, {
        SoundId = soundId1,
        Volume = 0.2,
        PlaybackSpeed = 0.9
    })
    sound2:Play()

    local NotificationImage = Create("ImageLabel", NotificationLabelText, {
        Size = UDim2.new(0, 70, 0, 70),
        Position = UDim2.new(-0.2, 0, 0, 0),
        Image = "rbxassetid://" .. image,
        BackgroundTransparency = 1
    })

    local NotificationLabelTitle = Create("TextLabel", NotificationLabelText, {
        Size = UDim2.new(1, 0, 0.4, 0),
        BackgroundTransparency = 1,
        Text = Title,
        TextScaled = true,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Position = UDim2.new(0, 0, -0.4, 0)
    })

    local OkButton = Create("TextButton", NotificationLabelText, {
        Size = UDim2.new(1, 0, 0.4, 0),
        Position = UDim2.new(0, 0, 1, 0),
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextScaled = true,
        Text = buttondeleteText,
        BackgroundTransparency = 1
    })

    local sound1 = Create("Sound", OkButton, {
        SoundId = soundId2,
        Volume = 0.2,
        PlaybackSpeed = 0.9
    })

    table.insert(notificationgui, NotificationLabelText)

    if #notificationgui > 1 then
        local oldNotification = table.remove(notificationgui, 1)
        oldNotification:Destroy()
    end

    local tween = TweenService:Create(NotificationLabelText, TweenInfo.new(0.5), {Position = UDim2.new(position.X.Scale, position.X.Offset, position.Y.Scale, position.Y.Offset - (#notificationgui * 60))})
    tween:Play()

    if duration then
        delay(duration, function()
            local tweenOut = TweenService:Create(NotificationLabelText, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -guiSize.X / 2, 0.45, 100), TextTransparency = 1})
            tweenOut:Play()
            
            tweenOut.Completed:Connect(function()
                NotificationLabelText:Destroy()
            end)
        end)
    end

    OkButton.MouseButton1Click:Connect(function()
        sound1:Play()
        local tweenOut = TweenService:Create(NotificationLabelText, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -guiSize.X / 2, 0.45, 100), TextTransparency = 1})
        tweenOut:Play()

        tweenOut.Completed:Connect(function()
            sound2:Destroy()
            sound1:Destroy()
            NotificationLabelText:Destroy()
        end)
    end)
end

notify({
      Title = "Hi",
      Text = "Hope you enjoy using it\nWhen I update the Gui, I would like to say that it may cause the ui to not work or crash, so please understand",
      buttonText = "ok",
      imageID = "",
      guiSize = Vector2.new(400, 70),
})

 function MinimizeButton(Configs)
    local functions = {}
    local player = game.Players.LocalPlayer
    local Players = game:GetService("Players")
    local players = game:GetService("Players")
    local localPlayer = players.LocalPlayer
    local LocalPlayer = players.LocalPlayer
    local accountAgeInDays = LocalPlayer.AccountAge
    local maxPlayers = players.MaxPlayers
    local ageInDays = player.AccountAge
    local PlaceId = game.PlaceId
    local friendsCooldown = 0
    local friendsInTotal = 0
    local MarketplaceService = game:GetService("MarketplaceService")
    local AssetService = game:GetService("AssetService")
    local TeleportService = game:GetService("TeleportService")
    local pages = AssetService:GetGamePlacesAsync()
    local gamePlaces = pages:GetCurrentPage()
    local count = 1
    local Player = players.LocalPlayer
    local Mouse = LocalPlayer:GetMouse()
    local HttpService = game:GetService("HttpService")
    local View = nil
    local playerFrames = {}
    local friendFrames = {}
    local image = Configs.Image or ""

local frame = Create("Frame", ScreenGui, {
    Size = UDim2.new(0.5, 0, 0.1, 0),
    AnchorPoint = Vector2.new(0.5, 0.5),
    Position = UDim2.new(0.5, 0, 0.95, 0),
    BackgroundColor3 = Configs_HUB.Cor_Hub
})

local tweenGradient = CreateGradient(frame, {
    Color = {
        Color3.fromRGB(255, 255, 255),
        Color3.fromRGB(0, 0, 0),
        Color3.fromRGB(255, 0, 0)
    },
    Rotation = 45,
    Tween = true,
    Speed = 3
})

local Button1 = Create("TextButton", ScreenGui, {
    Size = UDim2.new(0.07, 0, 0.07, 0),
    AnchorPoint = Vector2.new(0.5, 1),
    Position = UDim2.new(0.5, 0, 0.9, 0),
    TextScaled = true,
    Text = "v",
    ZIndex = 10,
    TextColor3 = Color3.fromRGB(255, 255, 255),
    BackgroundTransparency = 1
})

local minimize1 = false
Button1.MouseButton1Click:Connect(function()
    minimize1 = not minimize1
    if minimize1 then
        Button1.Text = "^"
        CreateTween1(frame, "Size", UDim2.new(0.5, 0, 0, 0), 0.3, true)
        CreateTween1(Button1, "Position", UDim2.new(0.5, 0, 1.005, 0), 0.3, false)
        frame.Visible = false
    else
        frame.Visible = true
        Button1.Text = "v"
        CreateTween1(frame, "Size", UDim2.new(0.5, 0, 0.1, 0), 0.3, true)
        CreateTween1(Button1, "Position", UDim2.new(0.5, 0, 0.9, 0), 0.3, false)
    end
end)

local TimeLabelgui = Create("TextLabel", frame, {
    Size = UDim2.new(0.3, 0, 0.5, 0),
    TextSize = 20,
    TextWrapped = true,
    TextScaled = true,
    Position = UDim2.new(-0.05, 0, 0.22, 0),
    TextColor3 = Configs_HUB.Cor_Text,
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1
})
TextSetColor(TimeLabelgui)

functions.createToggleButton = function(parent, position, callback, initialState)
    local TextButton = Create("TextButton", parent, {
        Size = UDim2.new(0.13, 0, 0.17, 0),
        Position = position,
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Name = "Frame",
        Text = "",
        BackgroundTransparency = 1,
        AutoButtonColor = false
    })Corner(TextButton)

    local Frame1 = Create("Frame", TextButton, {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
    })
    Corner(Frame1, {CornerRadius = UDim.new(1, 0)})
    local Stroke = Stroke(Frame1, {Thickness = 2})
    
    local Frame2 = Create("Frame", Frame1, {
        Size = UDim2.new(0.4, 0, 0.95, 0),
        Position = UDim2.new(0, 0, 0.49, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke
    })
    Corner(Frame2, {CornerRadius = UDim.new(1, 0)})

    local OnOff = initialState

    local function setState(state)
        OnOff = state
        if OnOff then
            clicktoggle:Play()
            CreateTween(Frame2, "Position", UDim2.new(0.6, 0, 0.5, 0), 0.2, false)
            CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
            CreateTween(Stroke, "Color", Color3.fromRGB(30, 140, 200), 0.2, false)
            callback(true)
        else
            falsetoggle:Play()
            CreateTween(Frame2, "Position", UDim2.new(0, 0, 0.5, 0), 0.2, false)
            CreateTween(Frame2, "BackgroundColor3", Configs_HUB.Cor_Stroke, 0.2, false)
            CreateTween(Stroke, "Color", Configs_HUB.Cor_Stroke, 0.2, false)
            callback(false)
        end
    end

    TextButton.MouseButton1Click:Connect(function()
        setState(not OnOff)
    end)

    TextButton.AncestryChanged:Connect(function(_, parent)
        if not parent and OnOff then
            setState(false)
        end
    end)

    return setState
end

functions.createSettingSection = function(parent, title, description, buttonCallback, buttonState)
    local sectionFrame = Create("Frame", parent, {
        Size = UDim2.new(0.96, 0, 0.4, 0),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        BackgroundTransparency = 0
    })local Stroke = Stroke(sectionFrame, {Thickness = 2})

    local titleLabel = Create("TextLabel", sectionFrame, {
        Size = UDim2.new(1, 0, 0.2, 0),
        TextScaled = true,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = title
    })
    TextSetColor(titleLabel)

    local descriptionLabel = Create("TextLabel", sectionFrame, {
        Size = UDim2.new(1, 0, 0.5, 0),
        TextScaled = true,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 0, 0.2, 0),
        TextColor3 = Configs_HUB.Cor_Text,
        Text = description
    })
    TextSetColor(descriptionLabel)

    local toggleButtonPosition = UDim2.new(0.81, 0, 0.75, 0)
    local toggleButtonState = functions.createToggleButton(sectionFrame, toggleButtonPosition, buttonCallback, buttonState)

    return toggleButtonState
end

functions.createTextboxWithButton = function(parent, title, description, callback)
    local sectionFrame = Create("Frame", parent, {
        Size = UDim2.new(0.96, 0, 0.4, 0),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        BackgroundTransparency = 0
    })local Stroke = Stroke(sectionFrame, {Thickness = 2})

    local titleLabel = Create("TextLabel", sectionFrame, {
        Size = UDim2.new(1, 0, 0.2, 0),
        TextScaled = true,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = title
    })
    TextSetColor(titleLabel)

    local descriptionLabel = Create("TextLabel", sectionFrame, {
        Size = UDim2.new(1, 0, 0.6, 0),
        TextScaled = true,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 0, 0.2, 0),
        TextColor3 = Configs_HUB.Cor_Text,
        Text = description
    })
    TextSetColor(descriptionLabel)

    local messageTextbox = Create("TextBox", sectionFrame, {Size = UDim2.new(0.75, 0, 0.2, 0), Position = UDim2.new(0, 0, 0.8, 0), BackgroundColor3 = Configs_HUB.Cor_Options, TextColor3 = Configs_HUB.Cor_Text, PlaceholderText = "Enter your message here...", ClearTextOnFocus = true, TextScaled = true, Font = Configs_HUB.Text_Font})

    local sendButton = Create("TextButton", sectionFrame, {Size = UDim2.new(0.25, 0, 0.2, 0), Position = UDim2.new(0.75, 0, 0.8, 0), BackgroundColor3 = Configs_HUB.Cor_Options, TextColor3 = Configs_HUB.Cor_Text, Text = "Send Message", TextScaled = true, Font = Configs_HUB.Text_Font})

    sendButton.MouseButton1Click:Connect(function()
        local message = messageTextbox.Text
        if message and message:match("%S") then
            callback(message)
            messageTextbox.Text = ""
            messageTextbox.TextColor3 = Configs_HUB.Cor_Text
        else
            messageTextbox.Text = "Please enter a message."
            messageTextbox.TextColor3 = Color3.new(1, 0, 0)
        end
    end)

    messageTextbox.Focused:Connect(function()
        if messageTextbox.Text == "Please enter a message." then
            messageTextbox.Text = ""
            messageTextbox.TextColor3 = Configs_HUB.Cor_Text
        end
    end)

    return sectionFrame
end

functions.createTextBox = function(parent, title, description, buttonText, callback, minValue, maxValue)
    local sectionFrame = Create("Frame", parent, {
        Size = UDim2.new(0.96, 0, 0.4, 0),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        BackgroundTransparency = 0
    })
    local Stroke = Stroke(sectionFrame, {Thickness = 2})

    local titleLabel = Create("TextLabel", sectionFrame, {
        Size = UDim2.new(1, 0, 0.2, 0),
        TextScaled = true,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = title
    })
    TextSetColor(titleLabel)

    local descriptionLabel = Create("TextLabel", sectionFrame, {
        Size = UDim2.new(1, 0, 0.6, 0),
        TextScaled = true,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 0, 0.2, 0),
        TextColor3 = Configs_HUB.Cor_Text,
        Text = description
    })
    TextSetColor(descriptionLabel)

    local inputBox = Create("TextBox", sectionFrame, {
        Size = UDim2.new(0.75, 0, 0.2, 0),
        Position = UDim2.new(0, 0, 0.8, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Text = tostring(minValue or 0),
        TextScaled = true,
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font
    })
    TextSetColor(inputBox)
    
    local sendButton = Create("TextButton", sectionFrame, {
        Size = UDim2.new(0.25, 0, 0.2, 0),
        Position = UDim2.new(0.75, 0, 0.8, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = buttonText,
        TextScaled = true,
        Font = Configs_HUB.Text_Font
    })

    sendButton.MouseButton1Click:Connect(function()
        local value = tonumber(inputBox.Text)
        if value then
            if minValue then value = math.max(value, minValue) end
            if maxValue then value = math.min(value, maxValue) end
            inputBox.Text = tostring(value)
            callback(value)
        else
            inputBox.Text = tostring(minValue or 1)
        end
    end)

    return inputBox, sendButton
end

local framek = Create("Frame", ScreenGui, {
    Size = UDim2.new(0.7, 0, 0.64, 0),
    Position = UDim2.new(0.13, 0, 0.2, 0),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Visible = false
})

local mainText = Create("TextLabel", framek, {
    Size = UDim2.new(1, 0, 0.15, 0),
    BackgroundTransparency = 0.7,
    Text = "Universal Viewer",
    TextColor3 = Configs_HUB.Cor_Text,
    Font = Configs_HUB.Text_Font,
    TextScaled = true
})
TextSetColor(mainText)

Create("UIGradient", mainText, {
    Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
    },
    Transparency = NumberSequence.new{
        NumberSequenceKeypoint.new(0, 1),
        NumberSequenceKeypoint.new(1, 0)
    },
    Rotation = 90
})

local frameGame = Create("ScrollingFrame", framek, {
    Size = UDim2.new(1, 0, 0.85, 0),
    Position = UDim2.new(0, 0, 0.15, 0),
    BackgroundColor3 = Color3.fromRGB(0, 0, 0),
    BackgroundTransparency = 1,
    CanvasSize = UDim2.new(0, 0, 5, 0),
    ScrollBarThickness = 0
})
Create("UIListLayout", frameGame, {
    Padding = UDim.new(0, 1),
    SortOrder = Enum.SortOrder.LayoutOrder,
})
Create("UIPadding", frameGame, {
    PaddingLeft = UDim.new(0.028, 0),
    PaddingTop = UDim.new(0.003, 0),
    PaddingBottom = UDim.new(0.003, 0)
})

functions.UpdatePlaces = function()
    local existing = {}
    for _, child in ipairs(frameGame:GetChildren()) do
        if not child:IsA("UIListLayout") and not child:IsA("UIPadding") then
            existing[child.Name] = child
        end
    end
    local desired = {}
    desired["MainGameLabel"] = true
    desired["Place_" .. tostring(gamePlaces[1].PlaceId)] = true
    if #gamePlaces <= 1 then
        desired["NoSplitLabel"] = true
    else
        desired["SplitGamesLabel"] = true
        for i = 2, #gamePlaces do
            desired["Place_" .. tostring(gamePlaces[i].PlaceId)] = true
        end
    end
    for name, node in pairs(existing) do
        if not desired[name] then
            node:Destroy()
        end
    end
    if not frameGame:FindFirstChild("MainGameLabel") then
        local lbl = Create("TextLabel", frameGame, {
            Name = "MainGameLabel",
            Size = UDim2.new(0.96, 0, 0.02, 0),
            BackgroundTransparency = 0.7,
            Text = "MainGame",
            TextColor3 = Configs_HUB.Cor_Text,
            Font = Configs_HUB.Text_Font,
            TextScaled = true
        })
        TextSetColor(lbl)
        Create("UIGradient", lbl, {
            Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0,   0,   0)),
                ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
                ColorSequenceKeypoint.new(1,   Color3.fromRGB(255, 255, 255))
            },
            Transparency = NumberSequence.new{
                NumberSequenceKeypoint.new(0, 1),
                NumberSequenceKeypoint.new(1, 0)
            },
            Rotation = 90
        })
    end
    local mainPlace = gamePlaces[1]
    local mainName  = "Place_" .. tostring(mainPlace.PlaceId)
    if not frameGame:FindFirstChild(mainName) then
        local fr = Create("Frame", frameGame, {
            Name = mainName,
            Size = UDim2.new(0.96, 0, 0.12, 0),
            BackgroundColor3 = Configs_HUB.Cor_Hub
        })
        Create("UIGradient", fr, {
            Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0,   Color3.fromRGB(255,   0,   0)),
                ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
                ColorSequenceKeypoint.new(1,   Color3.fromRGB(0,     0,   0))
            },
            Transparency = NumberSequence.new{
                NumberSequenceKeypoint.new(0, 1),
                NumberSequenceKeypoint.new(1, 0)
            },
            Rotation = 90
        })
        local success, productInfo = pcall(function()
            return MarketplaceService:GetProductInfo(mainPlace.PlaceId, Enum.InfoType.Asset)
        end)
        if success and productInfo then
            Create("ImageLabel", fr, {
                Size = UDim2.new(0.25, 0, 1, 0),
                BackgroundTransparency = 1,
                Position = UDim2.new(0, 0, 0, 0),
                Image = "rbxthumb://type=Asset&id=" .. mainPlace.PlaceId .. "&w=420&h=420"
            })
        end
        Create("TextLabel", fr, {
            Size = UDim2.new(0.05, 0, 0.09, 0),
            Position = UDim2.new(0.252, 0, 0, 0),
            Text = "1",
            BackgroundTransparency = 1,
            TextColor3 = Configs_HUB.Cor_Text,
            Font = Configs_HUB.Text_Font,
            TextScaled = true
        })
        Create("TextLabel", fr, {
            Size = UDim2.new(0.748, 0, 0.23, 0),
            Position = UDim2.new(0.252, 0, 0.16, 0),
            Text = "Name: " .. mainPlace.Name,
            BackgroundTransparency = 1,
            TextColor3 = Configs_HUB.Cor_Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            Font = Configs_HUB.Text_Font,
            TextScaled = true
        })
        Create("TextLabel", fr, {
            Size = UDim2.new(0.748, 0, 0.23, 0),
            Position = UDim2.new(0.252, 0, 0.4, 0),
            Text = "Id: " .. mainPlace.PlaceId,
            BackgroundTransparency = 1,
            TextColor3 = Configs_HUB.Cor_Text,
            TextXAlignment = Enum.TextXAlignment.Left,
            Font = Configs_HUB.Text_Font,
            TextScaled = true
        })
        local tb = Create("TextButton", fr, {
            Size = UDim2.new(1, 0, 0.17, 0),
            Position = UDim2.new(0, 0, 0.83, 0),
            BackgroundColor3 = Configs_HUB.Cor_Hub,
            TextColor3 = Configs_HUB.Cor_Text,
            Font = Configs_HUB.Text_Font,
            BackgroundTransparency = 0,
            Text = "Play",
            TextScaled = true
        })
        tb.MouseButton1Click:Connect(function()
            TeleportService:Teleport(mainPlace.PlaceId, game.Players.LocalPlayer)
        end)
        Create("UIGradient", tb, {
            Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0,   Color3.fromRGB(255,   0,   0)),
                ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
                ColorSequenceKeypoint.new(1,   Color3.fromRGB(0,     0,   0))
            },
            Transparency = NumberSequence.new{
                NumberSequenceKeypoint.new(0, 0),
                NumberSequenceKeypoint.new(1, 0)
            },
            Rotation = 90
        })
    end

    if #gamePlaces <= 1 then
        if not frameGame:FindFirstChild("NoSplitLabel") then
            local lbl2 = Create("TextLabel", frameGame, {
                Name = "NoSplitLabel",
                Size = UDim2.new(0.96, 0, 0.02, 0),
                BackgroundTransparency = 0.7,
                Text = "This game does not have a split game",
                TextColor3 = Configs_HUB.Cor_Text,
                Font = Configs_HUB.Text_Font,
                TextScaled = true
            })
            TextSetColor(lbl2)
            Create("UIGradient", lbl2, {
                Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0,   Color3.fromRGB(0,   255, 255)),
                    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
                    ColorSequenceKeypoint.new(1,   Color3.fromRGB(0,     0,   0))
                },
                Transparency = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 1),
                    NumberSequenceKeypoint.new(1, 0)
                },
                Rotation = 90
            })
        end
    else
        if not frameGame:FindFirstChild("SplitGamesLabel") then
            local lbl3 = Create("TextLabel", frameGame, {
                Name = "SplitGamesLabel",
                Size = UDim2.new(0.96, 0, 0.02, 0),
                BackgroundTransparency = 0,
                Text = "Splitgame",
                TextColor3 = Configs_HUB.Cor_Text,
                Font = Configs_HUB.Text_Font,
                TextScaled = true
            })
            TextSetColor(lbl3)
            Create("UIGradient", lbl3, {
                Color = ColorSequence.new{
                    ColorSequenceKeypoint.new(0,   Color3.fromRGB(0,   255, 255)),
                    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
                    ColorSequenceKeypoint.new(1,   Color3.fromRGB(0,     0,   0))
                },
                Transparency = NumberSequence.new{
                    NumberSequenceKeypoint.new(0, 1),
                    NumberSequenceKeypoint.new(1, 0)
                },
                Rotation = 90
            })
        end
        for i = 2, #gamePlaces do
            local place = gamePlaces[i]
            local name  = "Place_" .. tostring(place.PlaceId)
            if not frameGame:FindFirstChild(name) then
                local fr2 = Create("Frame", frameGame, {
                    Name = name,
                    Size = UDim2.new(0.96, 0, 0.12, 0),
                    BackgroundColor3 = Configs_HUB.Cor_Hub
                })
                Create("UIGradient", fr2, {
                    Color = ColorSequence.new{
                        ColorSequenceKeypoint.new(0,   Color3.fromRGB(0,   0,   0)),
                        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
                        ColorSequenceKeypoint.new(1,   Color3.fromRGB(255,   0,   0))
                    },
                    Transparency = NumberSequence.new{
                        NumberSequenceKeypoint.new(0, 0),
                        NumberSequenceKeypoint.new(1, 0)
                    },
                    Rotation = 40
                })
                local success, productInfo = pcall(function()
                    return MarketplaceService:GetProductInfo(place.PlaceId, Enum.InfoType.Asset)
                end)
                if success and productInfo then
                    Create("ImageLabel", fr2, {
                        Size = UDim2.new(0.25, 0, 1, 0),
                        Position = UDim2.new(0, 0, 0, 0),
                        BackgroundTransparency = 1,
                        Image = "rbxthumb://type=Asset&id=" .. place.PlaceId .. "&w=420&h=420"
                    })
                end
                Create("TextLabel", fr2, {
                    Size = UDim2.new(0.05, 0, 0.09, 0),
                    Position = UDim2.new(0.252, 0, 0, 0),
                    Text = tostring(i),
                    BackgroundTransparency = 1,
                    TextColor3 = Configs_HUB.Cor_Text,
                    Font = Configs_HUB.Text_Font,
                    TextScaled = true
                })
                Create("TextLabel", fr2, {
                    Size = UDim2.new(0.748, 0, 0.23, 0),
                    Position = UDim2.new(0.252, 0, 0.16, 0),
                    Text = "Name: " .. place.Name,
                    BackgroundTransparency = 1,
                    TextColor3 = Configs_HUB.Cor_Text,
                    TextXAlignment = Enum.TextXAlignment.Left,
                    Font = Configs_HUB.Text_Font,
                    TextScaled = true
                })
                Create("TextLabel", fr2, {
                    Size = UDim2.new(0.748, 0, 0.23, 0),
                    Position = UDim2.new(0.252, 0, 0.4, 0),
                    Text = "Id: " .. place.PlaceId,
                    BackgroundTransparency = 1,
                    TextColor3 = Configs_HUB.Cor_Text,
                    TextXAlignment = Enum.TextXAlignment.Left,
                    Font = Configs_HUB.Text_Font,
                    TextScaled = true
                })
                local tb2 = Create("TextButton", fr2, {
                    Size = UDim2.new(1, 0, 0.17, 0),
                    Position = UDim2.new(0, 0, 0.83, 0),
                    BackgroundTransparency = 0,
                    BackgroundColor3 = Configs_HUB.Cor_Hub,
                    TextColor3 = Configs_HUB.Cor_Text,
                    Font = Configs_HUB.Text_Font,
                    Text = "Play",
                    TextScaled = true
                })
                tb2.MouseButton1Click:Connect(function()
                    TeleportService:Teleport(place.PlaceId, game.Players.LocalPlayer)
                end)
                Create("UIGradient", tb2, {
                    Color = ColorSequence.new{
                        ColorSequenceKeypoint.new(0,   Color3.fromRGB(255,   0,   0)),
                        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
                        ColorSequenceKeypoint.new(1,   Color3.fromRGB(0,     0,   0))
                    },
                    Transparency = NumberSequence.new{
                        NumberSequenceKeypoint.new(0, 0),
                        NumberSequenceKeypoint.new(1, 0)
                    },
                    Rotation = -60
                })
            end
        end
    end
end

functions.UpdatePlaces()

local SplitgameToggleButton = Create("ImageButton", frame, {
    Size = UDim2.new(0.06, 0, 0.6, 0),
    Position = UDim2.new(0.22 + 0.2, 0, 0.22, 0),
    BackgroundColor3 = Color3.fromRGB(204, 255, 204),
    ZIndex = 10,
    BackgroundTransparency = 1,
    Image = "rbxthumb://type=Asset&id=82825316875765&w=150&h=150"
})

local minimiz7 = true
SplitgameToggleButton.MouseButton1Click:Connect(function()
     minimiz7 = not minimiz7

      if minimiz7 then
          framek.Visible = true
          click1:Play()
          CreateTween(framek, "Size", UDim2.new(0.7, 0, 0.64, 0), 0.3, true) 
       else
          click2:Play()
          CreateTween(framek, "Size", UDim2.new(0.7, 0, 0, 0), 0.3, true)
          framek.Visible = false
      end
 end)

local framep = Create("Frame", ScreenGui, {
    Size = UDim2.new(0.6, 0, 0.64, 0),
    Position = UDim2.new(0.2, 0, 0.2, 0),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.8,
    Visible = false
})Corner(framep)Stroke(framep)

local frametext = Create("TextLabel", framep, {
     Size = UDim2.new(1, 0, 0.08, 0),
     Position = UDim2.new(0, 0, 0, 0),
     Text = "Players in Server "..string.format("%d/%d", #game.Players:GetPlayers(), game.Players.MaxPlayers),
     BackgroundTransparency = 1,
     TextColor3 = Configs_HUB.Cor_Text,
     Font = Configs_HUB.Text_Font,
     TextScaled = true
})

local linep = Create("Frame", framep, {
    Size = UDim2.new(1, 0, 0.005, 0),
    Position = UDim2.new(0, 0, 0.07, 0), 
    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
    BorderSizePixel = 0
})

local ScrollBarPlayers = Create("ScrollingFrame", framep, {
    Size = UDim2.new(1, 0, 0.82, 0),
    Position = UDim2.new(0, 0, 0.08, 0),
    CanvasSize = UDim2.new(0, 0, 0, 0),
    ScrollingDirection = Enum.ScrollingDirection.Y,
    AutomaticCanvasSize = Enum.AutomaticSize.Y,
    BackgroundTransparency = 1,
    ScrollBarThickness = 0
  })Create("UIListLayout", ScrollBarPlayers, {
    Padding = UDim.new(0, 5),
    SortOrder = Enum.SortOrder.LayoutOrder,
  })Create("UIPadding", ScrollBarPlayers, {
      PaddingLeft = UDim.new(0.028, 0),
      PaddingTop = UDim.new(0.003, 0),
      PaddingBottom = UDim.new(0.003, 0)
  })

local unviewallplayerbutton = Create("ImageButton", framep, {
    Size = UDim2.new(0.07, 0, 0.1, 0),
    Position = UDim2.new(0.93, 0, 0.9, 0),
    BackgroundColor3 = Configs_HUB.Cor_Options,
    BackgroundTransparency = 1,
    Image = "rbxassetid://137903829820448"
})

unviewallplayerbutton.MouseButton1Click:Connect(function()
    local localChar = game:GetService("Players").LocalPlayer.Character
    if localChar then
        local hum = localChar:WaitForChild("Humanoid")
        if hum then
            workspace.CurrentCamera.CameraSubject = hum
        end
    end
    for _, data in pairs(playerFrames) do
        if data.UI then
            local viewButton = data.UI:FindFirstChildOfClass("ImageButton")
            if viewButton then
                viewButton.Image = "rbxassetid://96859795672738"
            end
        end
    end
    View = nil
end)

functions.UpdatePlayerList = function()
    frametext.Text = "Players in Server "..string.format("%d/%d", #game.Players:GetPlayers(), game.Players.MaxPlayers)
    local currentPlayers = {}
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        currentPlayers[player.UserId] = player
        if not playerFrames[player.UserId] then
            local frameplayer = Create("Frame", ScrollBarPlayers, {
                Size = UDim2.new(0.95, 0, 0.18, 0),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1
            })
            Corner(frameplayer)
            Stroke(frameplayer)
            local playerdisplayName = Create("TextLabel", frameplayer, {
                Size = UDim2.new(0.81, 0, 0.5, 0),
                Position = UDim2.new(0.089, 0, 0, 0),
                Text = player.DisplayName,
                TextXAlignment = "Left",
                BackgroundTransparency = 1,
                TextColor3 = Configs_HUB.Cor_Text,
                Font = Configs_HUB.Text_Font,
                TextScaled = true
            })
            local playername = Create("TextLabel", frameplayer, {
                Size = UDim2.new(0.81, 0, 0.5, 0),
                Position = UDim2.new(0.089, 0, 0.5, 0),
                Text = "@"..player.Name,
                TextXAlignment = "Left",
                BackgroundTransparency = 1,
                TextColor3 = Color3.fromRGB(114, 117, 130),
                Font = Configs_HUB.Text_Font,
                TextScaled = true
            })
            local imageplayer = Create("ImageLabel", frameplayer, {
                Size = UDim2.new(0.078, 0, 0.95, 0),
                Position = UDim2.new(0.005, 0, 0.015, 0),
                BackgroundTransparency = 1,
                Image = "http://www.roblox.com/Thumbs/Avatar.ashx?x=500&y=500&Format=Png&userId=" .. player.UserId
            })
            Corner(imageplayer, {CornerRadius = UDim.new(1, 0)})
            Stroke(imageplayer, {Color = Color3.fromRGB(255, 255, 255)})
            if player ~= game:GetService("Players").LocalPlayer then
                local viewplayerbutton = Create("ImageButton", frameplayer, {
                    Size = UDim2.new(0.09, 0, 0.95, 0),
                    Position = UDim2.new(0.905, 0, 0.025, 0),
                    BackgroundColor3 = Configs_HUB.Cor_Options,
                    BackgroundTransparency = 1,
                    Image = "rbxassetid://96859795672738"
                })
                viewplayerbutton.MouseButton1Click:Connect(function()
                    if View and View.button ~= viewplayerbutton then
                        View.button.Image = "rbxassetid://96859795672738"
                        local localChar = game:GetService("Players").LocalPlayer.Character
                        if localChar then
                            local hum = localChar:WaitForChild("Humanoid")
                            if hum then
                                game.Workspace.Camera.CameraSubject = hum
                            end
                        end
                        View = nil
                    end
                    if View and View.button == viewplayerbutton then
                        viewplayerbutton.Image = "rbxassetid://96859795672738"
                        local localChar = game:GetService("Players").LocalPlayer.Character
                        if localChar then
                            local hum = localChar:WaitForChild("Humanoid")
                            if hum then
                                game.Workspace.Camera.CameraSubject = hum
                            end
                        end
                        View = nil
                    else
                        viewplayerbutton.Image = "rbxassetid://137903829820448"
                        local char = player.Character
                        if char then
                            local root = char:WaitForChild("Humanoid") or char:WaitForChild("HumanoidRootPart")
                            if root then
                                game.Workspace.Camera.CameraSubject = root
                            end
                        end
                        View = {button = viewplayerbutton, player = player}
                    end
                end)
            end
            playerFrames[player.UserId] = {
                UI = frameplayer,
            }
        end
    end
    for userId, data in pairs(playerFrames) do
        if not currentPlayers[userId] then
            if data.UI and data.UI.Parent then
                data.UI:Destroy()
            end
            playerFrames[userId] = nil
            if View and View.player.UserId == userId then
                local localChar = game:GetService("Players").LocalPlayer.Character
                if localChar then
                    local hum = localChar:WaitForChild("Humanoid")
                    if hum then
                        game.Workspace.Camera.CameraSubject = hum
                    end
                end
                View = nil
            end
        end
    end
end

functions.UpdatePlayerList()

local PlayerListToggleButton = Create("ImageButton", frame, {
    Size = UDim2.new(0.06, 0, 0.6, 0),
    Position = UDim2.new(0.22 + 0.3, 0, 0.22, 0),
    BackgroundColor3 = Color3.fromRGB(204, 255, 204),
    ZIndex = 10,
    BackgroundTransparency = 1,
    Image = "rbxthumb://type=Asset&id=140380840270815&w=150&h=150"
})

local PlayerList = true
PlayerListToggleButton.MouseButton1Click:Connect(function()
     PlayerList = not PlayerList
      if PlayerList then
          framep.Visible = true
          click1:Play()
          CreateTween(framep, "Size", UDim2.new(0.6, 0, 0.64, 0), 0.3, true) 
       else
          click2:Play()
          CreateTween(framep, "Size", UDim2.new(0.6, 0, 0, 0), 0.3, true)
          framep.Visible = false
      end
 end)

local success, result = pcall(function()
    return MarketplaceService:GetProductInfo(PlaceId)
end)

local Asset = MarketplaceService:GetProductInfo(PlaceId)
local gameName = success and result.Name or Asset.Name or "Unknown"

local frameinfogui = Create("Frame", ScreenGui, {
    Size = UDim2.new(),
    BackgroundColor3 = Color3.fromRGB(0, 0, 0),
    BackgroundTransparency = 1,
    Visible = false
})

local frameinfo = Create("Frame", frameinfogui, {
    Size = UDim2.new(0.25, 0, 0.18, 0),
    Position = UDim2.new(0.04, 0, 0.24, 0),
    AnchorPoint = Vector2.new(0.04, 0.21),
    BackgroundColor3 = Color3.fromRGB(0, 0, 0),
    BackgroundTransparency = 0.5,
})
Corner(frameinfo, {CornerRadius = UDim.new(0.15, 0)})

local iconplayers = Create("ImageLabel", frameinfogui, {
    Size = UDim2.new(0.06, 0, 0.124, 0),
    Position = UDim2.new(0.05, 0, 0.06, 0),
    AnchorPoint = Vector2.new(0.05, 0.06),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.5,
    Image = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. game.Players.LocalPlayer.UserId .. "&width=420&height=420&format=png"
})
Corner(iconplayers, {CornerRadius = UDim.new(1, 0)})

local Wellcome = Create("TextLabel", frameinfogui, {
    Size = UDim2.new(0.25, 0, 0.09, 0),
    Text = "Welcome "..game.Players.LocalPlayer.Name,
    Position = UDim2.new(0.14, 0, 0.077, 0),
    AnchorPoint = Vector2.new(0.11, 0.085),
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 1,
    TextScaled = true
})
TextSetColor(Wellcome)

local gameinfoframe = Create("Frame", frameinfogui, {
    Size = UDim2.new(0.27, 0, 0.3, 0),
    Position = UDim2.new(0.032, 0, 0.74, 0),
    AnchorPoint = Vector2.new(0.032, 0.51),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.5
})
Corner(gameinfoframe, {CornerRadius = UDim.new(0.15, 0)})

local iconGame = Create("ImageLabel", frameinfogui, {
    Size = UDim2.new(0.06, 0, 0.124, 0),
    Position = UDim2.new(0.04, 0, 0.47, 0),
    AnchorPoint = Vector2.new(0.04, 0.38),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 1,
    Image = "https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid="..result.IconImageAssetId.."&fmt=png&wd=500&ht=500"
})

local GameName = Create("TextLabel", frameinfogui, {
    Size = UDim2.new(0.28, 0, 0.09, 0),
    Text = "Game Name: " .. gameName,
    Position = UDim2.new(0.14, 0, 0.48, 0),
    AnchorPoint = Vector2.new(0.11, 0.405),
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 1,
    TextScaled = true,
})
TextSetColor(GameName)

local frame100 = Create("Frame", frameinfogui, {
    Size = UDim2.new(0.41, 0, 0.48, 0),
    Position = UDim2.new(0.6178, 0, 0.22, 0),
    AnchorPoint = Vector2.new(0.4178, 0.14),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.8
})

local FriendList = Create("TextLabel", frame100, {
     Size = UDim2.new(1, 0, 0.08, 0),
     Position = UDim2.new(0, 0, 0, 0),
     Text = "Friend List",
     BackgroundTransparency = 1,
     TextColor3 = Configs_HUB.Cor_Text,
     Font = Configs_HUB.Text_Font,
     TextScaled = true
})TextSetColor(FriendList)Corner(FriendList)

local friendsFrame = Create("ScrollingFrame", frame100, {
    Size = UDim2.new(1, 0, 0.87, 0),
    Position = UDim2.new(0, 0, 0.08, 0),
    CanvasSize = UDim2.new(0, 0, 0, 0),
    ScrollingDirection = Enum.ScrollingDirection.Y,
    AutomaticCanvasSize = Enum.AutomaticSize.Y,
    BackgroundTransparency = 0.8,
    ScrollBarThickness = 0
  })Create("UIListLayout", friendsFrame, {
    Padding = UDim.new(0, 5),
    SortOrder = Enum.SortOrder.LayoutOrder,
  })Create("UIPadding", friendsFrame, {
      PaddingLeft = UDim.new(0.028, 0),
      PaddingTop = UDim.new(0.003, 0),
      PaddingBottom = UDim.new(0.003, 0)
  })

local iconfriend = Create("ImageLabel", frameinfogui, {
    Size = UDim2.new(0.06, 0, 0.124, 0),
    Position = UDim2.new(0.48, 0, 0.006, 0),
    AnchorPoint = Vector2.new(0.43, 0.006),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.4,
    Image = "rbxthumb://type=Asset&id=98919122646377&w=420&h=420",
})
Corner(iconfriend, {CornerRadius = UDim.new(1, 0)})

local friendnumber = Create("TextLabel", frameinfogui, {
    Size = UDim2.new(0.28, 0, 0.09, 0),
    Text = "Friend: 0/1000",
    Position = UDim2.new(0.67, 0, 0.03, 0),
    AnchorPoint = Vector2.new(0.49, 0.029),
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 1,
    TextScaled = true
})
TextSetColor(friendnumber)

functions.checkFriends = function()
    if friendsCooldown <= 0 then
        friendsCooldown = 5
        local playersFriends = {}
        local success, page = pcall(players.GetFriendsAsync, players, localPlayer.UserId)

        if success then
            repeat
                local info = page:GetCurrentPage()
                for _, friendInfo in pairs(info) do
                    table.insert(playersFriends, friendInfo)
                end
                local pageSuccess, _ = pcall(function() page:AdvanceToNextPageAsync() end)
                if not pageSuccess or page.IsFinished then break end
            until page.IsFinished
        end
        local currentFriendIds = {}
        for _, friend in ipairs(playersFriends) do
            currentFriendIds[friend.Id] = friend
        end
        for userId, data in pairs(friendFrames) do
            if not currentFriendIds[userId] then
                if data.UI and data.UI.Parent then
                    data.UI:Destroy()
                end
                friendFrames[userId] = nil
            end
        end
        for userId, friend in pairs(currentFriendIds) do
            if not friendFrames[userId] then
                local frame = Create("Frame", friendsFrame, {
                    Size = UDim2.new(0.95, 0, 0.18, 0),
                    BackgroundTransparency = 1,
                })
                Corner(frame)
                Stroke(frame)

                Create("ImageLabel", frame, {
                    Size = UDim2.new(0.078, 0, 0.95, 0),
                    Position = UDim2.new(0.005, 0, 0.015, 0),
                    BackgroundTransparency = 1,
                    Image = "http://www.roblox.com/Thumbs/Avatar.ashx?x=500&y=500&Format=Png&userId=" .. userId
                })

                Create("TextLabel", frame, {
                    Size = UDim2.new(0.81, 0, 0.5, 0),
                    Position = UDim2.new(0.089, 0, 0),
                    Text = friend.DisplayName,
                    BackgroundTransparency = 1,
                    TextColor3 = Configs_HUB.Cor_Text,
                    Font = Configs_HUB.Text_Font,
                    TextScaled = true
                })

                Create("TextLabel", frame, {
                    Size = UDim2.new(0.81, 0, 0.5, 0),
                    Position = UDim2.new(0.089, 0, 0.5, 0),
                    Text = "@" .. friend.Username,
                    BackgroundTransparency = 1,
                    TextColor3 = Color3.fromRGB(114, 117, 130),
                    Font = Configs_HUB.Text_Font,
                    TextScaled = true
                })

                friendFrames[userId] = { UI = frame }
            end
        end

        local friendsInTotal = #playersFriends
        friendnumber.Text = "Friends: " .. friendsInTotal .. "/1000"
        return friendsInTotal
    else
        friendsCooldown -= 1
    end
end

functions.checkFriends()

local TimePlay = Create("TextLabel", frameinfogui, {
    Size = UDim2.new(0.205, 0, 0.07, 0),
    Text = "TimePlay",
    Position = UDim2.new(0.5294, 0, 0.681, 0),
    AnchorPoint = Vector2.new(0.41, 0.623),
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.5,
    TextScaled = true
})
TextSetColor(TimePlay)
Corner(TimePlay, {CornerRadius = UDim.new(0.15, 0)})

local AccountAge = Create("TextLabel", frameinfogui, {
    Size = UDim2.new(0.205, 0, 0.07, 0),
    Text = "AccountAge",
    Position = UDim2.new(0.7781, 0, 0.681, 0),
    AnchorPoint = Vector2.new(0.62, 0.623),
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.5,
    TextScaled = true
})
TextSetColor(AccountAge)
Corner(AccountAge, {CornerRadius = UDim.new(0.15, 0)})

local Join = Create("TextButton", frameinfogui, {
    Size = UDim2.new(0.101, 0, 0.07, 0),
    Text = "Join Game Script\nYou can press Copy",
    Position = UDim2.new(0.4868, 0, 0.762, 0),
    AnchorPoint = Vector2.new(0.41, 0.699),
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.5,
    TextScaled = true
})
TextSetColor(Join)
Corner(Join, {CornerRadius = UDim.new(0.15, 0)})

local Position = Create("TextButton", frameinfogui, {
    Size = UDim2.new(0.101, 0, 0.07, 0),
    Text = "Position\nYou can press Copy",
    Position = UDim2.new(0.6026, 0, 0.762, 0),
    AnchorPoint = Vector2.new(0.528, 0.699),
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    BackgroundTransparency = 0.5,
    TextScaled = true
})
TextSetColor(Position)
Corner(Position, {CornerRadius = UDim.new(0.15, 0)})

Position.MouseButton1Click:Connect(function()
local player = game.Players.LocalPlayer
local position = player.Character.HumanoidRootPart.Position

local positionString = string.format("Vector3.new(%f, %f, %f)", position.X, position.Y, position.Z)
local teleportCode = [[
--1hooaczx1: You can take it, paste it into your Executor and press execute. And it will teleport you to where you originally pressed Copy
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(]] .. positionString .. [[)
]]
setclipboard(teleportCode)
end) 
Join.MouseButton1Click:Connect(function()
local teleportCode = [[
-- 1hooaczx1: This script will take you to the game"]]..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name..[["
--If it doesn't work then the script isn't working
game:GetService("TeleportService"):Teleport(]] .. game.PlaceId .. [[, player)
]]
setclipboard(teleportCode)
end) 

local frame23 = Create("Frame", frame100, {Size = UDim2.new(1, 0, 0.11, 0), Position = UDim2.new(0, 0, 0.001, 0), BackgroundColor3 = Configs_HUB.Cor_Hub, BackgroundTransparency = 1})

local frame9 = Create("TextLabel", frameinfo, {Size = UDim2.new(1, 0, 1, 0), Text = "", BackgroundColor3 = Configs_HUB.Cor_Hub, BackgroundTransparency = 1})

local frame79 = Create("TextLabel", gameinfoframe, {
    Size = UDim2.new(1, 0, 1, 0),
    BackgroundColor3 = Color3.fromRGB(20, 20, 20),
    BackgroundTransparency = 1,
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = Enum.TextXAlignment.Left,
    Font = Configs_HUB.Text_Font,
    TextScaled = true,
    Text = "Fetching data..."
})
Corner(frame79, {CornerRadius = UDim.new(0.15, 0)})
TextSetColor(frame79)

local listLayout1 = Create("UIListLayout", frame79, {FillDirection = Enum.FillDirection.Vertical, HorizontalAlignment = Enum.HorizontalAlignment.Left, VerticalAlignment = Enum.VerticalAlignment.Top, Padding = UDim.new(0, 5)})

local listLayout2 = Create("UIListLayout", frame9, {FillDirection = Enum.FillDirection.Vertical, HorizontalAlignment = Enum.HorizontalAlignment.Left, VerticalAlignment = Enum.VerticalAlignment.Top, Padding = UDim.new(0, 6)})

local players = game:GetService("Players")
local LocalPlayer = players.LocalPlayer
local accountAgeInDays = LocalPlayer.AccountAge
local additionalPlayTimeInSeconds = 0

functions.calculateTotalPlayTime = function()
    local totalSeconds = accountAgeInDays * 86400

    totalSeconds = totalSeconds + additionalPlayTimeInSeconds

    local years = math.floor(totalSeconds / 31536000)
    totalSeconds = totalSeconds % 31536000
    local months = math.floor(totalSeconds / 2592000)
    totalSeconds = totalSeconds % 2592000
    local days = math.floor(totalSeconds / 86400)

    return string.format("%d years, %d months, %d days", years, months, days)
end

functions.accountAgeMessage = function(accountAgeInDays)
    if accountAgeInDays == 0 then
        return "You just created an account"
    else
        return string.format("Your account has been active for %d days", accountAgeInDays)
    end
end

functions.updatePlayTimeDisplay = function()
    local totalPlayTime = functions.calculateTotalPlayTime()
    local ageMessage = functions.accountAgeMessage(accountAgeInDays)
    AccountAge.Text = "Total Playtime since account creation: "..totalPlayTime.."\n"..ageMessage
end

functions.startUpdating = function()
    additionalPlayTimeInSeconds = additionalPlayTimeInSeconds + 1
    functions.updatePlayTimeDisplay()
end

functions.startUpdating()

functions.formatElapsedTime = function(elapsedTime)
    local secondsInMinute = 60
    local secondsInHour = 3600
    local secondsInDay = 86400
    local secondsInMonth = 2592000
    local secondsInYear = 31536000

    if elapsedTime < secondsInMinute then
        return string.format("%02d", elapsedTime)
    elseif elapsedTime < secondsInHour then
        return string.format("%d:%02d", math.floor(elapsedTime / secondsInMinute), elapsedTime % secondsInMinute)
    elseif elapsedTime < secondsInDay then
        return string.format("%d:%02d:%02d", math.floor(elapsedTime / secondsInHour), math.floor((elapsedTime % secondsInHour) / secondsInMinute), elapsedTime % secondsInMinute)
    elseif elapsedTime < secondsInMonth then
        return string.format("%d:%02d:%02d:%02d", math.floor(elapsedTime / secondsInDay), math.floor((elapsedTime % secondsInDay) / secondsInHour), math.floor((elapsedTime % secondsInHour) / secondsInMinute), elapsedTime % secondsInMinute)
    elseif elapsedTime < secondsInYear then
        return string.format("%d:%02d:%02d:%02d:%02d", math.floor(elapsedTime / secondsInMonth), math.floor((elapsedTime % secondsInMonth) / secondsInDay), math.floor((elapsedTime % secondsInDay) / secondsInHour), math.floor((elapsedTime % secondsInHour) / secondsInMinute), elapsedTime % secondsInMinute)
    else
        return string.format("%d:%02d:%02d:%02d:%02d:%02d", math.floor(elapsedTime / secondsInYear), math.floor((elapsedTime % secondsInYear) / secondsInMonth), math.floor((elapsedTime % secondsInMonth) / secondsInDay), math.floor((elapsedTime % secondsInDay) / secondsInHour), math.floor((elapsedTime % secondsInHour) / secondsInMinute), elapsedTime % secondsInMinute)
    end
end

local player = game.Players.LocalPlayer
local playtime = 0

functions.updatePlaytime = function()
    playtime = playtime + 1
    local formattedTime = functions.formatElapsedTime(playtime)
    TimePlay.Text = "Time Play: "..formattedTime.."\n".."This will show you how much time you have been playing in the game"
end

functions.getAccountCreationDate = function(ageInDays)
    local creationDate = os.date("*t", os.time() - (ageInDays * 86400))
    return string.format("%d-%02d-%02d", creationDate.year, creationDate.month, creationDate.day)
end

functions.updatePlaytime()

local lastUpdateTime = 0
local updateInterval = 6

functions.updatePlaceInfo = function()
    local currentTime = tick()
    if currentTime - lastUpdateTime < updateInterval then
        return
    end

    local universeUrl = "https://games.roblox.com/v1/games?universeIds=" .. tostring(game.GameId)
    local votesUrl = string.format("https://games.roproxy.com/v1/games/%d/votes", game.GameId)

    local success1, universeResponse = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(universeUrl))
    end)

    local success2, votesResponse = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(votesUrl))
    end)

    if success1 and success2 and universeResponse and universeResponse.data and #universeResponse.data > 0 and votesResponse then
        local data = universeResponse.data[1]

        local y1, m1, d1, h1, mi1, s1 = data.created:match("(%d+)%-(%d+)%-(%d+)T(%d+):(%d+):(%d+)")
        local created = os.time({year = y1, month = m1, day = d1, hour = h1, min = mi1, sec = s1})

        local y2, m2, d2, h2, mi2, s2 = data.updated:match("(%d+)%-(%d+)%-(%d+)T(%d+):(%d+):(%d+)")
        local updated = os.time({year = y2, month = m2, day = d2, hour = h2, min = mi2, sec = s2})

        local placeInfo = {
            PlaceId = game.PlaceId,
            Name = data.name or "Unknown",
            Created = os.date("%Y-%m-%d %H:%M:%S", created),
            Updated = os.date("%Y-%m-%d %H:%M:%S", updated),
            Playing = data.playing or 0,
            Visits = data.visits or 0,
            Favorited = data.favoritedCount or 0,
            RootPlaceId = data.rootPlaceId or "N/A",
            Likes = votesResponse.upVotes or 0
        }

        GameName.Text = "Game Name: " .. placeInfo.Name
        frame79.Text = string.format(
            "Place ID: %s\nRootPlaceID: %s\nJob ID: %s\nGame ID: %d\nCreated: %s\nUpdated: %s\nActive: %s\nFavorited: %d\nVisits: %s\nLikes: %d",
            placeInfo.PlaceId,
            tostring(placeInfo.RootPlaceId),
            game.JobId,
            game.GameId,
            placeInfo.Created,
            placeInfo.Updated,
            placeInfo.Playing,
            placeInfo.Favorited,
            placeInfo.Visits,
            placeInfo.Likes
        )
    else
        GameName.Text = "Game Name: Failed to load"
        local errorMsg = ""
        if not success1 then
            errorMsg = "Error fetching universe info:\n" .. tostring(universeResponse)
        elseif not success2 then
            errorMsg = "Error fetching votes:\n" .. tostring(votesResponse)
        elseif not (universeResponse and universeResponse.data and #universeResponse.data > 0) then
            errorMsg = "Invalid universe data structure"
        else
            errorMsg = "Unknown error occurred"
        end
        frame79.Text = "Failed to fetch place info:\n" .. errorMsg
    end
    lastUpdateTime = currentTime
end
functions.updatePlaceInfo()

local DisplayName = Create("TextLabel", frame9, {
    Size = UDim2.new(1, 0, 0.3, 0),
    Text = "Display Name: " .. player.DisplayName,
    Position = UDim2.new(0, 0, 0, 0),
    TextScaled = true,
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Color3.fromRGB(0, 0, 0),
    BackgroundTransparency = 1,
})
TextSetColor(DisplayName)

local UserIdg = Create("TextLabel", frame9, {
    Size = UDim2.new(1, 0, 0.3, 0),
    Text = "UserId: " .. player.UserId,
    Position = UDim2.new(0, 0, 0.3, 0),
    TextScaled = true,
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Color3.fromRGB(0, 0, 0),
    BackgroundTransparency = 1,
})
TextSetColor(UserIdg)

local AccountCreated = Create("TextLabel", frame9, {
    Size = UDim2.new(1, 0, 0.3, 0),
    Text = "Account Created: " .. functions.getAccountCreationDate(ageInDays),
    Position = UDim2.new(0, 0, 0.6, 0),
    TextScaled = true,
    TextColor3 = Configs_HUB.Cor_Text,
    TextXAlignment = "Left",
    Font = Configs_HUB.Text_Font,
    BackgroundColor3 = Color3.fromRGB(0, 0, 0),
    BackgroundTransparency = 1,
})
TextSetColor(AccountCreated)

functions.updateTime = function()
    local currentTime = os.date("*t")
    local hour = currentTime.hour
    local amPm = "AM"

    if hour >= 12 then
        amPm = "PM"
        if hour > 12 then
            hour = hour - 12
        end
    elseif hour == 0 then
        hour = 12
    end

    local formattedTime = string.format("%02d:%02d:%02d %s", hour, currentTime.min, currentTime.sec, amPm)
    TimeLabelgui.Text = formattedTime .. "\n" .. os.date("%b:%d:%Y")
end

functions.updateTime()

local infoToggleButton = Create("ImageButton", frame, {
    Size = UDim2.new(0.06, 0, 0.6, 0),
    Position = UDim2.new(0.22 + 0.1, 0, 0.22, 0),
    BackgroundColor3 = Color3.fromRGB(4, 175, 236),
    ZIndex = 10,
    BackgroundTransparency = 1,
    Image = "rbxthumb://type=Asset&id=101525904089827&w=150&h=150",
})

local minimize3 = false
infoToggleButton.MouseButton1Click:Connect(function()
    minimize3 = not minimize3

    if minimize3 then
        click1:Play()
        frameinfogui.Visible = true
        CreateTween(frameinfogui, "Size", UDim2.new(1, 0, 1, 0), 0.3, true)
    else
        click2:Play()
        CreateTween(frameinfogui, "Size", UDim2.new(0, 0, 0, 0), 0.3, true)
        frameinfogui.Visible = false
    end
end)

local stopupdateall1
stopupdateall1 = RunService.Heartbeat:Connect(function()
   wait()
      DisplayName.Text = "Display Name: " .. player.DisplayName
      UserIdg.Text = "UserId: " .. player.UserId
      AccountCreated.Text = "Account Created: " .. functions.getAccountCreationDate(ageInDays)
      functions.UpdatePlayerList()
      functions.startUpdating()
      functions.updateTime()
      iconplayers.Image = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. game.Players.LocalPlayer.UserId .. "&width=420&height=420&format=png"
      iconGame.Image = "https://assetgame.roblox.com/Game/Tools/ThumbnailAsset.ashx?aid="..result.IconImageAssetId.."&fmt=png&wd=500&ht=500"
    wait()
end)

local stopupdateall
local lastUpdate = tick()
stopupdateall = RunService.Heartbeat:Connect(function()
 local currentTime = tick()
 if currentTime - lastUpdate >= 1 then
     functions.updatePlaytime()
     functions.checkFriends()
     lastUpdate = currentTime
   end
end)

local stopupdateall5
local lastUpdate = tick()
stopupdateall5 = RunService.Heartbeat:Connect(function()
 local currentTime = tick()
 if currentTime - lastUpdate >= 10 then
     functions.UpdatePlaces()
     functions.updatePlaceInfo()
     lastUpdate = currentTime
   end
end)

local Button = Create("ImageButton", frame, {
    Size = UDim2.new(0.06, 0, 0.6, 0),
    ZIndex = 10,
    BackgroundColor3 = Color3.fromRGB(0, 0, 0),
    BackgroundTransparency = 1,
    Position = UDim2.new(0.22, 0, 0.22, 0),
    Image = image
})

if corner then Corner(Button) end 
if stroke then Stroke(Button, {Color = strokecolor}) end

local minimize = true
Button.MouseButton1Click:Connect(function()
    if minimize then
     if IsMinimizedu then
         minimize = false
         CreateTween(Menu, "Size", UDim2.new(0.576, 0, 0, 0), 0.15, true)
         Menu.Visible = false
         Menu.Position = UDim2.new(0.77, 0, 0.227, 0)
      else
        minimize = false
        CreateTween(Menu, "Size", UDim2.new(0.576, 0, 0, 0), 0.3, true)
        Menu.Visible = false
        ScrollBar.Visible = false
        Containers.Visible = false
        line_Containers.Visible = false
        Menu.Position = UDim2.new(0.77, 0, 0.227, 0)
      end
    else
     if IsMinimizedu then
         minimize = true
         Menu.Visible = true
         CreateTween(Menu, "Size", UDim2.new(0.576, 0, 0.051, 0), 0.15, true)
      else
        minimize = true
        ScrollBar.Visible = true
        Containers.Visible = true
        line_Containers.Visible = true
        Menu.Visible = true
        click1:Play()
        CreateTween(Menu, "Size", UDim2.new(0.576, 0, 0.545, 0), 0.3, false)
      end
    end
end)

local frameSetting = Create("Frame", ScreenGui, {
    Size = UDim2.new(0.35, 0, 0.8, 0),
    Position = UDim2.new(0.5, 0, 0.4, 0),
    AnchorPoint = Vector2.new(0.52, 0.4),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Visible = false
})

local Text7 = Create("TextLabel", frameSetting, {
    Size = UDim2.new(1, 0, 0.15, 0),
    TextColor3 = Color3.fromRGB(255, 255, 255),
    TextScaled = true,
    Text = "Setting Menu"
})
TextSetColor(Text7)

local scrollingSettingFrame = Create("ScrollingFrame", frameSetting, {
    Size = UDim2.new(1, 0, 0.85, 0),
    Position = UDim2.new(0, 0, 0.15, 0),
    CanvasSize = UDim2.new(0, 0, 0, 0),
    ScrollingDirection = Enum.ScrollingDirection.Y,
    AutomaticCanvasSize = Enum.AutomaticSize.Y,
    BackgroundTransparency = 1,
    ScrollBarThickness = 0
})Create("UIListLayout", scrollingSettingFrame, {
    Padding = UDim.new(0, 10),
    SortOrder = Enum.SortOrder.LayoutOrder,
  })Create("UIPadding", scrollingSettingFrame, {
      PaddingLeft = UDim.new(0.028, 0),
      PaddingTop = UDim.new(0.003, 0),
      PaddingBottom = UDim.new(0.003, 0)
  })

local isClickEffectEnabled = false
local ripples = {}
local inputBeganConnection

functions.createSettingSection(scrollingSettingFrame, "Click Effect", 
[[This creates an effect where, when you press the screen, it will create a 5-point star effect that expands and disappears.]], 
function(isClickEffectEnabled)
    if isClickEffectEnabled then
        inputBeganConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    local screenSize = workspace.CurrentCamera.ViewportSize
                    local star = Create("ImageLabel", ScreenGui, {
                        Size = UDim2.new(0, 0, 0, 0),
                        Position = UDim2.new(input.Position.X / screenSize.X, 0, input.Position.Y / screenSize.Y, 0),
                        AnchorPoint = Vector2.new(0.5, 0.5),
                        Image = "rbxassetid://111774818209101",
                        BackgroundTransparency = 1,
                        ImageTransparency = 0.5,
                        ZIndex = 9e9
                    })
                    
                    local tweenInfo = TweenInfo.new(1.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                    local sizeGoal = {Size = UDim2.new(0.06, 0, 0.124, 0), ImageTransparency = 1}
                    local tween = TweenService:Create(star, tweenInfo, sizeGoal)

                    tween:Play()
                    table.insert(ripples, star)

                    local clickSound = Create("Sound", ScreenGui, {
                        SoundId = "rbxassetid://15675059323",
                        Volume = 0.07
                    })
                    clickSound:Play()
                    clickSound.Ended:Connect(function()
                        clickSound:Destroy()
                    end)

                    tween.Completed:Connect(function()
                        star:Destroy()
                        table.remove(ripples, #ripples)
                    end)
                end
            end
        end)
    else
        if inputBeganConnection then
            inputBeganConnection:Disconnect()
        end

        for _, star in ipairs(ripples) do
            star:Destroy()
        end
        ripples = {}
    end
end,
isClickEffectEnabled)

local copyEnabled = false

local originalToClipboard = getgenv().toclipboard
local originalSetClipboard = getgenv().setclipboard
local originalOriginalSetClipboard = getgenv().originalSetClipboard

functions.createSettingSection(
    scrollingSettingFrame, 
    "Anti Copy", 
    [[This script will prevent you from copying using "toclipboard" and "setclipboard" and "originalSetClipboard" to copy.
    It will notify you on the screen. If you feel annoyed, you can turn it off]], 
    function()
        copyEnabled = not copyEnabled
        
        if copyEnabled then
            getgenv().toclipboard = function(data)
                notify({
                    Title = "Attempted to copy",
                    Text = tostring(data),
                    buttonText = "ok",
                    imageID = "",
                    guiSize = Vector2.new(400, 70),
                })
            end
            getgenv().setclipboard = function(data)
                notify({
                    Title = "Attempted to copy",
                    Text = tostring(data),
                    buttonText = "ok",
                    imageID = "",
                    guiSize = Vector2.new(400, 70),
                })
            end
            getgenv().originalSetClipboard = function(data)
                notify({
                    Title = "Attempted to copy",
                    Text = tostring(data),
                    buttonText = "ok",
                    imageID = "",
                    guiSize = Vector2.new(400, 70),
                })
            end
        else
            getgenv().toclipboard = originalToClipboard
            getgenv().setclipboard = originalSetClipboard
            getgenv().originalSetClipboard = originalOriginalSetClipboard
        end
    end, 
    copyEnabled)

local hasSaved = false
local savedLightingProperties = nil
local savedLightingChildren = nil
local rainParts = {}
local rainSound = nil
local Lighting = game:GetService("Lighting")
rainSound = Create("Sound", ScreenGui, {
   SoundId = "rbxassetid://1516791621",
   Volume = 0.5,
   Looped = true
})

function functions.SaveEnvironment()
    if not hasSaved then
        hasSaved = true
        savedLightingProperties = {
            ClockTime = Lighting.ClockTime,
            Ambient = Lighting.Ambient,
            Brightness = Lighting.Brightness,
            ColorShift_Bottom = Lighting.ColorShift_Bottom,
            ColorShift_Top = Lighting.ColorShift_Top,
            EnvironmentDiffuseScale = Lighting.EnvironmentDiffuseScale,
            EnvironmentSpecularScale = Lighting.EnvironmentSpecularScale,
            GlobalShadows = Lighting.GlobalShadows,
            OutdoorAmbient = Lighting.OutdoorAmbient,
            ShadowSoftness = Lighting.ShadowSoftness,
            GeographicLatitude = Lighting.GeographicLatitude,
            ExposureCompensation = Lighting.ExposureCompensation,
        }

        savedLightingChildren = {}
        for _, child in pairs(Lighting:GetChildren()) do
            table.insert(savedLightingChildren, child:Clone())
        end
    end
end

function functions.RestoreEnvironment()
   for _, v in pairs(Lighting:GetChildren()) do
        v:Destroy()
    end

    if savedLightingChildren then
        for _, child in pairs(savedLightingChildren) do
            child.Parent = Lighting
        end
    end

    if savedLightingProperties then
        Lighting.ClockTime = savedLightingProperties.ClockTime
        Lighting.Ambient = savedLightingProperties.Ambient
        Lighting.Brightness = savedLightingProperties.Brightness
        Lighting.ColorShift_Bottom = savedLightingProperties.ColorShift_Bottom
        Lighting.ColorShift_Top = savedLightingProperties.ColorShift_Top
        Lighting.EnvironmentDiffuseScale = savedLightingProperties.EnvironmentDiffuseScale
        Lighting.EnvironmentSpecularScale = savedLightingProperties.EnvironmentSpecularScale
        Lighting.GlobalShadows = savedLightingProperties.GlobalShadows
        Lighting.OutdoorAmbient = savedLightingProperties.OutdoorAmbient
        Lighting.ShadowSoftness = savedLightingProperties.ShadowSoftness
        Lighting.GeographicLatitude = savedLightingProperties.GeographicLatitude
        Lighting.ExposureCompensation = savedLightingProperties.ExposureCompensation
    end

    if rainParts then
        for _, part in pairs(rainParts) do
            if part and part.Parent then
                part:Destroy()
            end
        end
        rainParts = {}
    end

    hasSaved = false
end

functions.createSettingSection(scrollingSettingFrame, "Rain🌧", 
    [[This will make the clouds in the sky look like it's raining and there's the sound of rain, but now there's no rain. There's just the sound and changing the sky. For games that have already been entered and you try using this script and the sky doesn't change, it's still the same sky as it was in the game. That means that the game is protected]],
    function(isLightingEnabled)
        if isLightingEnabled then
            functions.SaveEnvironment()
            Lighting.ClockTime = 12
            for _, v in pairs(Lighting:GetChildren()) do
                v:Destroy()
            end
            local Bloom = Create("BloomEffect", Lighting, {Intensity = 0.1, Size = 20, Threshold = 0.5})
            local Blur = Create("BlurEffect", Lighting, {Size = 5})
            local ColorCor = Create("ColorCorrectionEffect", Lighting, {
                Brightness = -0.2,
                Contrast = 0.1,
                Saturation = 0.0,
                TintColor = Color3.fromRGB(150, 150, 150)
            })
            local SunRays = Create("SunRaysEffect", Lighting, {Intensity = 0.0, Spread = 0.6})
            local Sky = Create("Sky", Lighting, {
                SkyboxBk = "rbxassetid://4498828382",
                SkyboxDn = "rbxassetid://4498828812",
                SkyboxFt = "rbxassetid://4498829917",
                SkyboxLf = "rbxassetid://4498830911",
                SkyboxRt = "rbxassetid://4498830417",
                SkyboxUp = "rbxassetid://4498831746",
                SunAngularSize = 30
            })
            local Atm = Create("Atmosphere", Lighting, {
                Density = 0.6,
                Offset = 0.1,
                Color = Color3.fromRGB(150, 150, 150),
                Decay = Color3.fromRGB(150, 150, 150),
                Glare = 0.5,
                Haze = 1
            })
            rainSound:Play()

            local minX, maxX = -2000, 2000
            local minZ, maxZ = -2000, 2000
            local height = 400
            local numRaindrops = 3000
            for i = 1, numRaindrops do
                local parentPart = Create("Part", workspace, {
                    Size = Vector3.new(7, 7, 7),
                    Position = Vector3.new(math.random(minX, maxX), height, math.random(minZ, maxZ)),
                    Transparency = 1,
                    Anchored = true
                })

                local particleEmitter = Create("ParticleEmitter", parentPart, {
                    Speed = NumberRange.new(10, 13),
                    Lifetime = NumberRange.new(2, 6),
                    Rate = 10000,
                    Size = NumberSequence.new(1),
                    Transparency = NumberSequence.new(0.4),
                    Color = ColorSequence.new(Color3.fromRGB(255, 255, 255)),
                    LightEmission = 10,
                    RotSpeed = NumberRange.new(50, 100),
                    VelocityInheritance = 0,
                    Acceleration = Vector3.new(0, -160, 0),
                    SpreadAngle = Vector2.new(300, 300)
                })

                table.insert(rainParts, parentPart)
            end
            Lighting.Ambient = Color3.fromRGB(200, 200, 200)
            Lighting.Brightness = 2.5
            Lighting.ColorShift_Bottom = Color3.fromRGB(150, 150, 150)
            Lighting.ColorShift_Top = Color3.fromRGB(150, 150, 150)
            Lighting.EnvironmentDiffuseScale = 0.1
            Lighting.EnvironmentSpecularScale = 0.1
            Lighting.GlobalShadows = true
            Lighting.OutdoorAmbient = Color3.fromRGB(10, 10, 10)
            Lighting.ShadowSoftness = 0.5
            Lighting.GeographicLatitude = 45
            Lighting.ExposureCompensation = 0.6
        else
            rainSound:Pause()
            functions.RestoreEnvironment()
        end
    end, 
    isLightingEnabled)

local togglehideName = false
local connectionhideName = {}

function functions.toggleHideName(state)
    togglehideName = state
    if state then
        player = game.Players.LocalPlayer
        if player.Character then
            for _, gui in ipairs(player.Character:GetDescendants()) do
                if gui:IsA("BillboardGui") or gui:IsA("SurfaceGui") then
                    gui.Enabled = not togglehideName
                end
            end
           descConn = player.Character.DescendantAdded:Connect(function(gui)
                if gui:IsA("BillboardGui") or gui:IsA("SurfaceGui") then
                    gui.Enabled = not togglehideName
                end
            end)
            table.insert(connectionhideName, descConn)
        end
        charAddedConn = player.CharacterAdded:Connect(function(character)
            for _, gui in ipairs(character:GetDescendants()) do
                if gui:IsA("BillboardGui") or gui:IsA("SurfaceGui") then
                    gui.Enabled = not togglehideName
                end
            end
            local descConn = character.DescendantAdded:Connect(function(gui)
                if gui:IsA("BillboardGui") or gui:IsA("SurfaceGui") then
                    gui.Enabled = not togglehideName
                end
            end)
            table.insert(connectionhideName, descConn)
        end)
        table.insert(connectionhideName, charAddedConn)
    else
        for _, conn in ipairs(connectionhideName) do
            conn:Disconnect()
        end
        connectionhideName = {}
        player = game.Players.LocalPlayer
        if player.Character then
            for _, gui in ipairs(player.Character:GetDescendants()) do
                if gui:IsA("BillboardGui") or gui:IsA("SurfaceGui") then
                    gui.Enabled = not togglehideName
                end
            end
        end
    end
end

functions.createSettingSection(
    scrollingSettingFrame,
    "Hide Name",
    [[This script will hide "BillboardGui" and "SurfaceGui" for games that use these 2 to create "NameTag"]],
    functions.toggleHideName,
    false)

local gameSettings = UserSettings():GetService("UserGameSettings")
local lastKnownVolume = gameSettings.MasterVolume
local changeConnection
functions.createSettingSection(scrollingSettingFrame, "Volume", 
[[Turn off your main game sound]], function()
    local currentVolume = gameSettings.MasterVolume
    gameSettings.MasterVolume = (currentVolume > 0) and 0 or 1
end)
functions.createSettingSection(scrollingSettingFrame, "Volume Notifications", 
[[Notification for changes in MasterVolume from other sources. If you feel annoyed, you can turn it off.]], function(state)
    if state then
        if not changeConnection then
            changeConnection = RunService.Heartbeat:Connect(function()
                local currentVolume = gameSettings.MasterVolume
                if currentVolume ~= lastKnownVolume then
                    game.StarterGui:SetCore("SendNotification", {
                        Title = "Volume Changed",
                        Text = "Volume has been changed to: " .. tostring(currentVolume),
                        Icon = "rbxthumb://type=Asset&id=92416463477961&w=150&h=150",
                        Duration = 3,
                    })
                    lastKnownVolume = currentVolume
                end
            end)
        end
    else
        if changeConnection then
            changeConnection:Disconnect()
            changeConnection = nil
        end
    end
end)

local SettingButton = Create("ImageButton", frame, {
    Size = UDim2.new(0.06, 0, 0.6, 0),
    ZIndex = 10,
    BackgroundColor3 = Color3.fromRGB(0, 0, 0),
    BackgroundTransparency = 1,
    Position = UDim2.new(0.92, 0, 0.22, 0),
    Image = "rbxthumb://type=Asset&id=130250170804726&w=150&h=150"
})

if corner then Corner(SettingButton) end 
if stroke then Stroke(SettingButton, {Color = strokecolor}) end

local minimize9 = false
SettingButton.MouseButton1Click:Connect(function()
    minimize9 = not minimize9

    if minimize9 then
        click1:Play()
        frameSetting.Visible = true
        CreateTween(frameSetting, "Size", UDim2.new(0.35, 0, 0.8, 0), 0.3, false)
    else
        click2:Play()
        CreateTween(frameSetting, "Size", UDim2.new(0.35, 0, 0, 0), 0.3, true)
        frameSetting.Visible = false
    end
end)

local States = {
    Off = "rbxasset://textures/ui/mouseLock_off@2x.png",
    On = "rbxasset://textures/ui/mouseLock_on@2x.png",
    Lock = "rbxasset://textures/MouseLockedCursor.png",
    Lock2 = "rbxasset://SystemCursors/Cross"
}
local ContextActionService = game:GetService("ContextActionService")
local MaxLength = 900000
local EnabledOffset = CFrame.new(1.7, 0, 0)
local DisabledOffset = CFrame.new(-1.7, 0, 0)
local ShiftLockmaingui
local ShiftLockButton = Create("ImageButton", frame, {
    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
    BackgroundTransparency = 1.000,
    Position = UDim2.new(0.22 + 0.4, 0, 0.22, 0),
    Size = UDim2.new(0.06, 0, 0.6, 0),
    ZIndex = 10,
    Image = States.Off
})

local ShiftlockCursor = Create("ImageLabel", ScreenGui, {
    Image = States.Lock,
    Size = UDim2.new(0.03, 0, 0.03, 0),
    Position = UDim2.new(0.5, 0, 0.5, 0),
    AnchorPoint = Vector2.new(0.5, 0.5),
    SizeConstraint = Enum.SizeConstraint.RelativeXX,
    BackgroundTransparency = 1,
    BackgroundColor3 = Color3.fromRGB(255, 0, 0),
    Visible = false
})

ShiftLockButton.MouseButton1Click:Connect(function()
    if not ShiftLockmaingui then
        ShiftLockmaingui = RunService.RenderStepped:Connect(function()
            local char = Player.Character or Player.CharacterAdded:Wait()
            if not char then return end
            local root = char:FindFirstChild("HumanoidRootPart")
            local hum = char:FindFirstChildOfClass("Humanoid")
            local cam = workspace.CurrentCamera
            if root and hum and cam then
                hum.AutoRotate = false
                ShiftLockButton.Image = States.On
                ShiftlockCursor.Visible = true
                local pos = root.Position
                local look = cam.CFrame.LookVector
                root.CFrame = CFrame.new(pos, Vector3.new(pos.X + look.X, pos.Y, pos.Z + look.Z))
                cam.CFrame *= EnabledOffset
                cam.Focus = CFrame.fromMatrix(cam.Focus.Position, cam.CFrame.RightVector, cam.CFrame.UpVector) * EnabledOffset
            end
        end)
    else
        local char = Player.Character
        if char then
            local hum = char:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.AutoRotate = true
            end
        end
        ShiftLockButton.Image = States.Off
        workspace.CurrentCamera.CFrame *= DisabledOffset
        ShiftlockCursor.Visible = false
        if ShiftLockmaingui then
            ShiftLockmaingui:Disconnect()
            ShiftLockmaingui = nil
        end
    end
end)


functions.ShiftLock = function(_, state)
    if state == Enum.UserInputState.Begin then
        ShiftLockButton:MouseButton1Click()
    end
end

local ShiftLockAction = ContextActionService:BindAction("Shift Lock", functions.ShiftLock, false, "On")
ContextActionService:SetPosition("Shift Lock", UDim2.new(0.8, 0, 0.8, 0))

ScreenGui.AncestryChanged:Connect(function()
    if not ScreenGui:IsDescendantOf(game) then
        if ShiftLockmaingui then
            local char = game.Players.LocalPlayer.Character
            if char then
            local hum = char:FindFirstChildOfClass("Humanoid")
             if hum then
                hum.AutoRotate = true
               end
            end
            ShiftLockButton.Image = States.Off
            workspace.CurrentCamera.CFrame *= DisabledOffset
            ShiftlockCursor.Visible = false
            ShiftLockmaingui:Disconnect()
            ShiftLockmaingui = nil
        end
        for _, data in pairs(friendFrames) do
            if data.UI and data.UI.Parent then
                data.UI:Destroy()
            end
        end
        table.clear(friendFrames)
       if View then
        local hum = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
        if hum then
           workspace.CurrentCamera.CameraSubject = hum
        end
        for _, data in pairs(playerFrames) do
            if data.UI and data.UI.Parent then
                data.UI:Destroy()
            end
        end
        table.clear(playerFrames)
      end
    end
    if not CoreGui:FindFirstChild(ScreenGui.Name) and ScreenGui:IsDescendantOf(game) then
        rainSound:Destroy()
        notifyfriend:Destroy()
        notifyfriendleave:Destroy()
        click1:Destroy()
        click2:Destroy()
        falsetoggle:Destroy()
        clicktoggle:Destroy()
        if stopupdateall1 then
            stopupdateall1:Disconnect()
            stopupdateall1 = nil
        end
        if stopupdateall then
            stopupdateall:Disconnect()
            stopupdateall = nil
        end
        if stopupdateall5 then
            stopupdateall5:Disconnect()
            stopupdateall5 = nil
        end
    end
end)
end

local firstVisible = true
local firstTabSet = false
local textsize = 15
local textcolor = Configs_HUB.Cor_Text

function MakeTab(Configs)
    local TabName = Configs.Name or "Tab"
    local TabImage = Configs.image
    for _, tab in pairs(ScrollBar:GetChildren()) do
        if tab:IsA("Frame") then
            local label = tab:FindFirstChild("TextLabel")
            if label and label.Text == TabName then
                tab:Destroy()
            end
        end
    end
    for _, container in pairs(Containers:GetChildren()) do
        if container:IsA("ScrollingFrame") and container.Name == TabName then
            container:Destroy()
        end
    end

    local Frame = Create("Frame", ScrollBar, {
        Size = UDim2.new(0.95, 0, 0.1, 0),
        BackgroundTransparency = 1
    })
    Corner(Frame)
    local FrameStroke = Stroke(Frame, {Thickness = 1})
    
    local TextButton = Create("TextButton", Frame, {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = ""
    })
    
    local TextLabel = Create("TextLabel", Frame, {
        Size = TabImage and UDim2.new(0.85, 0, 1, 0) or UDim2.new(1, 0, 1, 0),
        Position = TabImage and UDim2.new(0.15, 0, 0, 0) or UDim2.new(0, 0, 0, 0),
        TextWrapped = true,
        BackgroundTransparency = 1,
        Font = Configs_HUB.Text_Font,
        TextColor3 = textcolor,
        TextSize = textsize,
        Text = TabName
    })
    
    if TabImage then
        local image = Create("ImageLabel", Frame, {
            Size = UDim2.new(0.15, 0, 0.8, 0),
            Position = UDim2.new(0, 0, 0.05, 0),
            BackgroundColor3 = Configs_HUB.Cor_Options,
            BackgroundTransparency = 1,
            Image = TabImage
        })
        Corner(image)
    end
    
    local Container = Create("ScrollingFrame", Containers, {
        Size = UDim2.new(1, 0, 1, 0),
        ScrollingDirection = Enum.ScrollingDirection.Y,
        BackgroundTransparency = 1,
        ScrollBarThickness = 2,
        Visible = firstVisible,
        AutomaticCanvasSize = Enum.AutomaticSize.Y
    })
    Container.Name = TabName
    local listLayoutContainer = Create("UIListLayout", Container, {
        Padding = UDim.new(0, 5),
        SortOrder = Enum.SortOrder.LayoutOrder,
    })Create("UIPadding", Container, {
      PaddingLeft = UDim.new(0.028, 0),
      PaddingTop = UDim.new(0.003, 0),
      PaddingBottom = UDim.new(0.003, 0)
    })
    
    TextButton.MouseButton1Click:Connect(function()
        for _, container in pairs(Containers:GetChildren()) do
            if container:IsA("ScrollingFrame") then
                container.Visible = false
            end
        end
        for _, frame in pairs(ScrollBar:GetChildren()) do
            if frame:IsA("Frame") then
                local frameStroke = frame:FindFirstChildOfClass("UIStroke")
                local label = frame:FindFirstChild("TextLabel")
                if label == TextLabel then
                    CreateTween(frameStroke, "Color", Color3.fromRGB(255, 255, 255), 0.2, false)
                    CreateTween(label, "TextColor3", Configs_HUB.Cor_Text, 0.2, false)
                    if not label:GetAttribute("Clicked") then
                        local percentageIncrease = 0.1
                        local currentSize = label.TextSize
                        local newSize = currentSize * (1 + percentageIncrease)
                        label.TextSize = newSize
                        if label.TextBounds.X > label.AbsoluteSize.X then
                            label.TextSize = currentSize
                        end
                        local clickpaperSound = Create("Sound", ScreenGui, {
                            SoundId = "rbxassetid://9117207262",
                            Volume = 0.07
                        })
                        clickpaperSound:Play()
                        clickpaperSound.Ended:Connect(function()
                            clickpaperSound:Destroy()
                        end)
                        label:SetAttribute("Clicked", true)
                    end
                else
                    if frameStroke then
                        CreateTween(frameStroke, "Color", Configs_HUB.Cor_Stroke, 0.2, false)
                    end
                    if label then
                        local defaultSize = label.TextSize - 2
                        label.TextSize = math.clamp(defaultSize, 14, 20)
                        CreateTween(label, "TextColor3", Configs_HUB.Cor_DarkText, 0.3, false)
                        label:SetAttribute("Clicked", false)
                    end
                end
            end
        end
        Container.Visible = true
    end)
    
    if not firstTabSet then
        Container.Visible = true
        CreateTween(TextLabel, "TextColor3", Configs_HUB.Cor_Text, 0.2, false)
        CreateTween(TextLabel, "TextSize", 17, 0.2, false)
        CreateTween(FrameStroke, "Color", Color3.fromRGB(255, 255, 255), 0.2, false)
        firstTabSet = true
    end

    firstVisible = false
    textsize = 14
    textcolor = Configs_HUB.Cor_DarkText
    return Container
  end
  
  function AddButton(parent, Configs)
    local ButtonName = Configs.Name or "Button!!"
    local Callback = Configs.Callback or function() end
    
    local TextButton = Create("TextButton", parent, {
      Size = UDim2.new(0.95, 0, 0.1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Options,
      Name = "Frame",
      Text = "",
      AutoButtonColor = false
    })Corner(TextButton)Stroke(TextButton)
    
    local TextLabel = Create("TextLabel", TextButton, {
      TextColor3 = Configs_HUB.Cor_Text,
      TextWrapped = true,
      TextSize = 12,
      Text = ButtonName,
      Size = UDim2.new(0.94, 0, 1, 0),
      Position = UDim2.new(0.06, 0, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = Configs_HUB.Text_Font
    })
    
    local ImageLabel = Create("ImageLabel", TextButton, {
      Image = "rbxassetid://121035659622295",
      Size = UDim2.new(0.06, 0, 1, 0),
      BackgroundTransparency = 1,
      ImageColor3 = Configs_HUB.Cor_Stroke
    })
    
    TextButton.MouseButton1Click:Connect(function()
      Callback("Click!!")
      CreateTween(ImageLabel, "ImageColor3", Color3.fromRGB(30, 140, 200), 0.2, true)
      CreateTween(ImageLabel, "ImageColor3", Configs_HUB.Cor_Stroke, 0.2, false)
    end)
    
    TextSetColor(TextLabel)
  end
  
  function AddWarningMessage(parent, Configs, StrokeColor)
    local WarningMessage = Configs.WarningMessage
    local ImageId = Configs.ImageId

    local WarningFrame = Create("Frame", parent, {
        Size = UDim2.new(0.95, 0, 0.17, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
    })
    local FrameStroke = Create("UIStroke", WarningFrame, {
        Thickness = 2,
        Color = Configs_HUB.Cor_Options,
        ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    })
    local ImageLabel = Create("ImageLabel", WarningFrame, {
        Image = ImageId,
        Size = UDim2.new(0.125, 0, 1, 0),
        BackgroundTransparency = 1
    })
    local WarningLabel = Create("TextLabel", WarningFrame, {
        TextColor3 = Configs_HUB.Cor_Text,
        TextWrapped = true,
        TextSize = 12,
        Text = WarningMessage,
        Size = UDim2.new(0.875, 0, 1, 0),
        Position = UDim2.new(0.125, 0, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Left",
        Font = Configs_HUB.Text_Font
    })TextSetColor(WarningLabel)
  end

   function AddToggle(parent, Configs)
    local ToggleName = Configs.Name or "Toggle!!"
    local Default = Configs.Default or false
    local Callback = Configs.Callback or function() end
    
    local TextButton = Create("TextButton", parent, {
        Size = UDim2.new(0.95, 0, 0.12, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Name = "Frame",
        Text = "",
        AutoButtonColor = false
    })
    Corner(TextButton)
    Stroke(TextButton)
    
    local TextLabel = Create("TextLabel", TextButton, {
        TextColor3 = Configs_HUB.Cor_Text,
        TextWrapped = true,
        TextSize = 12,
        Text = ToggleName,
        Size = UDim2.new(0.93, 0, 1, 0),
        Position = UDim2.new(0.012 + 0.08, 0, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Left",
        Font = Configs_HUB.Text_Font
    })
    
    local Frame1 = Create("Frame", TextButton, {
        Size = UDim2.new(0.07, 0, 0.6, 0),
        Position = UDim2.new(0.012, 0, 0.22, 0),
        BackgroundTransparency = 1,
    })
    Corner(Frame1, {CornerRadius = UDim.new(1, 0)})
    local Stroke1 = Stroke(Frame1, {Thickness = 2})
    
    local Frame2 = Create("Frame", Frame1, {
        Size = UDim2.new(0.5, 0, 0.9, 0),
        Position = UDim2.new(0, 0, 0.47, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke
    })local Stroke2 = Stroke(Frame2, {Thickness = 1})
    Corner(Frame2, {CornerRadius = UDim.new(1, 0)})
    
    local OnOff = false
    if Default then
        OnOff = true
        CreateTween(Frame2, "Position", UDim2.new(0, 0, 0.47, 0), 0.2, false)
        CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
        CreateTween(Stroke1, "Color", Color3.fromRGB(30, 140, 200), 0.2, false)
        CreateTween(Stroke2, "Color", Color3.fromRGB(30, 140, 200), 0.2, false)
        CreateTween(TextLabel, "TextColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
    end
    Callback(OnOff)
    local function ResetToggle()
        OnOff = false
        CreateTween(Frame2, "Position", UDim2.new(0, 0, 0.47, 0), 0.2, false)
        CreateTween(Frame2, "BackgroundColor3", Configs_HUB.Cor_Stroke, 0.2, false)
        CreateTween(Stroke1, "Color", Configs_HUB.Cor_Stroke, 0.2, false)
        CreateTween(Stroke2, "Color", Configs_HUB.Cor_Stroke, 0.2, false)
        CreateTween(TextLabel, "TextColor3", Configs_HUB.Cor_Text, 0.2, false)
        Callback(false)
    end
    local cleartoggle
    cleartoggle = parent.AncestryChanged:Connect(function(_, parent)
        if not parent and OnOff then
            ResetToggle()
           if cleartoggle then
            cleartoggle:Disconnect()
            cleartoggle = nil
           end
        end
    end)
    
    local function CreateEffect(text, parent)
     local EffectLabel = Create("TextLabel", parent, {
         Text = text,
         TextColor3 = Configs_HUB.Cor_Text,
         Font = Configs_HUB.Text_Font,
         BackgroundTransparency = 1,
         Size = UDim2.new(0.3, 0, 0.3, 0),
         Position = UDim2.new(0.35, 0, -0.2, 0)
     })
     local UIScale = Create("UIScale", EffectLabel, {Scale = 0.5})
     CreateTween(UIScale, "Scale", 1, 0.2, false)
     CreateTween(EffectLabel, "Position", UDim2.new(0.35, 0, -0.2, 0), 0.3, false)
     CreateTween(EffectLabel, "TextTransparency", 1, 0.5, false)

      task.delay(0.3, function()
          EffectLabel:Destroy()
      end)
    end
    
    TextButton.MouseButton1Click:Connect(function()
      if not OnOff then
          clicktoggle:Play()
          OnOff = true
          CreateTween(Frame2, "Position", UDim2.new(0.5, 0, 0.47, 0), 0.2, false)
          CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
          CreateTween(Stroke1, "Color", Color3.fromRGB(30, 140, 200), 0.2, false)
          CreateTween(Stroke2, "Color", Color3.fromRGB(30, 140, 200), 0.2, false)
          CreateTween(TextLabel, "TextColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
          CreateEffect("ON", Frame1)
          Callback(true)
      else
          falsetoggle:Play()
          ResetToggle()
          CreateEffect("OFF", Frame1)
         end
      end)
     return {Frame2, Stroke1, OnOff, Callback}
   end

  function AddTextBox(parent, Configs)
    local TextBoxName = Configs.Name or "TextBox!!"
    local Default = Configs.Default or "TextBox"
    local placeholderText = Configs.PlaceholderText or "TextBox"
    local ClearText = Configs.ClearText or false
    local Callback = Configs.Callback or function() end
    
    local Frame = Create("Frame", parent, {
      Size = UDim2.new(0.95, 0, 0.1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Options,
      Name = "Frame"
    })Corner(Frame)Stroke(Frame)
    
    local TextLabel = Create("TextButton", Frame, {
      TextSize = 12,
      TextColor3 = Configs_HUB.Cor_Text,
      Text = TextBoxName,
      TextWrapped = true,
      Size = UDim2.new(0.66, 0, 1, 0),
      Position = UDim2.new(0.34, 0, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = Configs_HUB.Text_Font
    })
    TextSetColor(TextLabel)
    
    local TextBox = Create("TextBox", Frame, {
      Size = UDim2.new(0.3, 0, 0.82, 0),
      Position = UDim2.new(0.03, 0, 0.1, 0),
      TextColor3 = Configs_HUB.Cor_Text,
      Text = Default,
      ClearTextOnFocus = ClearText,
      PlaceholderText = placeholderText,
      TextScaled = true,
      Font = Configs_HUB.Text_Font,
      BackgroundTransparency = 1
    })
    
    local Line = Create("Frame", TextBox, {
      Size = UDim2.new(1, 0, 0.07, 0),
      Position = UDim2.new(0.5, 0, 1, 0),
      AnchorPoint = Vector2.new(0.5, 0.5),
      BackgroundColor3 = Configs_HUB.Cor_Stroke,
      BorderSizePixel = 0
    })
    
    TextBox.MouseEnter:Connect(function()
      CreateTween(Line, "Size", UDim2.new(0, 0, 0.07, 0), 0.3, true)
      CreateTween(Line, "Size", UDim2.new(1, 0, 0.07, 0), 0.3, true)
    end)
    
    TextBox.FocusLost:Connect(function()
      Callback(TextBox.Text)
    end)
  end

function AddColorPicker(parent, Configs)
    local name = Configs.Name or "Color Picker"
    local Default = Configs.Default or Color3.fromRGB(0, 0, 200)
    local Callback = Configs.Callback or function() end
    local ColorH, ColorS, ColorV = 1, 1, 1
    Callback(Default)
    
    local TextButton = Create("Frame", parent, {
      Size = UDim2.new(0.95, 0, 0.1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Options,
    })
    Stroke(TextButton)
    Corner(TextButton)
    
    local click = Create("TextButton", TextButton, {
      Size = UDim2.new(1, 0, 1, 0),
      BackgroundTransparency = 1,
      AutoButtonColor = false,
      Text = ""
    })
    
    local TextLabel = Create("TextLabel", TextButton, {
      Size = UDim2.new(0.89, 0, 1, 0),
      Position = UDim2.new(0.07, 0, 0, 0),
      TextSize = 12,
      TextWrapped = true,
      TextColor3 = Configs_HUB.Cor_Text,
      TextXAlignment = "Left",
      Text = name,
      Font = Configs_HUB.Text_Font,
      BackgroundTransparency = 1
    })
    
    local picker = Create("Frame", TextButton, {
      Size = UDim2.new(0.05, 0, 0.9, 0),
      Position = UDim2.new(0.01, 0, 0.05, 0),
      BackgroundColor3 = Default
    })
    Corner(picker)
    Stroke(picker)
    
    local UI_Grade = Create("ImageButton", TextButton, {
      Size = UDim2.new(0.7, 0, 0.7, 0),
      Position = UDim2.new(0.01, 0, 0.25, 0),
      Visible = false,
      Image = "rbxassetid://127163414525948"
    })
    Corner(UI_Grade)
    Stroke(UI_Grade)
    
    local SavePos = Create("Frame", UI_Grade, {Visible = false})
    
    local grade = Create("TextButton", TextButton, {
      Size = UDim2.new(0.1, 0, 0.7, 0),
      Position = UDim2.new(0.9, 0, 0.25, 0),
      AnchorPoint = Vector2.new(1, 0),
      Visible = false,
      Text = ""
    })
    Corner(grade)
    Stroke(grade)
    
    function GenerateFullColorSequence(steps)
        steps = steps or 8
        steps = math.clamp(steps, 2, 8)
        local keypoints = {}
        for i = 0, steps - 1 do
            local t = i / (steps - 1)
            table.insert(keypoints, ColorSequenceKeypoint.new(t, Color3.fromHSV(t, 1, 1)))
        end
        return ColorSequence.new(keypoints)
    end
    
    Create("UIGradient", grade, {
        Rotation = 90,
        Color = GenerateFullColorSequence(100)
    })
    
    local SavePos2 = Create("Frame", grade, {Visible = false, Size = UDim2.new(1, 0, 0, 0)})
    
    local A_1 = Create("Frame", TextButton, {
        Size = UDim2.new(1, 0, 0, 1),
        Position = UDim2.new(0, 0, 0, 0),
        Visible = false
    })
    Stroke(A_1)
    
    local Select1 = Create("Frame", grade, {
        Size = UDim2.new(0.3, 0, 0.13, 0),
        Position = UDim2.new(0, 0, 0, select(3, Color3.toHSV(Default))),
        BackgroundTransparency = 1,
        Active = true,
        Draggable = true
    })
    Corner(Select1, {CornerRadius = UDim.new(2, 0)})
    Stroke(Select1, {Color = Color3.fromRGB(255, 255, 255)})
    
    local Select2 = Create("Frame", UI_Grade, {
        Size = UDim2.new(0.054, 0, 0.13, 0),
        Position = UDim2.new(0, select(2, Color3.toHSV(Default)), 0, select(1, Color3.toHSV(Default))),
        BackgroundTransparency = 1,
        Active = true,
        Draggable = true
    })
    Corner(Select2, {CornerRadius = UDim.new(2, 0)})
    Stroke(Select2, {Color = Color3.fromRGB(255, 255, 255)})
    
    UI_Grade.MouseButton1Click:Connect(function()
        local mouse = UserInputService:GetMouseLocation()
        local savepos = SavePos.AbsolutePosition
        local parentWidth = TextButton.AbsoluteSize.X
        local parentHeight = TextButton.AbsoluteSize.Y
        local clampedX = math.clamp(mouse.X - savepos.X, 0, parentWidth - Select2.Size.X.Offset)
        local clampedY = math.clamp(mouse.Y - savepos.Y - 35, 0, parentHeight - Select2.Size.Y.Offset)
        CreateTween(Select2, "Position", UDim2.new(0, clampedX, 0, clampedY), 0.3, false)
    end)
    
    grade.MouseButton1Click:Connect(function()
        local mouseY = UserInputService:GetMouseLocation().Y - 35
        local saveposY = SavePos2.AbsolutePosition.Y
        local clampedY = math.clamp(mouseY - saveposY, 0, grade.AbsoluteSize.Y - Select1.AbsoluteSize.Y)
        local mouseX = UserInputService:GetMouseLocation().X
        local saveposX = SavePos.AbsolutePosition.X
        local clampedX = math.clamp(mouseX - saveposX, 0, grade.AbsoluteSize.X - Select1.AbsoluteSize.X)
        CreateTween(Select1, "Position", UDim2.new(0, clampedX, 0, clampedY), 0.3, false)
    end)
    
    local function callback() 
        Callback(Color3.fromHSV(ColorH, ColorS, ColorV))
    end
    local function updcolorpicker()
        ColorH = tonumber(Select1.Position.Y.Offset) / 80
        ColorS = tonumber(215 - Select2.Position.X.Offset) / 215
        ColorV = tonumber(75 - Select2.Position.Y.Offset) / 75
        UI_Grade.ImageColor3 = Color3.fromHSV(ColorH, 1, 1)
        picker.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
        callback()
    end
    
    updcolorpicker()
    
    Select1.Changed:Connect(function(prop)
        if prop == "Position" then
            local newX = math.clamp(Select1.Position.X.Offset, 0, grade.AbsoluteSize.X - Select1.Size.X.Offset)
            local newY = math.clamp(Select1.Position.Y.Offset, 0, grade.AbsoluteSize.Y - Select1.Size.Y.Offset)
            Select1.Position = UDim2.new(0, newX, 0, newY)
            updcolorpicker()
        end
    end)
    
    Select2.Changed:Connect(function(prop)
        if prop == "Position" then
            local newX = math.clamp(Select2.Position.X.Offset, 0, UI_Grade.AbsoluteSize.X - Select2.Size.X.Offset)
            local newY = math.clamp(Select2.Position.Y.Offset, 0, UI_Grade.AbsoluteSize.Y - Select2.Size.Y.Offset)
            Select2.Position = UDim2.new(0, newX, 0, newY)
            updcolorpicker()
        end
    end)
    
    local onoff = false
    TextButton.Changed:Connect(function(prop)
        if onoff then
            UI_Grade.Visible = true
            A_1.Visible = true
            grade.Visible = true
        else
            UI_Grade.Visible = false
            A_1.Visible = false
            grade.Visible = false
        end
    end)
    
    local isProcessing = false
    
    click.MouseButton1Click:Connect(function()
        if isProcessing then return end
        isProcessing = true
        onoff = not onoff
        if onoff == true then
            picker.Size = UDim2.new(0.05, 0, 0.12, 0)
            TextLabel.Size = UDim2.new(0.89, 0, 0.12, 0)
            picker.Position = UDim2.new(0.01, 0, 0.05, 0)
            TextLabel.Position = UDim2.new(0.07, 0, 0.05, 0)
            A_1.Position = UDim2.new(0, 0, 0.18, 0)
            local tween = TweenService:Create(TextButton, TweenInfo.new(0.2, Enum.EasingStyle.Linear), {Size = UDim2.new(0.95, 0, 0.75, 0)})
            tween:Play()
            tween.Completed:Wait()
        else
            local tween = TweenService:Create(TextButton, TweenInfo.new(0.2, Enum.EasingStyle.Linear), {Size = UDim2.new(0.95, 0, 0.1, 0)})
            tween:Play()
            tween.Completed:Wait()
            picker.Size = UDim2.new(0.05, 0, 0.9, 0)
            TextLabel.Size = UDim2.new(0.89, 0, 1, 0)
            picker.Position = UDim2.new(0.01, 0, 0.05, 0)
            TextLabel.Position = UDim2.new(0.07, 0, 0, 0)
            A_1.Position = UDim2.new(0, 0, 0.1, 0)
        end
        isProcessing = false
     end)
  end
  
  function AddDropdown(parent, Configs)
    local DropdownName = Configs.Name or "Dropdown!!"
    local Default = Configs.Default or "TextBox"
    local Options = Configs.Options or {"1", "2", "3"}
    local Default = Configs.Default or "2"
    local Callback = Configs.Callback or function() end
    
    local TextButton = Create("TextButton", parent, {
      Size = UDim2.new(0.95, 0, 0.1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Options,
      Name = "Frame",
      Text = "",
      AutoButtonColor = false
    })Corner(Frame)Stroke(Frame)
    
    local TextLabel = Create("TextLabel", TextButton, {
      TextSize = 12,
      TextColor3 = Configs_HUB.Cor_Text,
      Text = DropdownName,
      TextWrapped = true,
      Size = UDim2.new(0.72, 0, 1, 0),
      Position = UDim2.new(0.06, 0, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = Configs_HUB.Text_Font
    })TextSetColor(TextLabel)
    
    local Line = Create("Frame", TextButton, {
      Size = UDim2.new(1, 0, 0, 1),
      Position = UDim2.new(0, 0, 0, 0),
      BorderSizePixel = 0,
      BackgroundColor3 = Configs_HUB.Cor_Stroke,
      Visible = false
    })
    
    local Arrow = Create("ImageLabel", TextButton, {
      Image = "rbxassetid://119823763721339",
      Size = UDim2.new(0.06, 0, 1, 0),
      Position = UDim2.new(0, 0, 0, 0),
      BackgroundTransparency = 1
    })
    
    local DefaultText = Create("TextLabel", TextButton, {
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      BackgroundTransparency = 0.1,
      Position = UDim2.new(1.04, -20, 0.04, 0),
      AnchorPoint = Vector2.new(1, 0),
      Size = UDim2.new(0.2, 0, 0.9, 0),
      TextColor3 = Configs_HUB.Cor_DarkText,
      TextScaled = true,
      Font = Configs_HUB.Text_Font,
      Text = "..."
    })Corner(DefaultText)Stroke(DefaultText)
    
    local ScrollBar = Create("ScrollingFrame", TextButton, {
      Size = UDim2.new(1, 0, 0.8, 0),
      Position = UDim2.new(0, 0, 0.3, 0),
      CanvasSize = UDim2.new(),
      ScrollingDirection = "Y",
      AutomaticCanvasSize = "Y",
      BackgroundTransparency = 1,
      ScrollBarThickness = 2,
      Visible = false
      })Create("UIListLayout", ScrollBar, {
      Padding = UDim.new(0, 2)
    })
    
    function AddOption(OptionName)
      local TextButton = Create("TextButton", ScrollBar, {
        Size = UDim2.new(1, 0, 0.2, 0),
        Text = OptionName,
        Font = Configs_HUB.Text_Font,
        TextSize = 12,
        TextColor3 = Color3.fromRGB(180, 180, 180),
        BackgroundTransparency = 1
      })Corner(TextButton)
      
      local SelectTable = {}
      local OnOff = false
      if OptionName == Default then
        OnOff = true
        TextButton.BackgroundTransparency = 0.8
        TextButton.TextColor3 = Configs_HUB.Cor_Text
        DefaultText.Text = OptionName
        Callback(OptionName)
      end
      
      TextButton.MouseButton1Click:Connect(function()
        for _,v in pairs(ScrollBar:GetChildren()) do
          if v:IsA("TextButton") then
            v.BackgroundTransparency = 1
            v.TextColor3 = Color3.fromRGB(180, 180, 180)
          end
        end
        DefaultText.Text = OptionName
        Callback(OptionName)
        TextButton.BackgroundTransparency = 0.8
        TextButton.TextColor3 = Configs_HUB.Cor_Text
      end)
    ScrollBar.CanvasSize = UDim2.new(0, 0, 0, ScrollBar.UIListLayout.AbsoluteContentSize.Y)
    end
    
    for _,v in pairs(Options) do
      AddOption(v)
    end
    
    local DropOnOff = false
    local isProcessing = false
    TextButton.MouseButton1Click:Connect(function()
      if isProcessing then return end
      isProcessing = true
       if not DropOnOff then
        TextLabel.Size = UDim2.new(0.94, 0, 0.27, 0)
        Arrow.Size = UDim2.new(0.06, 0, 0.27, 0)
        DefaultText.Size = UDim2.new(0.2, 0, 0.22, 0)
        Line.Position = UDim2.new(0, 0, 0.28, 0)
        ScrollBar.Size = UDim2.new(1, 0, 0.7, 0)
        CreateTween(TextButton, "Size", UDim2.new(0.95, 0, 0.45, 0), 0.3, false)
        CreateTween(Arrow, "Rotation", 180, 0.3, false)
        DropOnOff = true
        Line.Visible = true
        ScrollBar.Visible = true
      else
        CreateTween(TextButton, "Size", UDim2.new(0.95, 0, 0.1, 0), 0.3, false)
        CreateTween(Arrow, "Rotation", 0, 0.3, true)
        DropOnOff = false
        Line.Visible = false
        ScrollBar.Visible = false
        TextLabel.Size = UDim2.new(0.94, 0, 1, 0)
        Arrow.Size = UDim2.new(0.06, 0, 1, 0)
        DefaultText.Size = UDim2.new(0.2, 0, 0.9, 0)
        Line.Position = UDim2.new(0, 0, 0, 0)
        ScrollBar.Size = UDim2.new(1, 0, 0.8, 0)
      end
      isProcessing = false
    end)
    return {ScrollBar, Default, Callback, DefaultText}
  end

  function AddTextTable(parent, Configs)
    local LabelName = Configs.Name or "Label!!"

    local TextButton = Create("TextButton", parent, {
      Size = UDim2.new(0.95, 0, 0.1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Options,
      Name = "Frame",
      Text = "",
      AutoButtonColor = false
    })Corner(Frame)Stroke(Frame)
    
    local TextLabel = Create("TextLabel", TextButton, {
      TextSize = 12,
      TextColor3 = Configs_HUB.Cor_Text,
      Text = LabelName,
      TextWrapped = true,
      Size = UDim2.new(0.72, 0, 1, 0),
      Position = UDim2.new(0.06, 0, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = Configs_HUB.Text_Font
    })TextSetColor(TextLabel)
    
    local Line = Create("Frame", TextButton, {
      Size = UDim2.new(1, 0, 0, 1),
      Position = UDim2.new(0, 0, 0, 0),
      BorderSizePixel = 0,
      BackgroundColor3 = Configs_HUB.Cor_Stroke,
      Visible = false
    })
    
    local Arrow = Create("ImageLabel", TextButton, {
      Image = "rbxassetid://119823763721339",
      Size = UDim2.new(0.06, 0, 1, 0),
      Position = UDim2.new(0, 0, 0, 0),
      BackgroundTransparency = 1
    })

    local ScrollBar = Create("ScrollingFrame", TextButton, {
      Size = UDim2.new(1, 0, 0.8, 0),
      Position = UDim2.new(0, 0, 0.3, 0),
      CanvasSize = UDim2.new(),
      ScrollingDirection = "Y",
      AutomaticCanvasSize = "Y",
      BackgroundTransparency = 1,
      ScrollBarThickness = 2,
      Visible = false
    })Create("UIPadding", ScrollBar, {
      PaddingLeft = UDim.new(0, 10),
      PaddingRight = UDim.new(0, 10),
      PaddingTop = UDim.new(0, 10),
      PaddingBottom = UDim.new(0, 10)
    })Create("UIListLayout", ScrollBar, {
      Padding = UDim.new(0, 5)
    })

  local DropOnOff = false
  local isProcessing = false
    TextButton.MouseButton1Click:Connect(function()
    if isProcessing then return end
      isProcessing = true
      if not DropOnOff then
        TextLabel.Size = UDim2.new(0.94, 0, 0.27, 0)
        Arrow.Size = UDim2.new(0.06, 0, 0.27, 0)
        Line.Position = UDim2.new(0, 0, 0.28, 0)
        ScrollBar.Size = UDim2.new(1, 0, 0.7, 0)
        CreateTween(TextButton, "Size", UDim2.new(0.95, 0, 0.45, 0), 0.3, false)
        CreateTween(Arrow, "Rotation", 180, 0.3, false)
        DropOnOff = true
        Line.Visible = true
        ScrollBar.Visible = true
      else
        CreateTween(TextButton, "Size", UDim2.new(0.95, 0, 0.1, 0), 0.3, false)
        CreateTween(Arrow, "Rotation", 0, 0.3, true)
        DropOnOff = false
        Line.Visible = false
        ScrollBar.Visible = false
        TextLabel.Size = UDim2.new(0.94, 0, 1, 0)
        Arrow.Size = UDim2.new(0.06, 0, 1, 0)
        Line.Position = UDim2.new(0, 0, 0, 0)
        ScrollBar.Size = UDim2.new(1, 0, 0.8, 0)
      end
      isProcessing = false
    end)

    function AddMessageToTable(message)
         local NewButton = Create("TextButton", ScrollBar, {
         BackgroundColor3 = Configs_HUB.Cor_Hub,
         BackgroundTransparency = 0.1,
         Size = UDim2.new(1, 0, 0.2, 0),
         TextColor3 = Configs_HUB.Cor_DarkText,
         TextScaled = true,
         Font = Configs_HUB.Text_Font,
         Text = message,
        })
        Corner(NewButton)
        Stroke(NewButton)
    end

    return {TextButton = TextButton, LabelName = LabelName, ScrollBar = ScrollBar, AddMessage = AddMessageToTable}
  end

  function AddSlider(parent, Configs)
    local SName = Configs.Name or Configs.Title or "Slider!"
    local SDesc = Configs.Description or ""
    local Min = Configs.MinValue or Configs.Min or 10
    local Max = Configs.MaxValue or Configs.Max or 100
    local Increase = Configs.Increase or 1
    local Default = Configs.Default or 25
    local Callback = Configs.Callback or function() end
    local connectionSlider = {}
    Min, Max = Min / Increase, Max / Increase

    local Frame = Create("Frame", parent, {
        Size = UDim2.new(0.95, 0, 0.1, 0),
        BackgroundColor3 = (Configs_HUB and Configs_HUB.Cor_Options) or Color3.new(0.2, 0.2, 0.2),
        Name = "SliderFrame"
    })
    Corner(Frame)
    Stroke(Frame)

    local TitleLabel = Create("TextLabel", Frame, {
        Text = SName,
        Size = UDim2.new(0.615, 0, 1, 0),
        Position = UDim2.new(0.385, 0, 0, 0),
        BackgroundTransparency = 1,
        Font = (Configs_HUB and Configs_HUB.Text_Font) or Enum.Font.SourceSans,
        TextColor3 = (Configs_HUB and Configs_HUB.Cor_Text) or Color3.new(1, 1, 1),
        TextSize = 12,
        TextWrapped = true,
    })
    TextSetColor(TitleLabel)

    local SliderBar = Create("Frame", Frame, {
        Size = UDim2.new(0.27, 0, 0.15, 0),
        Position = UDim2.new(0.015, 0, 0.45, 0),
        BackgroundTransparency = 0
    })
    Corner(SliderBar)

    local Indicator = Create("TextButton", SliderBar, {
        BackgroundColor3 = Configs_HUB.Cor_Text,
        Size = UDim2.new(0.1, 0, 6, 0),
        Position = UDim2.new(0, 0, 0, 0),
        Text = ""
    })
    Corner(Indicator)

    local SliderIcon = Create("Frame", SliderBar, {
        BackgroundColor3 = Color3.fromRGB(30, 140, 200),
        Size = UDim2.new(0.08, 0, 1, 0),
        Position = UDim2.new(0, 0, 0, 0)
    })
    Corner(SliderIcon)

    local LabelVal = Create("TextLabel", Frame, {
        Font = Configs_HUB.Text_Font,
        Size = UDim2.new(0.08, 0, 1, 0),
        Text = "0",
        Position = UDim2.new(0.305, 0, 0, 0),
        TextScaled = true,
        TextColor3 = Configs_HUB.Cor_Text,
        BackgroundTransparency = 1
    })

    local UIScale = Create("UIScale", LabelVal)
    
    local function UpdateLabel(NewValue)
        local Number = tonumber(NewValue * Increase)
        Number = math.floor(Number * 100) / 100
        Default = Number
        LabelVal.Text = tostring(Number)
        task.spawn(Callback, Number)
    end

    local function ControlPos()
        local MousePos = UserInputService:GetMouseLocation()
        local APos = MousePos.X - SliderBar.AbsolutePosition.X
        local ClampedPos = math.clamp(APos / SliderBar.AbsoluteSize.X, 0, 1)
        SliderIcon.Size = UDim2.new(ClampedPos, 0, 1, 0)
        Indicator.Position = UDim2.new(ClampedPos, 0, -2.5, 0)
    end

    connectionSlider.close1 = Indicator.MouseButton1Down:Connect(function()
        CreateTween(Indicator, "Transparency", 0, 0.3)
        while UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
            task.wait()
            ControlPos()
        end
        CreateTween(Indicator, "Transparency", 0.2, 0.3)
        UpdateLabel(Indicator.Position.X.Scale * (Max - Min) + Min)
    end)

    connectionSlider.close2 = Indicator:GetPropertyChangedSignal("Position"):Connect(function()
        UpdateLabel((Indicator.Position.X.Scale * (Max - Min) + Min))
    end)

    connectionSlider.close3 = LabelVal:GetPropertyChangedSignal("Text"):Connect(function()
        UIScale.Scale = 0.3
        CreateTween(UIScale, "Scale", 1.2, 0.1)
        CreateTween(LabelVal, "Rotation", math.random(-1, 1) * 5, 0.15, true)
        CreateTween(UIScale, "Scale", 1, 0.2)
        CreateTween(LabelVal, "Rotation", 0, 0.1)
    end)

    local function SetSlider(NewValue)
        local MinV, MaxV = Min * Increase, Max * Increase
        local SliderPos = (NewValue - MinV) / (MaxV - MinV)
        CreateTween(Indicator, "Position", UDim2.new(SliderPos, 0, -2.5, 0), 0.3, true)
        UpdateLabel(NewValue)
    end
    SetSlider(Default)

    local function Clear()
        for _, connection in pairs(connectionSlider) do
            connection:Disconnect()
        end
        connectionSlider = {}
        SetSlider(0)
    end

    connectionSlider.close4 = Frame.AncestryChanged:Connect(Clear)
  end

  function TypeTextLabel(TextLabel, Text, Delay)
           local index = 1
           local startTime = tick()

           RunService.Heartbeat:Connect(function()
                if index <= #Text then
                   if tick() - startTime >= Delay then
                       TextLabel.Text = string.sub(Text, 1, index)
                        index = index + 1
                        startTime = tick()
                      end
                  end
             end)
         end

  function AddTextLabel(parent, Configs)
    local LabelName = Configs[1] or Configs.Name or "Text Label!!"
    
    local Frame = Create("Frame", parent, {
      Size = UDim2.new(0.95, 0, 0.1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Options,
      Name = "Frame"
    })Corner(Frame)Stroke(Frame)
    
    local TextButton = Create("TextButton", Frame, {
      TextSize = 12,
      TextColor3 = Configs_HUB.Cor_Text,
      Text = LabelName,
      TextWrapped = true,
      Size = UDim2.new(1, 0, 1, 0),
      Position = UDim2.new(0, 0, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = Configs_HUB.Text_Font
    })
    TextSetColor(TextButton)
    return TextButton
  end

  function UpdateTextLabel(TextButton, newName)
    if TextButton and TextButton:IsA("TextButton") then
        TextButton.Text = newName or "Text Label!!"
    end
  end

  function AddImageLabel(parent, Configs)
    local LabelName = Configs[1] or Configs.Name or ""
    local LabelImage = Configs[2] or Configs.Image or "Image Label"
    
    local Frame = Create("Frame", parent, {
        Size = UDim2.new(0.3, 0, 0.6, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Name = "Frame"
    })Corner(Frame)Stroke(Frame)
    
    local TextButton = Create("TextButton", Frame, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = LabelName,
        TextWrapped = true,
        Size = UDim2.new(0.76, 0, 0.2, 0),
        BackgroundTransparency = 1,
        Font = Configs_HUB.Text_Font
    })
    
    local ExpandImageButton = Create("ImageButton", Frame, {
        Size = UDim2.new(0.2, 0, 0.2, 0),
        Position = UDim2.new(0.79, 0, 0., 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        BackgroundTransparency = 1,
        Image = "rbxassetid://74760368115181"
    })Corner(ExpandImageButton)Stroke(ExpandImageButton)
    
    local ImageLabel1 = Create("ImageLabel", Frame, {
        Image = LabelImage,
        Size = UDim2.new(1, 0, 0.78, 0),
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 0, 0.22, 0)
    })TextSetColor(TextButton)

    local isExpanded = false
    
    function ExpandImage()
        if isExpanded then return end
        isExpanded = true

        local MenuBackground = Create("TextButton", Menu, {
            BackgroundTransparency = 0.5,
            BackgroundColor3 = Configs_HUB.Cor_Hub,
            Size = UDim2.new(),
            Position = UDim2.new(1 , 0, 0, 0),
            AnchorPoint = Vector2.new(1, 0),
            AutoButtonColor = false,
            Text = "",
            BackgroundTransparency = 0.2,
        })
        Corner(Frame)

        local ImageLabel = Create("ImageLabel", Menu, {
            Image = LabelImage,
            Size = UDim2.new(),
            AnchorPoint = Vector2.new(1, 0),
            BackgroundTransparency = 1,
            Position = UDim2.new(0.35, 0, 0.2, 0)
        })TextSetColor(TextButton)

        local TextLabel = Create("TextLabel", Menu, {
            TextSize = 12,
            TextColor3 = Configs_HUB.Cor_Text,
            Text = LabelName,
            TextWrapped = true,
            Size = UDim2.new(),
            AnchorPoint = Vector2.new(1, 0),
            Position = UDim2.new(0.95, 0, 0.43, 0), 
            BackgroundTransparency = 1,
            Font = Configs_HUB.Text_Font
        })

        local ExitExpandImageButton = Create("ImageButton", Menu, {
            Size = UDim2.new(),
            Position = UDim2.new(0.95, 0, 0.21, 0),
            AnchorPoint = Vector2.new(1, 0),
            BackgroundColor3 = Configs_HUB.Cor_Options,
            BackgroundTransparency = 0,
            Image = "rbxthumb://type=Asset&id=103081297652130&w=420&h=420"
        })
        Corner(ExitExpandImageButton)
        Stroke(ExitExpandImageButton)

        ExitExpandImageButton.MouseButton1Click:Connect(function()
          CreateTween(ImageLabel, "Size", UDim2.new(), 0.3, false)
          CreateTween(TextLabel, "Size", UDim2.new(), 0.3, false)
          CreateTween(ExitExpandImageButton, "Size", UDim2.new(), 0.3, false)
          CreateTween(MenuBackground, "Size", UDim2.new(), 0.3, true)
          MenuBackground:Destroy()
          ImageLabel:Destroy()
          TextLabel:Destroy()
          ExitExpandImageButton:Destroy()
          isExpanded = false
       end)

        CreateTween(MenuBackground, "Size", UDim2.new(1, 0, 1, 0), 0.3, false)
        CreateTween(ImageLabel, "Size", UDim2.new(0.33, 0, 0.67, 0), 0.3, false)
        CreateTween(TextLabel, "Size", UDim2.new(0.67 -0.1, 0, 0.2, 0), 0.3, false)
        TypeTextLabel(TextLabel, LabelName, 0.15)
        CreateTween(ExitExpandImageButton, "Size", UDim2.new(0.1, 0, 0.2, 0), 0.3, false)
    end

    ExpandImageButton.MouseButton1Click:Connect(ExpandImage)
    return ImageLabel
  end

  local AddVideoFrame = loadstring(game:HttpGet("https://raw.githubusercontent.com/hooaczx/Script/main/AddVideo"))()

  function AddParagraph(parent, Configs)
    local ParagraphName1 = Configs[1] or Configs.Title or "Paragraph!!"
    local ParagraphName2 = Configs[1] or Configs.Text or "Paragraph!!"
    
    local Frame = Create("Frame", parent, {
      Size = UDim2.new(0.95, 0, 0.1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Options,
      Name = "Frame",
      AutomaticSize = "Y"
    })Corner(Frame)Stroke(Frame)Create("UIListLayout", Frame)Create("UIPadding", Frame, {
      PaddingLeft = UDim.new(0, 20), PaddingRight = UDim.new(0, 10), PaddingTop = UDim.new(0, 5), PaddingBottom = UDim.new(0, 5)
    })
    
    local TextButton = Create("TextButton", Frame, {
      Name = "Frame",
      TextSize = 12,
      TextColor3 = Configs_HUB.Cor_Text,
      Text = ParagraphName1,
      Size = UDim2.new(1, 0, 0, 0),
      AutomaticSize = "Y",
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      TextYAlignment = "Top",
      Font = Configs_HUB.Text_Font,
      TextWrapped = true
    })TextSetColor(TextButton)
    
    local TextLabel = Create("TextLabel", Frame, {
      Name = "Frame",
      Size = UDim2.new(1, 0, 0, 0),
      BackgroundTransparency = 1,
      AutomaticSize = "Y",
      TextXAlignment = "Left",
      TextYAlignment = "Top",
      TextColor3 = Configs_HUB.Cor_DarkText,
      TextSize = 11,
      Text = ParagraphName2,
      Font = Configs_HUB.Text_Font,
      TextWrapped = true
    })
    return {TextButton, TextLabel}
  end
  
  function AddSection(parent, Configs)
    local SectionName = Configs[1] or Configs.Name or "Section!!"
    
    local Frame = Create("Frame", parent, {
      Size = UDim2.new(0.95, 0, 0.1, 0),
      Position = UDim2.new(0.05, 0, 0, 0),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Name = "Frame",
      Transparency = 1
    })Corner(Frame)
    
    local TextButton = Create("TextButton", Frame, {
      TextSize = 12,
      TextColor3 = Configs_HUB.Cor_DarkText,
      Text = SectionName,
      Size = UDim2.new(1, 0, 1, 0),
      Position = UDim2.new(0, 10, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = Configs_HUB.Text_Font
    })
    return TextButton
  end

  function AddMusicPlayer(parent, Configs)
    local Default = Configs.Default or ""
    local ClearText = Configs.ClearText or false
    local PlaceholderText = Configs.PlaceholderText or "Enter Music ID"

    local Frame = Create("Frame", parent, {
        Size = UDim2.new(0.95, 0, 0.7, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Name = "MusicPlayerFrame",
    })
    Corner(Frame)
    Stroke(Frame)
    
    local MusicPlayerText = Create("TextLabel", Frame, {
        Size = UDim2.new(1, 0, 0.1, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Text = "Music Player",
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextScaled = true,
        BackgroundTransparency = 1,
    })
    
    local LineMusicPlayerText = Create("Frame", MusicPlayerText, {
      Size = UDim2.new(1, 0, 0, 1),
      Position = UDim2.new(0, 0, 1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Stroke,
      BorderSizePixel = 0
    })
    
    local NameSongFrame = Create("TextLabel", Frame, {
        Size = UDim2.new(1, 0, 0.2, 0),
        Position = UDim2.new(0, 0, 0.1, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Text = "No Song",
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextScaled = true,
        BackgroundTransparency = 1,
    })

    local TimeSongText = Create("TextLabel", Frame, {
        Size = UDim2.new(0.2, 0, 0.1, 0),
        Position = UDim2.new(0.1, 0, 0.73, 0),
        BorderSizePixel = 0,
        Text = "00:00",
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextScaled = true,
        BackgroundTransparency = 1,
    })

    local TextID = Create("TextLabel", Frame, {
        Size = UDim2.new(0.1, 0, 0.1, 0),
        Position = UDim2.new(0.4, 0, 0.4, 0),
        Text = "ID",
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextScaled = true,
        BackgroundTransparency = 1,
    })

    local CreditLabel = Create("TextLabel", Frame, {
        Size = UDim2.new(0.35, 0, 0.2, 0),
        Position = UDim2.new(0.01, 0, 0.34, 0),
        Text = "Created by: Not found",
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextScaled = true,
        BackgroundTransparency = 1,
    })

    local TextBoxID = Create("TextBox", Frame, {
        Size = UDim2.new(0.27, 0, 0.2, 0),
        Position = UDim2.new(0.53, 0, 0.34, 0),
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Default,
        ClearTextOnFocus = ClearText,
        PlaceholderText = PlaceholderText,
        TextScaled = true,
        Font = Configs_HUB.Text_Font,
        BackgroundTransparency = 1,
    })
    
    local LineTextboxId = Create("Frame", TextBoxID, {
      Size = UDim2.new(1, 0, 0, 1),
      Position = UDim2.new(0.5, 0, 1, 0),
      AnchorPoint = Vector2.new(0.5, 0.5),
      BackgroundColor3 = Configs_HUB.Cor_Stroke,
      BorderSizePixel = 0
    })
    
    TextBoxID.MouseEnter:Connect(function()
      CreateTween(LineTextboxId, "Size", UDim2.new(0, 0, 0, 1), 0.3, true)
      CreateTween(LineTextboxId, "Size", UDim2.new(1, 0, 0, 1), 0.3, true)
    end)

    local Toggle = Create("ImageButton", Frame, {
        Size = UDim2.new(0.09, 0, 0.19, 0),
        Position = UDim2.new(0.55, 0, 0.64, 0),
        AnchorPoint = Vector2.new(1, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        BackgroundTransparency = 0,
        Image = "rbxthumb://type=Asset&id=98070627958036&w=420&h=420"
    })

    local Line = Create("Frame", Frame, {
        Size = UDim2.new(0.8, 0, 0.05, 0),
        Position = UDim2.new(0.1, 0, 0.84, 0),
        BorderSizePixel = 0,
        BackgroundColor3 = Configs_HUB.Cor_Stroke,
    })

    local Progress = Create("Frame", Line, {
        Size = UDim2.new(0, 0, 1, 0),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = Configs_HUB.Cor_Text,
        BorderSizePixel = 0,
    })

    local sound = Instance.new("Sound")
    sound.Parent = Frame

    local function formatTime(seconds)
        local minutes = math.floor(seconds / 60)
        local remainingSeconds = seconds % 60
        return string.format("%d:%02d", minutes, remainingSeconds)
    end

    local function updateProgressBar()
        RunService.RenderStepped:Connect(function()
            if sound.Playing then
                local progress = sound.TimePosition / sound.TimeLength
                Progress.Size = UDim2.new(progress, 0, 1, 0)
                TimeSongText.Text = formatTime(math.floor(sound.TimePosition)) .. " / " .. formatTime(math.floor(sound.TimeLength))
            end
        end)
    end

    local function extractAssetId(input)
    local assetId = input:match("rbxassetid://(%d+)") 
    if assetId then
        return assetId
    end
    assetId = input:match("https://www.roblox.com/asset/%?id=(%d+)")
    if assetId then
        return assetId
    end
    assetId = input:match("^(%d+)$")
    if assetId then
        return assetId
    end
    return nil
end

Toggle.MouseButton1Click:Connect(function()
    local inputText = TextBoxID.Text
    local assetId = extractAssetId(inputText)
    if not assetId then
        NameSongFrame.Text = "Invalid ID"
        CreditLabel.Text = "Please enter a valid  ID of asset song"
        return
    end
    local productInfo
    local success, err = pcall(function()
        productInfo = game:GetService("MarketplaceService"):GetProductInfo(assetId)
    end)
    if not success or not productInfo then
        NameSongFrame.Text = "Failed to fetch asset info"
        CreditLabel.Text = "Error: " .. tostring(err)
        return
    end
    if productInfo.AssetTypeId ~= 3 then
        NameSongFrame.Text = "id Asset is not a Song"
        CreditLabel.Text = "id Not a Song"
        return
    end
    if not productInfo.IsForSale then
        NameSongFrame.Text = "Song not for sale, check at" .. " https://www.roblox.com/library/" .. assetId
        CreditLabel.Text = "Creator by: " .. (productInfo.Creator and productInfo.Creator.Name or "Unknown")
        return
    end
    if sound.IsPlaying then
        soundsavedTimePosition = sound.TimePosition
        sound:Stop()
        NameSongFrame.Text = "Stopped"
        CreditLabel.Text = "Created by: Not found"
        Toggle.Image = "rbxthumb://type=Asset&id=98070627958036&w=420&h=420"
        musicPlaying = false
    else
        local successLoad, loadErr = pcall(function()
            sound.SoundId = "rbxassetid://" .. assetId
            sound:Play()
            sound.TimePosition = soundsavedTimePosition
        end)
        if not successLoad then
            NameSongFrame.Text = "Failed to load/play song"
            CreditLabel.Text = "Asset is private or restricted access or cannot be loaded"
            Toggle.Image = "rbxthumb://type=Asset&id=98070627958036&w=420&h=420"
            return
        end
        updateProgressBar()
        NameSongFrame.Text = productInfo.Name
        Toggle.Image = "rbxthumb://type=Asset&id=133872094700280&w=420&h=420"
        CreditLabel.Text = "Created by: " .. (productInfo.Creator and productInfo.Creator.Name or "Unknown")
        musicPlaying = true
    end
end)
end

function AddFeedBack(parent, Configs)
    local WebhookUrl = Configs.WebhookUrl
    local ClearText = Configs.ClearText or false
    
    local Frame = Create("Frame", parent, {
        Size = UDim2.new(0.95, 0, 0.7, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Name = "MusicPlayerFrame",
    })
    Corner(Frame)
    Stroke(Frame)
    
    local TextLabel = Create("TextLabel", Frame, {
        Size = UDim2.new(0.9, 0, 0.1, 0),
        Position = UDim2.new(0.05, 0, 0.03, 0),
        TextWrapped = true,
        BackgroundTransparency = 1,
        Font = Configs_HUB.Text_Font,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = "Feedback"
    })

    local TextBox = Create("TextBox", Frame, {
        Size = UDim2.new(0.9, 0, 0.6, 0),
        Position = UDim2.new(0.05, 0, 0.125, 0),
        Text = "", 
        PlaceholderText = "",
        ClearTextOnFocus = ClearText,
        Font = Configs_HUB.Text_Font,
        TextColor3 = Configs_HUB.Cor_Text,
        TextXAlignment = Enum.TextXAlignment.Left,
        TextYAlignment = Enum.TextYAlignment.Top
    })
    Corner(TextBox)
    
    local SendButton = Create("TextButton", Frame, {
        Size = UDim2.new(0.4, 0, 0.2, 0),
        Position = UDim2.new(0.3, 0, 0.75, 0),
        Text = "Send",
        BackgroundColor3 = Configs_HUB.Cor_Button,
        TextColor3 = Color3.new(1, 1, 1),
        Font = Enum.Font.SourceSansBold,
        TextSize = 18,
    })
    Corner(SendButton)
    
    SendButton.MouseButton1Click:Connect(function()
        local message = TextBox.Text
        if message == "" then
            return
        else
        local player = game.Players.LocalPlayer
        local playerUsername = player.Name
        local playerProfileLink = string.format("https://www.roblox.com/users/%d/profile", player.UserId)

        local avatarResponse
        local success, errorMsg = pcall(function()
            avatarResponse = game:HttpGet(string.format(
                "https://thumbnails.roblox.com/v1/users/avatar?userIds=%d&size=420x420&format=Png&isCircular=true",
                player.UserId
            ))
        end)

        local avatarData, AvatarImage
        if success and avatarResponse then
            avatarData = game:GetService("HttpService"):JSONDecode(avatarResponse).data[1]
            AvatarImage = avatarData and avatarData.imageUrl or "Unknown"
        else
            warn("Failed to fetch avatar image:", errorMsg)
            AvatarImage = "Unknown"
        end

        local data = {
            ["username"] = playerUsername,
            ["avatar_url"] = AvatarImage,
            ["embeds"] = {
                {
                    ["title"] = "Message from " .. playerUsername,
                    ["description"] = message.."\n\n[Click here to view profile](" .. playerProfileLink .. ")",
                    ["color"] = 0x7289DA
                }
            }
        }

        local newdata = game:GetService("HttpService"):JSONEncode(data)
        local headers = {["content-type"] = "application/json"}

        local request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request) or (http and http.request)

        if request then
            local success, response = pcall(function()
                return request({
                    Url = WebhookUrl,
                    Body = newdata,
                    Method = "POST",
                    Headers = headers
                })
            end)

            if success then
                warn("success to send webhook request")
            else
                warn("Failed to send webhook request:", response)
            end
        else
            warn("HTTP request function is not available.")
          end
        end
    end)
end

  function AddDiscord(parent, Configs)
    local DiscordLink = Configs[1] or Configs.DiscordLink or "https://discord.gg/"
    local DiscordIcon = Configs[2] or Configs.DiscordIcon or "rbxassetid://"
    local DiscordTitle = Configs[3] or Configs.DiscordTitle or ""
    
    local Frame = Create("Frame", parent, {
      Size = UDim2.new(1, 0, 0, 110),
      BackgroundColor3 = Color3.fromRGB(30, 30, 30),
      Name = "Frame",
      AutomaticSize = "Y"
    })
    
    local LinkLabel = Create("TextLabel", Frame, {
      Size = UDim2.new(1, 0, 0, 25),
      Text = DiscordLink,
      TextXAlignment = "Left",
      BackgroundTransparency = 1,
      Position = UDim2.new(0, 12, 0, 0),
      TextColor3 = Color3.fromRGB(0, 120, 255),
      Font = Enum.Font.GothamBold,
      TextSize = 14
    })
    
    local TitleLabel = Create("TextLabel", Frame, {
      Size = UDim2.new(1, 0, 0, 25),
      Text = DiscordTitle,
      TextXAlignment = "Left",
      BackgroundTransparency = 1,
      Position = UDim2.new(0, 60, 0, 25),
      TextColor3 = Color3.fromRGB(200, 200, 200),
      Font = Enum.Font.GothamBold,
      TextSize = 14
    })
    
    local IconLabel = Create("ImageLabel", Frame, {
      Size = UDim2.new(0, 40, 0, 40),
      AnchorPoint = Vector2.new(0, 0.5),
      Position = UDim2.new(0, 12, 0.45, 0),
      Image = DiscordIcon
    })Corner(IconLabel)
    
    local JoinButton = Create("TextButton", Frame, {
      Size = UDim2.new(1, -24, 0, 25),
      AnchorPoint = Vector2.new(0.5, 1),
      Position = UDim2.new(0.5, 0, 1, -8),
      Text = "Join",
      Font = Enum.Font.GothamBold,
      TextSize = 15,
      TextColor3 = Color3.fromRGB(220, 220, 220),
      BackgroundColor3 = Color3.fromRGB(50, 200, 50)
    })Corner(IconLabel)
    
    local time = tick()
    ClickConter = 0
    JoinButton.MouseButton1Click:Connect(function()
      if ClickConter == 0 or tick() - time > 5 then time = tick() setclipboard(DiscordLink) ClickConter = ClickConter + 1
        JoinButton.Text = "Copied to Clipboard"
        JoinButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        JoinButton.TextColor3 = Color3.fromRGB(150, 150, 150)
        task.wait(5)
        JoinButton.Text = "Join"
        JoinButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
        JoinButton.TextColor3 = Color3.fromRGB(220, 220, 220)
      end
     end)
   end
  return Menu
end
