local MessageTipOne = "Tadachii's Music Player - Tip (1): *You can add custom music to this GUI! Check the script!*"
local MessageTipTwo = "Tadachii's Music Player - Tip (2) *The Destroy Button will only delete the music and this custom GUI.*"
print(MessageTipOne)
print(MessageTipTwo)

-- Song List
-- Replace the song Id's in the link to your desired song.
-- Be sure to edit/customize the "Name" for the song, so you know what song is playing!
local songList = {
    {Link = "https://www.roblox.com/asset/?id=7024101188", Name = "Fransis Derelle - Same Mistake"},
    {Link = "https://www.roblox.com/asset/?id=1840003540", Name = "Juice Music - Tell It to Yourself"},
    {Link = "https://www.roblox.com/asset/?id=142376088", Name = "Parry Gripp - Raining Tacos"},
    {Link = "https://www.roblox.com/asset/?id=1837247191", Name = "Cezame - Pedal to the metal"},
    {Link = "https://www.roblox.com/asset/?id=1846738464", Name = "Sonoton Music - Corner Store (A)"},
    {Link = "https://www.roblox.com/asset/?id=1846458016", Name = "Sonoton Music - No More"},
    {Link = "https://www.roblox.com/asset/?id=1838569831", Name = "JW Media Music - Never Gonna Give You Up"},
    {Link = "https://www.roblox.com/asset/?id=1844750628", Name = "Black Beazz - Oversized"},
    {Link = "https://www.roblox.com/asset/?id=1843433894", Name = "Montmorency Records - Underground"},
    {Link = "https://www.roblox.com/asset/?id=1846720993", Name = "Sonoton Music - Cool Garage (A)"},
    {Link = "https://www.roblox.com/asset/?id=1840003588", Name = "Sonoton Music - Radio (A)"},
    {Link = "https://www.roblox.com/asset/?id=1842558494", Name = "Legacy - Skull Crusher"}
}

-- Create Sound object
local soundName = "TadachiisMusicPlayerGUI"
local musicPlayer = workspace:FindFirstChild(soundName)
if musicPlayer then
    musicPlayer:Destroy()
end

musicPlayer = Instance.new("Sound")
musicPlayer.Name = soundName
musicPlayer.Volume = 1 -- Adjust the volume as needed
musicPlayer.Looped = true -- Enable looping
musicPlayer.Parent = workspace

-- Create GUI
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Check if GUI already exists and destroy it
local existingGui = playerGui:FindFirstChild("MusicPlayerGUI")
if existingGui then
    existingGui:Destroy()
end

-- Create ScreenGui
local musicPlayerGUI = Instance.new("ScreenGui")
musicPlayerGUI.Name = "MusicPlayerGUI"
musicPlayerGUI.Parent = playerGui

-- Create draggable frame
local holder = Instance.new("Frame")
holder.Name = "Holder"
holder.Size = UDim2.new(0, 200, 0, 215)
holder.Position = UDim2.new(0, 10, 0, 10)
holder.BackgroundTransparency = 0.5
holder.BackgroundColor3 = Color3.new(0, 0, 0)
holder.Active = true
holder.Draggable = true
holder.Parent = musicPlayerGUI

-- Create Music Player label
local musicLabel = Instance.new("TextLabel")
musicLabel.Name = "MusicLabel"
musicLabel.Size = UDim2.new(1, 0, 0, 30)
musicLabel.BackgroundTransparency = 1
musicLabel.Text = "Tadachii's Music Player"
musicLabel.TextScaled = true
musicLabel.TextColor3 = Color3.new(1, 1, 1)
musicLabel.Parent = holder

-- Create Now Playing label
local nowPlayingLabel = Instance.new("TextLabel")
nowPlayingLabel.Name = "NowPlayingLabel"
nowPlayingLabel.Size = UDim2.new(1, 0, 0, 20)
nowPlayingLabel.Position = UDim2.new(0, 0, 0, 40)
nowPlayingLabel.BackgroundTransparency = 1
nowPlayingLabel.Text = "Now Playing:"
nowPlayingLabel.TextScaled = true
nowPlayingLabel.TextColor3 = Color3.new(1, 1, 1)
nowPlayingLabel.Parent = holder

-- Create Song Name label
local songNameLabel = Instance.new("TextLabel")
songNameLabel.Name = "SongNameLabel"
songNameLabel.Size = UDim2.new(1, 0, 0, 20)
songNameLabel.Position = UDim2.new(0, 0, 0, 60)
songNameLabel.BackgroundTransparency = 1
songNameLabel.Text = ""
songNameLabel.TextScaled = true
songNameLabel.TextColor3 = Color3.new(1, 1, 1)
songNameLabel.Parent = holder

-- Create Duration label
local durationLabel = Instance.new("TextLabel")
durationLabel.Name = "DurationLabel"
durationLabel.Size = UDim2.new(1, 0, 0, 20)
durationLabel.Position = UDim2.new(0, 0, 0, 80)
durationLabel.BackgroundTransparency = 1
durationLabel.Text = ""
durationLabel.TextScaled = true
durationLabel.TextColor3 = Color3.new(1, 1, 1)
durationLabel.Parent = holder

-- Create Previous Song button
local previousButton = Instance.new("TextButton")
previousButton.Name = "PreviousButton"
previousButton.Size = UDim2.new(0, 40, 0, 30)
previousButton.Position = UDim2.new(0, 10, 0, 110)
previousButton.BackgroundTransparency = 0.5
previousButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
previousButton.Text = "<"
previousButton.TextScaled = true
previousButton.TextColor3 = Color3.new(1, 1, 1)
previousButton.Parent = holder

-- Create Play/Pause button
local playPauseButton = Instance.new("TextButton")
playPauseButton.Name = "PlayPauseButton"
playPauseButton.Size = UDim2.new(0, 80, 0, 30)
playPauseButton.Position = UDim2.new(0.5, -40, 0, 110)
playPauseButton.BackgroundTransparency = 0.5
playPauseButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
playPauseButton.Text = "Play"
playPauseButton.TextScaled = true
playPauseButton.TextColor3 = Color3.new(1, 1, 1)
playPauseButton.Parent = holder

-- Create Next Song button
local nextButton = Instance.new("TextButton")
nextButton.Name = "NextButton"
nextButton.Size = UDim2.new(0, 40, 0, 30)
nextButton.Position = UDim2.new(1, -50, 0, 110)
nextButton.BackgroundTransparency = 0.5
nextButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
nextButton.Text = ">"
nextButton.TextScaled = true
nextButton.TextColor3 = Color3.new(1, 1, 1)
nextButton.Parent = holder

-- Create Destroy GUI button
local destroyGUIButton = Instance.new("TextButton")
destroyGUIButton.Name = "DestroyGUIButton"
destroyGUIButton.Size = UDim2.new(0, 120, 0, 30)
destroyGUIButton.Position = UDim2.new(0.5, -60, 0, 150)
destroyGUIButton.BackgroundTransparency = 0.5
destroyGUIButton.BackgroundColor3 = Color3.new(1, 0, 0)
destroyGUIButton.Text = "Destroy GUI"
destroyGUIButton.TextScaled = true
destroyGUIButton.TextColor3 = Color3.new(0, 0, 0)
destroyGUIButton.Parent = holder

-- Create Tip label
local tipLabel = Instance.new("TextLabel")
tipLabel.Name = "TipLabel"
tipLabel.Size = UDim2.new(1, 0, 0, 20)
tipLabel.Position = UDim2.new(0, 0, 0, 195)
tipLabel.BackgroundTransparency = 1
tipLabel.Text = "Press (F9) for Message Tip"
tipLabel.TextScaled = true
tipLabel.TextColor3 = Color3.new(1, 1, 1)
tipLabel.Parent = holder

local currentSongIndex = 1
local isPlaying = false
local pauseTimePosition = 0

-- Function to format time in mm:ss format
local function formatTime(timeInSeconds)
    local minutes = math.floor(timeInSeconds / 60)
    local seconds = math.floor(timeInSeconds % 60)
    return string.format("%02d:%02d", minutes, seconds)
end

-- Function to play the current song
local function playCurrentSong()
    musicPlayer.SoundId = songList[currentSongIndex].Link
    musicPlayer.TimePosition = pauseTimePosition
    musicPlayer:Play()
    isPlaying = true
    playPauseButton.Text = "Pause"
    songNameLabel.Text = songList[currentSongIndex].Name
    durationLabel.Text = formatTime(musicPlayer.TimePosition) .. " - " .. formatTime(musicPlayer.TimeLength)
end

-- Function to pause the current song
local function pauseCurrentSong()
    musicPlayer:Pause()
    isPlaying = false
    playPauseButton.Text = "Play"
    pauseTimePosition = musicPlayer.TimePosition
end

-- Function to go to the previous song
local function previousSong()
    if currentSongIndex > 1 then
        currentSongIndex = currentSongIndex - 1
    else
        currentSongIndex = #songList
    end
    -- Reset the pauseTimePosition
    pauseTimePosition = 0
    -- Play the previous song
    playCurrentSong()
end

-- Function to go to the next song
local function nextSong()
    if currentSongIndex < #songList then
        currentSongIndex = currentSongIndex + 1
    else
        currentSongIndex = 1
    end
    -- Reset the pauseTimePosition
    pauseTimePosition = 0
    -- Play the next song
    playCurrentSong()
end

-- Function to update the duration label
local function updateDurationLabel()
    if isPlaying then
        durationLabel.Text = formatTime(musicPlayer.TimePosition) .. " - " .. formatTime(musicPlayer.TimeLength)
    end
end

-- Button connections
previousButton.MouseButton1Click:Connect(function()
    previousSong()
end)

playPauseButton.MouseButton1Click:Connect(function()
    if isPlaying then
        pauseCurrentSong()
    else
        playCurrentSong()
    end
end)

nextButton.MouseButton1Click:Connect(function()
    nextSong()
end)

destroyGUIButton.MouseButton1Click:Connect(function()
    musicPlayer:Stop()
    musicPlayer:Destroy()
    musicPlayerGUI:Destroy()
end)

-- Add GUI to player's PlayerGui
musicPlayerGUI.Parent = playerGui

-- Connect to song events
musicPlayer.Ended:Connect(function()
    playPauseButton.Text = "Play"
    pauseCurrentSong()
end)

musicPlayer:GetPropertyChangedSignal("IsPlaying"):Connect(function()
    updateDurationLabel()
end)

musicPlayer:GetPropertyChangedSignal("TimePosition"):Connect(function()
    updateDurationLabel()
end)

-- Loop to continuously update the duration label
while true do
    if isPlaying then
        updateDurationLabel()
    end
    wait(0.001) -- Adjust the interval as needed for responsiveness
end
