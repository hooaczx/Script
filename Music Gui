local player = game.Players.LocalPlayer
local playerGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local function createRainbowUIStroke(stroke)
    local hue = 0
    RunService.Heartbeat:Connect(function()
        hue = (hue + 1) % 360
        stroke.Color = Color3.fromHSV(hue / 360, 1, 1)
    end)
end
local function createToothpasteBlackUIStroke(stroke)
    local color1 = Color3.fromRGB(0, 255, 255)
    local color2 = Color3.fromRGB(0, 0, 0)
    local tweenService = game:GetService("TweenService")
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)
    local tweenGoal = {Color = color1}
    local tween = tweenService:Create(stroke, tweenInfo, tweenGoal)
    tween:Play()
end
local function createRedBlackUIStroke(stroke)
    local color1 = Color3.fromRGB(255, 0, 0)
    local color2 = Color3.fromRGB(0, 0, 0)
    local tweenService = game:GetService("TweenService")
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)
    local tweenGoal = {Color = color1}
    local tween = tweenService:Create(stroke, tweenInfo, tweenGoal)
    tween:Play()
end
local function createRainbowEffect(element)
    local hue = 0
    RunService.Heartbeat:Connect(function()
        hue = (hue + 1) % 360
        element.BackgroundColor3 = Color3.fromHSV(hue / 360, 1, 1)
    end)
end
local existingGui = playerGui:FindFirstChild("MuusicGui")
if existingGui then
    local existingSound = existingGui:FindFirstChild("MuusicSound")
    if existingSound then
        existingSound:Stop()
    end
    existingGui:Destroy()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MuusicGui"
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
screenGui.DisplayOrder = 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998
screenGui.IgnoreGuiInset = true
screenGui.Parent = playerGui

local circleButton = Instance.new("ImageButton")
circleButton.Size = UDim2.new(0, 30, 0, 30)
circleButton.Draggable = true
circleButton.Active = true
circleButton.Position = UDim2.new(0.3298, -60, 0, 15)
circleButton.Image = "rbxthumb://type=Asset&id=18488884411&w=150&h=150"
circleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
circleButton.Parent = screenGui
circleButton.ZIndex = 1000
circleButton.AnchorPoint = Vector2.new(0.5, 0.5)
circleButton.BackgroundTransparency = 1

local frame8 = Instance.new("Frame")
frame8.ZIndex = 10000
frame8.Size = UDim2.new(0, 200, 0, 100)
frame8.Position = UDim2.new(2.04, -25, -0.05, 2)
frame8.BackgroundColor3 = Color3.fromRGB(128, 0, 128)
frame8.BackgroundTransparency = 1
frame8.Parent = circleButton

local Tinni = Instance.new("ScrollingFrame")
Tinni.Size = UDim2.new(1, 0, 1, 0)
Tinni.ZIndex = 10000
Tinni.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tinni.BackgroundTransparency = 0.91
Tinni.Active = true
Tinni.ScrollBarThickness = 3
Tinni.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
Tinni.ScrollBarImageTransparency = 0
Tinni.Parent = frame8

createRainbowEffect(Tinni)

local TinniLayout = Instance.new("UIListLayout")
TinniLayout.SortOrder = Enum.SortOrder.LayoutOrder
TinniLayout.Padding = UDim.new(0, 7)
TinniLayout.Parent = Tinni

local function updateFrameSize8()
    local contentHeight = TinniLayout.AbsoluteContentSize.Y
    Tinni.CanvasSize = UDim2.new(0, 0, 0, contentHeight + 15)
end

local isOpen = true

local function tggleSize()
    if isOpen then
        Tinni:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1.2, true)
    else
        Tinni:TweenSize(UDim2.new(0, 200, 0, 100), Enum.EasingDirection.Out, Enum.EasingStyle.Sine, 1.2, true)
    end
    isOpen = not isOpen
end


circleButton.MouseButton1Click:Connect(tggleSize)

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 600, 0, 200)
frame.Position = UDim2.new(0.5, -300, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(128, 0, 128)
frame.BackgroundTransparency = 0.91
frame.BorderSizePixel = 0
frame.Parent = screenGui

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay.Parent = frame

local uigjStroke = Instance.new("UIStroke")
uigjStroke.Thickness = 3
uigjStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uigjStroke.Parent = frame
createRainbowUIStroke(uigjStroke)

local eqBarContainer = Instance.new("Frame")
eqBarContainer.Size = UDim2.new(0.58, 0, 0.2, 0)
eqBarContainer.Position = UDim2.new(0.1, 0, 0.1, 0)
eqBarContainer.ZIndex = toggleButton.ZIndex = 1000000
eqBarContainer.BackgroundTransparency = 1
eqBarContainer.Parent = frame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 193, 0, 40)
toggleButton.Text = "Music Gui: off"
toggleButton.ZIndex = 10000
toggleButton.TextScaled = true
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.BackgroundTransparency = 0.4
toggleButton.Parent = Tinni
local isHidden = false

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay.Parent = toggleButton

local uigjStroke = Instance.new("UIStroke")
uigjStroke.Thickness = 3
uigjStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uigjStroke.Parent = toggleButton
createRainbowUIStroke(uigjStroke)

local shakeButton = Instance.new("TextButton")
shakeButton.Size = UDim2.new(0, 193, 0, 40)
shakeButton.Text = "Shake: Off"
shakeButton.ZIndex = 10000
shakeButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shakeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
shakeButton.BackgroundTransparency = 0.4
shakeButton.Parent = Tinni

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay.Parent = shakeButton

local uigjStroke = Instance.new("UIStroke")
uigjStroke.Thickness = 3
uigjStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uigjStroke.Parent = shakeButton
createRainbowUIStroke(uigjStroke)

local playButton = Instance.new("ImageButton")
playButton.Size = UDim2.new(0, 30, 0, 30)
playButton.Position = UDim2.new(0, 10, 0.5, -45)
playButton.BackgroundTransparency = 0.4
playButton.Image = "rbxassetid://120936263094449"
playButton.Parent = frame

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay.Parent = playButton

local uigjStroke = Instance.new("UIStroke")
uigjStroke.Thickness = 3
uigjStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uigjStroke.Parent = playButton
createRainbowUIStroke(uigjStroke)

local nextButton = Instance.new("ImageButton")
nextButton.Size = UDim2.new(0, 30, 0, 30)
nextButton.Position = UDim2.new(0, 130, 0.5, -45)
nextButton.BackgroundTransparency = 0.4
nextButton.Image = "rbxthumb://type=Asset&id=108701088493396&w=150&h=150"
nextButton.Parent = frame

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay.Parent = nextButton

local uigjStroke = Instance.new("UIStroke")
uigjStroke.Thickness = 3
uigjStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uigjStroke.Parent = nextButton
createRainbowUIStroke(uigjStroke)

local prevButton = Instance.new("ImageButton")
prevButton.Size = UDim2.new(0, 30, 0, 30)
prevButton.Position = UDim2.new(0, 70, 0.5, -45)
prevButton.BackgroundTransparency = 0.4
prevButton.Image = "rbxthumb://type=Asset&id=135009931121404&w=150&h=150"
prevButton.Parent = frame

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay.Parent = prevButton

local uigjStroke = Instance.new("UIStroke")
uigjStroke.Thickness = 3
uigjStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uigjStroke.Parent = prevButton
createRainbowUIStroke(uigjStroke)

local function toggleFrame()
    if isHidden then
        frame:TweenPosition(UDim2.new(0.5, -300, 0.3, 0), "Out", "Sine", 1, true)
        toggleButton.Text = "Music Gui: on"
    else
        frame:TweenPosition(UDim2.new(0.5, -300, 1.2, 0), "Out", "Sine", 1, true)
        toggleButton.Text = "Music Gui: off"
    end
    isHidden = not isHidden
end

toggleButton.MouseButton1Click:Connect(toggleFrame)
local songNameLabel = Instance.new("TextLabel")
songNameLabel.Size = UDim2.new(0.35, 0, 0.17, 0)
songNameLabel.Position = UDim2.new(0.47, 0, 0, 11)
songNameLabel.Text = "Song Name"
songNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
songNameLabel.BackgroundTransparency = 1
songNameLabel.TextScaled = true
songNameLabel.Parent = frame

local timeLabel = Instance.new("TextLabel")
timeLabel.Size = UDim2.new(0.7, 0, 0.2, 0)
timeLabel.Position = UDim2.new(0.3, 0, 0.4, 0)
timeLabel.Text = "0:00/0:00"
timeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
timeLabel.BackgroundTransparency = 1
timeLabel.TextScaled = true
timeLabel.Parent = frame

local progressBar = Instance.new("Frame")
progressBar.Size = UDim2.new(0.8, 0, 0.07, 0)
progressBar.Position = UDim2.new(0.15, 0, 0.8, 0)
progressBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
progressBar.BorderSizePixel = 0
progressBar.Parent = frame

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay.Parent = progressBar

local uiopStroke = Instance.new("UIStroke")
uiopStroke.Thickness = 3
uiopStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uiopStroke.Parent = progressBar
createRainbowUIStroke(uiopStroke)

local progressFill = Instance.new("Frame")
progressFill.Size = UDim2.new(0, 0, 1, 0)
progressFill.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
progressFill.BorderSizePixel = 0
progressFill.Parent = progressBar

local loopButton = Instance.new("ImageButton")
loopButton.Size = UDim2.new(0, 30, 0, 30)
loopButton.Position = UDim2.new(0, 10, 0.5, -8)
loopButton.BackgroundTransparency = 0.4
loopButton.Image = "rbxthumb://type=Asset&id=89124530711215&w=150&h=150"
loopButton.Parent = frame

local increaseVolumeButton = Instance.new("ImageButton")
increaseVolumeButton.Size = UDim2.new(0, 30, 0, 30)
increaseVolumeButton.Position = UDim2.new(0, 70, 0.5, -8)
increaseVolumeButton.BackgroundTransparency = 0.4
increaseVolumeButton.Image = "rbxthumb://type=Asset&id=119530984263266&w=150&h=150"
increaseVolumeButton.Parent = frame

local decreaseVolumeButton = Instance.new("ImageButton")
decreaseVolumeButton.Size = UDim2.new(0, 30, 0, 30)
decreaseVolumeButton.Position = UDim2.new(0, 130, 0.5, -8)
decreaseVolumeButton.BackgroundTransparency = 0.4
decreaseVolumeButton.Image = "rbxthumb://type=Asset&id=99444312865147&w=150&h=150"
decreaseVolumeButton.Parent = frame

local timeLabelReal = Instance.new("TextLabel")
timeLabelReal.Size = UDim2.new(0.3, 0, 0.2, 0)
timeLabelReal.Position = UDim2.new(0.05, 10, 0.5, -95)
timeLabelReal.Text = "Real Time: 00:00:00"
timeLabelReal.TextColor3 = Color3.fromRGB(255, 255, 255)
timeLabelReal.BackgroundTransparency = 1
timeLabelReal.TextWrapped = true
timeLabelReal.Parent = frame

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay.Parent = loopButton

local UICornerNext = Instance.new("UICorner")
UICornerNext.CornerRadius = UDim.new(1, 0)
UICornerNext.Parent = increaseVolumeButton

local UICornerPrev = Instance.new("UICorner")
UICornerPrev.CornerRadius = UDim.new(1, 0)
UICornerPrev.Parent = decreaseVolumeButton

local uiyStroke = Instance.new("UIStroke")
uiyStroke.Thickness = 3
uiyStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uiyStroke.Parent = loopButton
createRainbowUIStroke(uiyStroke)

local uiuStroke = Instance.new("UIStroke")
uiuStroke.Thickness = 3
uiuStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uiuStroke.Parent = increaseVolumeButton
createRainbowUIStroke(uiuStroke)

local uigStroke = Instance.new("UIStroke")
uigStroke.Thickness = 3
uigStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uigStroke.Parent = decreaseVolumeButton
createRainbowUIStroke(uigStroke)

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1.5, 0)
UICornerPlay.Parent = imageIdTextBox

local stroke = Instance.new("UIStroke")
stroke.Thickness = 3
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
stroke.Parent = imageIdTextBox
createRainbowUIStroke(stroke)

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay:Clone().Parent = circleButton

local good = Instance.new("UIStroke")
good.Thickness = 3
good.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
good.Parent = circleButton
createToothpasteBlackUIStroke(good)

local good1 = Instance.new("UIStroke")
good1.Thickness = 3
good1.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
good1.Parent = Tinni
createRedBlackUIStroke(good1)

local isLooping = false
local isShaking = false
local function shakeCameraSync()
    local camera = game.Workspace.CurrentCamera
    local shakeConnection

    shakeConnection = RunService.RenderStepped:Connect(function()
        if isShaking and sound.IsPlaying then
            local amplitude = 1000 * sound.PlaybackSpeed * sound.Volume
            local frequency = 1000 * sound.PlaybackSpeed * sound.Volume

            local beat = (tick() * 15 % 2) * 4 - 1
            local x = math.random() * amplitude * beat * sound.PlaybackSpeed * sound.Volume
            local y = math.random() * amplitude * beat * sound.PlaybackSpeed * sound.Volume

            camera.CFrame = camera.CFrame * CFrame.new(x / frequency, y / frequency, 0)
        else
            shakeConnection:Disconnect()
        end
    end)
end
shakeButton.MouseButton1Click:Connect(function()
    isShaking = not isShaking
    if isShaking then
        shakeButton.Text = "Shake: On"
        shakeCameraSync()
    else
        shakeButton.Text = "Shake: Off"
    end
end)

local sound = Instance.new("Sound")
sound.Name = "MuusicSound"
sound.Parent = screenGui
loopButton.MouseButton1Click:Connect(function()
    isLooping = not isLooping
    if isLooping then
        loopButton.Image = "rbxthumb://type=Asset&id=81752682349833&w=150&h=150"
    else
        loopButton.Image = "rbxthumb://type=Asset&id=89124530711215&w=150&h=150"
    end
end)
local echoButton = Instance.new("TextButton")
echoButton.Size = UDim2.new(0, 193, 0, 40)
echoButton.Text = "Echo Mode: Room"
echoButton.ZIndex = 10000
echoButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
echoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
echoButton.TextScaled = true
echoButton.Parent = Tinni
echoButton.BackgroundTransparency = 0.4

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1, 0)
UICornerPlay.Parent = echoButton

local uigjStroke = Instance.new("UIStroke")
uigjStroke.Thickness = 3
uigjStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uigjStroke.Parent = echoButton
createRainbowUIStroke(uigjStroke)

local reverbEffect = Instance.new("ReverbSoundEffect")
reverbEffect.Parent = sound

local modes = {
    { name = "Off", decayTime = 0, density = 0 },
    { name = "Room", decayTime = 0.3, density = 0.5 },
    { name = "Hall", decayTime = 1.2, density = 0.8 },
    { name = "Concert Hall", decayTime = 2.5, density = 1.0 },
    { name = "Forest", decayTime = 0.7, density = 0.4 },
    { name = "Tunnel", decayTime = 1.5, density = 0.75 },
    { name = "Mountains", decayTime = 3.5, density = 0.85 },
    { name = "Cave", decayTime = 3.0, density = 0.7 },
    { name = "Arena", decayTime = 1.8, density = 0.9 },
    { name = "Underwater", decayTime = 2.2, density = 0.6 },
}
local currentMode = 1

local function updateReverb()
    local mode = modes[currentMode]
    echoButton.Text = "Echo Mode: " .. mode.name
    reverbEffect.DecayTime = mode.decayTime
    reverbEffect.Density = mode.density
    if mode.name == "Off" then
        reverbEffect.Enabled = false
    else
        reverbEffect.Enabled = true
    end
end

echoButton.MouseButton1Click:Connect(function()
    currentMode = currentMode % #modes + 1
    updateReverb()
end)

updateReverb()
local speedTextBox = Instance.new("TextBox")
sliderToggleButton.ZIndex = 10000
speedTextBox.Size = UDim2.new(0, 193, 0, 40)
speedTextBox.PlaceholderText = "Enter Speed Song"
speedTextBox.Text = "1"
speedTextBox.TextScaled = true
speedTextBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
speedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
speedTextBox.BackgroundTransparency = 0.6
speedTextBox.Parent = Tinni

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1.5, 0)
UICornerPlay.Parent = speedTextBox

local uituStroke = Instance.new("UIStroke")
uituStroke.Thickness = 3
uituStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uituStroke.Parent = speedTextBox
createRainbowUIStroke(uituStroke)

local function updateSongSpeed()
    local speedMultiplier = tonumber(speedTextBox.Text) or 1
    sound.Pitch = speedMultiplier
    speedMultiplier = 1 / sound.PlaybackSpeed
end
local initialSpeed = tonumber(speedTextBox.Text) or 1
sound.PlaybackSpeed = initialSpeed
speedTextBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local newSpeed = tonumber(speedTextBox.Text)
        if newSpeed and newSpeed > 0 then
            if newSpeed > 2 then
                speedTextBox.Text = "Speed is capped at 2x"
                speedTextBox.Text = tostring(initialSpeed)
            else
                speedTextBox.Text = ""
                sound.PlaybackSpeed = newSpeed
                initialSpeed = newSpeed
            end
        else
            speedTextBox.Text = "Invalid input"
            speedTextBox.Text = tostring(initialSpeed)
        end
    end
end)
sound.PlaybackSpeed = tonumber(speedTextBox.Text) or 1
local function increaseVolume(amount)
    sound.Volume = math.min(sound.Volume + amount, 2.5)
end
local function decreaseVolume(amount)
    sound.Volume = math.max(sound.Volume - amount, 0)
end
local volumeChangeAmount = 0.1
increaseVolumeButton.MouseButton1Click:Connect(function()
    increaseVolume(volumeChangeAmount)
end)
decreaseVolumeButton.MouseButton1Click:Connect(function()
    decreaseVolume(volumeChangeAmount)
end)
local songs = {
    {id = "rbxassetid://5409360995", name = "Dion Timmr"},
    {id = "rbxassetid://7029024726", name = "Throttle : Bloom"},
    {id = "rbxassetid://9046865270", name = "Glowing Light (Bed Version)"},
    {id = "rbxassetid://9046863253", name = "Poolside"},
    {id = "rbxassetid://1839388970", name = "Chilled Mood"},
    {id = "rbxassetid://1839666799", name = "Calmness"},
    {id = "rbxassetid://1844097881", name = "Outdoor Life 60"},
    {id = "rbxassetid://1838202933", name = "Take a Bow"},
    {id = "rbxassetid://1836667073", name = "Story Teller 60"},
    {id = "rbxassetid://9038311584", name = "Under the Moon and Stars (b)"},
    {id = "rbxassetid://1843628547", name = "Rural Outdoors (Rhythmic)"},
    {id = "rbxassetid://1837087638", name = "Ambient Melt"},
    {id = "rbxassetid://9047104336", name = "Sunday In Bed"},
    {id = "rbxassetid://9045766377", name = "Gymnopedie No. 1"},
    {id = "rbxassetid://1844296842", name = "Playtime (c)"},
    {id = "rbxassetid://9046863579", name = "City Lights"},
    {id = "rbxassetid://9042578129", name = "Fun In Paradise"},
    {id = "rbxassetid://1842949058", name = "Go Time (Underscore Version)"},
    {id = "rbxassetid://9047976765", name = "Fun Day (No Beat)"},
    {id = "rbxassetid://9042436491", name = "Parasol"},
    {id = "rbxassetid://1842181702", name = "Calm Waters"},
    {id = "rbxassetid://1844272224", name = "Rising Calm"},
    {id = "rbxassetid://1846122515", name = "Inner Calm 1"},
    {id = "rbxassetid://1840599788", name = "The Calm Blue (b)"},
    {id = "rbxassetid://1844272167", name = "Beating Calm"},
    {id = "rbxassetid://9040456083", name = "Peaceful Calm A"},
    {id = "rbxassetid://1848354536", name = "Relaxed Scene"},
    {id = "rbxassetid://1839841807", name = "Relax (c)"},
    {id = "rbxassetid://1840161104", name = "The Art Of Relaxation"},
    {id = "rbxassetid://1840428407", name = "Relax In Style (A)"},
    {id = "rbxassetid://9048039534", name = "Lo-Fi Dreams"},
    {id = "rbxassetid://9048039288", name = "Just Relax"},
    {id = "rbxassetid://7028518546", name = "Protostar - New Horizons"},
    {id = "rbxassetid://7023887630", name = "Hyper Potions & Nokae - Expedition"},
    {id = "rbxassetid://7028977687", name = "Stonebank - What Are You Waiting For"},
    {id = "rbxassetid://5410083549", name = "Rogue - Let's Talk"},
    {id = "rbxassetid://7028997537", name = "Subtact feat. Noctilucent - What It's Like"},
    {id = "rbxassetid://7024154355", name = "Laszlo - Feels Like Love"},
    {id = "rbxassetid://5410085763", name = "Tokyo Machine - PLAY"},
    {id = "rbxassetid://7024332460", name = "Pegboard Nerds - Shaku"},
    {id = "rbxassetid://7024132063", name = "Koven - Your Pain"},
    {id = "rbxassetid://7023650590", name = "Case & Point - Descender"},
    {id = "rbxassetid://7029011778", name = "Tails & Beach Season - No Sleep"},
    {id = "rbxassetid://7023445033", name = "Aiobahn & Vin - About"},
    {id = "rbxassetid://1837879082", name = "Paradise Falls"},
    {id = "rbxassetid://1845554017", name = "Uptown"},
    {id = "rbxassetid://9047050075", name = "Lo Fi Dreanms Hip Hop"},
    {id = "rbxassetid://1842802203", name = "Pound For Pound"},
    {id = "rbxassetid://7024233823", name = "Nitro Fun feat. Danyka Nadeau - Safe & Sound"},
    {id = "rbxassetid://7029051434", name = "Vindata - Good 4 Me"},
    {id = "rbxassetid://7024220835", name = "Nitro Fun - Easter Egg"},
    {id = "rbxassetid://7023771708", name = "Glacier - Still"},
    {id = "rbxassetid://1837324500", name = "Sunrise Workout"},
    {id = "rbxassetid://7023635858", name = "Bensley - Vex"},
    {id = "rbxassetid://9046862941", name = "Sunset Chill (Bed Version)"},
    {id = "rbxassetid://1843397729", name = "Wonderful Day"},
    {id = "rbxassetid://1838028467", name = "VIP Me (a)"},
    {id = "rbxassetid://9046864489", name = "Violet Clouds"},
    {id = "rbxassetid://9047105533", name = "No Smoking"},
    {id = "rbxassetid://1842660676", name = "Just Scream"},
    {id = "https://www.roblox.com/asset/?id=1840003540", name = "Tell It to Yourself (a)"},
    {id = "https://www.roblox.com/asset/?id=142376088", name = "Parry Gripp - Raining Tacos"},
    {id = "https://www.roblox.com/asset/?id=1837247191", name = "Pedal to the Metal"},
    {id = "https://www.roblox.com/asset/?id=1846738464", name = "Corner Store (A)"},
    {id = "https://www.roblox.com/asset/?id=1846458016", name = "No More"},
    {id = "https://www.roblox.com/asset/?id=1838569831", name = "Never Gonna Give You Up"},
    {id = "https://www.roblox.com/asset/?id=1844750628", name = "Oversized"},
    {id = "https://www.roblox.com/asset/?id=1843433894", name = "Underground"},
    {id = "https://www.roblox.com/asset/?id=1846720993", name = "Cool Garage (A)"},
    {id = "https://www.roblox.com/asset/?id=1840003588", name = "Radio (A)"},
    {id = "rbxassetid://9042437001", name = "Reflection"},
    {id = "https://www.roblox.com/asset/?id=1842558494", name = "Skull Crusher"},
    {id = "https://www.roblox.com/asset/?id=7024101188", name = "Fransis & josh Rubin - Same Mistake"},
    {id = "rbxassetid://9045634474", name = "Questioning The Past"},
    {id = "rbxassetid://9038549424", name = "Mellow Mind (Bed Version)"},
    {id = "rbxassetid://1839129044", name = "Sweet Cat"},
    {id = "rbxassetid://1840195350", name = "William Tell Overture (A)"},
    {id = "rbxassetid://1836009626", name = "Halloween Horrors Waltz"},
    {id = "rbxassetid://1838592691", name = "Halloween Night"},
    {id = "rbxassetid://1838591268", name = "Halloween March"},
    {id = "rbxassetid://1836009584", name = "Bouncing Halloween"},
    {id = "rbxassetid://1836009678", name = "Fast Paced Halloween"},
    {id = "rbxassetid://1837467198", name = "Night of the Ghouls"},
    {id = "rbxassetid://1837467212", name = "Spooks"},
    {id = "rbxassetid://1841602884", name = "Forever Halloween c"},
}
local currentSongIndex = 1
local isPaused = false
local lastPosition = 0
local numBars = 15
local bars = {}
for i = 0.5, numBars do
    local bar = Instance.new("Frame")
    bar.Size = UDim2.new(0.1, 0, 0.1, 0)
    bar.Position = UDim2.new(0.1 * (i - 1), 0, 3.4, 0)
    bar.AnchorPoint = Vector2.new(0, 1)
    bar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    bar.BackgroundTransparency = 0.5
    bar.Parent = eqBarContainer
    table.insert(bars, bar)
    local UICornerPlay = Instance.new("UICorner")
    UICornerPlay.CornerRadius = UDim.new(0.3, 0)
    UICornerPlay.Parent = bar
    createRainbowEffect(bar) 
end
local function playSong()
    sound.SoundId = songs[currentSongIndex].id
    sound.TimePosition = lastPosition
    sound:Play()
    playButton.Image = "rbxthumb://type=Asset&id=133872094700280&w=150&h=150"
    songNameLabel.Text = songs[currentSongIndex].name
end
local function pauseSong()
    lastPosition = sound.TimePosition
    sound:Pause()
    playButton.Image = "rbxthumb://type=Asset&id=120936263094449&w=150&h=150"
end
playButton.MouseButton1Click:Connect(function()
    if sound.IsPlaying then
        pauseSong()
        isPaused = true
    else
        playSong()
        isPaused = false
    end
end)
local function playNextSong()
    if not isLooping then
        currentSongIndex = currentSongIndex + 1
        if currentSongIndex > #songs then
            currentSongIndex = 1
        end
    end
    lastPosition = 0
    playSong()
end
sound.Ended:Connect(function()
    if isLooping then
        sound:Play()
    else
        playNextSong()
    end
end)
nextButton.MouseButton1Click:Connect(function()
    if not isLooping then
        currentSongIndex = currentSongIndex % #songs + 1
    end
    lastPosition = 0
    playSong()
end)
prevButton.MouseButton1Click:Connect(function()
    if not isLooping then
        currentSongIndex = (currentSongIndex - 2) % #songs + 1
    end
    lastPosition = 0
    playSong()
end)
local sliderHandle = Instance.new("ImageLabel")
sliderHandle.Size = UDim2.new(0.01, 11, 1, 0)
sliderHandle.BackgroundTransparency = 1
sliderHandle.Image = "rbxthumb://type=Asset&id=18488884411&w=150&h=150"
sliderHandle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
sliderHandle.Parent = progressBar

local sliderButton = Instance.new("TextButton")
sliderButton.Size = UDim2.new(1, 0, 1, 0)
sliderButton.Text = ""
sliderButton.BackgroundTransparency = 1
sliderButton.Parent = progressBar

local dragging = false
local function onUpdateSlider(input)
    local progressBarSize = progressBar.AbsoluteSize.X
    local sliderPos = math.clamp(input.Position.X - progressBar.AbsolutePosition.X, 0, progressBarSize)
    local timePosition = (sliderPos / progressBarSize) * sound.TimeLength
    sound.TimePosition = timePosition
    progressFill.Size = UDim2.new(sliderPos / progressBarSize, 0, 1, 0)
end

sliderButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        onUpdateSlider(input)
    end
end)

sliderButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging then
        onUpdateSlider(input)
    end
end)

RunService.Heartbeat:Connect(function()
    if sound.IsPlaying then
        local progressBarSize = progressBar.AbsoluteSize.X
        local sliderPos = (sound.TimePosition / sound.TimeLength) * progressBarSize
        sliderHandle.Position = UDim2.new(-0.008, sliderPos, 0, 0)
        progressFill.Size = UDim2.new(sliderPos / progressBarSize, 0, 1, 0)
    end
end)

local sliderToggleButton = Instance.new("TextButton")
sliderToggleButton.Size = UDim2.new(0, 193, 0, 40)
sliderToggleButton.ZIndex = 10000
sliderToggleButton.Text = "Close Slider"
sliderToggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
sliderToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
sliderToggleButton.BackgroundTransparency = 0.4
sliderToggleButton.Parent = Tinni

local UICornerPlay = Instance.new("UICorner")
UICornerPlay.CornerRadius = UDim.new(1.5, 0)
UICornerPlay.Parent = sliderToggleButton

local uituStroke = Instance.new("UIStroke")
uituStroke.Thickness = 3
uituStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uituStroke.Parent = sliderToggleButton
createRainbowUIStroke(uituStroke)

local function toggleSlider()
    isSliderVisible = not isSliderVisible
    sliderButton.Visible = isSliderVisible
    sliderHandle.Visible = isSliderVisible
    sliderToggleButton.Text = isSliderVisible and "Close Slider" or "Open Slider"
end

sliderToggleButton.MouseButton1Click:Connect(toggleSlider)
game:GetService("RunService").RenderStepped:Connect(function()
local currentTime = os.date("*t")
    local hour = currentTime.hour
    local amPm = "AM"
    if hour >= 12 then
        amPm = "PM"
        if hour > 12 then
            hour = hour - 12
        end
    elseif hour == 0 then
        hour = 12
    end
    local formattedTime = string.format("%02d:%02d:%02d %s", hour, currentTime.min, currentTime.sec, amPm)
    local formatted_date = string.format("%02d/%02d/%04d", currentTime.day, currentTime.month, currentTime.year)
timeLabelReal.Text = "Time:  " .. formattedTime.." : "..formatted_date
 if sound.IsPlaying then
        local loudness = sound.PlaybackLoudness
        local progress = sound.TimePosition / sound.TimeLength
        progressFill.Size = UDim2.new(progress, 0, 1, 0)
        local currentTime = math.floor(sound.TimePosition)
        local totalTime = math.floor(sound.TimeLength)
        timeLabel.Text = string.format("%d:%02d/%d:%02d", currentTime // 60, currentTime % 60, totalTime // 60, totalTime % 60)
        for i, bar in pairs(bars) do
            local heightFactor = math.random() * (loudness / 1000) * sound.PlaybackSpeed * sound.Volume
            bar:TweenSize(UDim2.new(0.1, 0, heightFactor * 2, 0), "Out", "Sine", 0.1, true)
        end
     end
         if isShaking then
        local loudness = sound.PlaybackLoudness
        local camera = game.Workspace.CurrentCamera
        local shakeAmount = loudness / 1000 * sound.PlaybackSpeed * sound.Volume
        local x = math.random() * shakeAmount - shakeAmount / 3 * sound.PlaybackSpeed * sound.Volume
        local y = math.random() * shakeAmount - shakeAmount / 3 * sound.PlaybackSpeed * sound.Volume
        camera.CFrame = camera.CFrame * CFrame.new(x, y, 0)
    end
end)
