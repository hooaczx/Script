local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v89=v2(v0(v30,16));if v19 then local v111=v5(v89,v19);v19=nil;return v111;else return v89;end end end);local function v20(v31,v32,v33) if v33 then local v90=0 -0 ;local v91;while true do if (v90==(877 -(282 + 595))) then v91=(v31/((5 -3)^(v32-(1638 -(1523 + 114)))))%((2 + (957 -(892 + 65)))^(((v33-(1 -0)) -(v32-(2 -1))) + (1271 -(226 + 1024 + 20)))) ;return v91-(v91%((1479 -859) -(555 + (117 -53)))) ;end end else local v92=(933 -(857 + (135 -61)))^(v32-((919 -(87 + 263)) -(82 + 285 + 201))) ;return (((v31%(v92 + v92))>=v92) and (928 -(214 + 713))) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 -(997 -(915 + 82)) ;local v36;local v37;while true do if (v35==(953 -((2270 -1468) + 88 + 62))) then return (v37 * (436 -(67 + 113))) + v36 ;end if (v35==((0 -0) + 0)) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (4 -2) ;v35=1 + 0 ;end end end local function v23() local v38=1187 -(1069 + 118) ;local v39;local v40;local v41;local v42;while true do if (v38==(2 -(3 -2))) then return (v42 * (16778007 -(368 + 423))) + (v41 * (205958 -140422)) + (v40 * (559 -303)) + v39 ;end if (v38==(0 + 0 + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (21 -(10 + 8)) );v18=v18 + (6 -2) ;v38=443 -(416 + 26) ;end end end local function v24() local v43=v23();local v44=v23();local v45=1 -0 ;local v46=(v20(v44,439 -(145 + 293) ,20) * ((432 -(44 + 386))^(1518 -(998 + (1568 -(1020 + 60)))))) + v43 ;local v47=v20(v44,7 + 14 ,26 + 5 );local v48=((v20(v44,804 -(201 + 571) )==(1139 -(116 + 1022))) and  -(4 -3)) or 1 ;if (v47==((1423 -(630 + 793)) + 0)) then if (v46==(0 -0)) then return v48 * 0 ;else v47=1;v45=0 -0 ;end elseif (v47==(7269 -(24724 -19502))) then return ((v46==((339 + 520) -(814 + 45))) and (v48 * ((2 -1)/(0 + 0)))) or (v48 * NaN) ;end return v8(v48,v47-(362 + 661) ) * (v45 + (v46/((887 -(261 + (2148 -1524)))^(92 -(1787 -(760 + 987)))))) ;end local function v25(v49) local v50=0 + 0 ;local v51;local v52;while true do if (v50==(1916 -(1789 + 124))) then return v6(v52);end if (v50==(768 -(745 + 21))) then v52={};for v112=1, #v51 do v52[v112]=v2(v1(v3(v51,v112,v112)));end v50=2 + 1 ;end if (v50==(2 -1)) then v51=v3(v16,v18,(v18 + v49) -(3 -2) );v18=v18 + v49 ;v50=1 + 1 ;end if (v50==((0 -0) + (1413 -(447 + 966)))) then v51=nil;if  not v49 then v49=v23();if (v49==(1055 -(87 + (2649 -1681)))) then return "";end end v50=4 -3 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v93,v94,v95,v96,v97,v98,v99,v100,v101) local v102=(function() return 1093 -(707 + 386) ;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do if (v102~=0) then else local v118=(function() return 0 -0 ;end)();local v119=(function() return;end)();while true do if ((29 -(22 + 7))==v118) then v119=(function() return 0 + 0 ;end)();while true do if (v119==(0 + 0)) then v93=(function() return 1985 -(1266 + 719) ;end)();v94=(function() return nil;end)();v119=(function() return 1;end)();end if (v119~=(604 -(268 + 335))) then else v102=(function() return 1;end)();break;end end break;end end end if (v102==(291 -(60 + 230))) then local v120=(function() return 0;end)();while true do if (v120==(572 -(426 + 146))) then local v123=(function() return 0 + 0 ;end)();while true do if (v123~=0) then else while true do if (v93==(1456 -(282 + 1174))) then v94=(function() return v95();end)();if (v96(v94, #"/", #"}")==(811 -(569 + 242))) then local v248=(function() return 0 -0 ;end)();local v249=(function() return;end)();local v250=(function() return;end)();local v251=(function() return;end)();local v252=(function() return;end)();while true do if (2~=v248) then else while true do if (v249==(1 + 1)) then local v323=(function() return 1024 -(706 + 318) ;end)();local v324=(function() return;end)();while true do if (v323==(1251 -(721 + 530))) then v324=(function() return 1271 -(945 + 326) ;end)();while true do if (v324==(2 -1)) then v249=(function() return  #"19(";end)();break;end if (v324==(0 + 0)) then if (v96(v251, #"|", #":")~= #" ") then else v252[702 -(271 + 429) ]=(function() return v97[v252[2 + 0 ]];end)();end if (v96(v251,2,1502 -(1408 + 92) )~= #">") then else v252[ #"91("]=(function() return v97[v252[ #"91("]];end)();end v324=(function() return 1;end)();end end break;end end end if ( #"/"==v249) then local v325=(function() return 0;end)();local v326=(function() return;end)();while true do if (v325~=(1086 -(461 + 625))) then else v326=(function() return 1288 -(993 + 295) ;end)();while true do if (v326==0) then v252=(function() return {v98(),v98(),nil,nil};end)();if (v250==0) then local v335=(function() return 0;end)();local v336=(function() return;end)();while true do if (v335==(1171 -(418 + 753))) then v336=(function() return 0 + 0 ;end)();while true do if (v336==0) then v252[ #"91("]=(function() return v98();end)();v252[ #".dev"]=(function() return v98();end)();break;end end break;end end elseif (v250== #"[") then v252[ #"-19"]=(function() return v99();end)();elseif (v250==(1 + 1)) then v252[ #"gha"]=(function() return v99() -((1 + 1)^16) ;end)();elseif (v250~= #"xxx") then else local v341=(function() return 0 + 0 ;end)();local v342=(function() return;end)();while true do if (v341==0) then v342=(function() return 529 -(406 + 123) ;end)();while true do if (v342==0) then v252[ #"xnx"]=(function() return v99() -((1771 -(1749 + 20))^(4 + 12)) ;end)();v252[ #".com"]=(function() return v98();end)();break;end end break;end end end v326=(function() return 1323 -(1249 + 73) ;end)();end if (v326==1) then v249=(function() return 1 + 1 ;end)();break;end end break;end end end if ((1145 -(466 + 679))==v249) then local v327=(function() return 0 -0 ;end)();local v328=(function() return;end)();while true do if ((0 -0)==v327) then v328=(function() return 0;end)();while true do if (v328~=0) then else v250=(function() return v96(v94,2, #"nil");end)();v251=(function() return v96(v94, #"xnxx",1906 -(106 + 1794) );end)();v328=(function() return 1;end)();end if (v328==1) then v249=(function() return  #":";end)();break;end end break;end end end if (v249~= #"gha") then else if (v96(v251, #"gha", #"nil")== #"\\") then v252[ #".com"]=(function() return v97[v252[ #"asd1"]];end)();end v100[v101]=(function() return v252;end)();break;end end break;end if (1~=v248) then else local v310=(function() return 0 + 0 ;end)();while true do if (v310~=(0 + 0)) then else v251=(function() return nil;end)();v252=(function() return nil;end)();v310=(function() return 2 -1 ;end)();end if ((2 -1)==v310) then v248=(function() return 116 -(4 + 110) ;end)();break;end end end if (v248==(584 -(57 + 527))) then local v311=(function() return 0;end)();while true do if (v311==1) then v248=(function() return 1428 -(41 + 1386) ;end)();break;end if (v311==0) then v249=(function() return 103 -(17 + 86) ;end)();v250=(function() return nil;end)();v311=(function() return 1 + 0 ;end)();end end end end end break;end end return v93,v94,v95,v96,v97,v98,v99,v100,v101;end end end end end end end;end)();local v54=(function() return function(v103,v104,v105) local v106=(function() return 0;end)();local v107=(function() return;end)();while true do if (v106==(0 -0)) then v107=(function() return 0;end)();while true do if (v107~=0) then else local v124=(function() return 0 -0 ;end)();local v125=(function() return;end)();while true do if ((166 -(122 + 44))~=v124) then else v125=(function() return 0 -0 ;end)();while true do if (v125~=0) then else local v126=(function() return 0 -0 ;end)();while true do if (v126~=(0 + 0)) then else v103[v104-#"|" ]=(function() return v105();end)();return v103,v104,v105;end end end end break;end end end end break;end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v68= #".",v59 do local v69=(function() return 0 -0 ;end)();local v70=(function() return;end)();local v71=(function() return;end)();local v72=(function() return;end)();while true do if (v69~=0) then else v70=(function() return 0;end)();v71=(function() return nil;end)();v69=(function() return 1;end)();end if (v69==1) then v72=(function() return nil;end)();while true do if (v70==(66 -(30 + 35))) then if (v71== #".") then v72=(function() return v21()~=(0 + 0) ;end)();elseif (v71==(1259 -(1043 + 214))) then v72=(function() return v24();end)();elseif (v71~= #"xnx") then else v72=(function() return v25();end)();end v60[v68]=(function() return v72;end)();break;end if (v70==0) then local v122=(function() return 0 -0 ;end)();while true do if (v122==0) then v71=(function() return v21();end)();v72=(function() return nil;end)();v122=(function() return 1;end)();end if (1==v122) then v70=(function() return 1;end)();break;end end end end break;end end end v58[ #"-19"]=(function() return v21();end)();for v73= #",",v23() do FlatIdent_5ED46,Descriptor,v21,v20,v60,v22,v23,v55,v73=(function() return v53(FlatIdent_5ED46,Descriptor,v21,v20,v60,v22,v23,v55,v73);end)();end for v74= #".",v23() do v56,v74,v28=(function() return v54(v56,v74,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[1 -0 ];local v66=v62[1214 -(323 + 889) ];local v67=v62[7 -4 ];return function(...) local v75=v65;local v76=v66;local v77=v67;local v78=v27;local v79=1785 -(214 + 1570) ;local v80= -(581 -(361 + 219));local v81={};local v82={...};local v83=v12("#",...) -1 ;local v84={};local v85={};for v108=0 + 0 ,v83 do if ((v108>=v77) or (343==1786)) then v81[v108-v77 ]=v82[v108 + 1 + 0 ];else v85[v108]=v82[v108 + (414 -(15 + (907 -509))) ];end end local v86=(v83-v77) + (983 -(18 + 964)) ;local v87;local v88;while true do v87=v75[v79];v88=v87[3 -2 ];if ((2570>2409) and (4525>4519) and (v88<=(658 -(512 + 114)))) then if (v88<=((35 + 4) -24)) then if (v88<=(14 -7)) then if (v88<=3) then if ((v88<=(1 + 0)) or (2609>=3234)) then if (((3178>972) and (v88==(0 + 0 + 0))) or (3033>=4031)) then if (v85[v87[852 -((60 -40) + 830) ]]==v87[4 + 0 ]) then v79=v79 + (127 -(116 + 10)) ;else v79=v87[1 + 2 ];end else local v127=0 -0 ;local v128;while true do if ((v127==(738 -(542 + 25 + 171))) or (1401==4668)) then v128=v87[3 -1 ];v85[v128]=v85[v128]();break;end end end elseif ((4766==4766) and (v88==(1 + 1))) then v85[v87[2 + (0 -0) ]]=v85[v87[2 + 1 ]]/v87[10 -6 ] ;else local v130=v87[7 -4 ];local v131=v85[v130];for v229=v130 + (1552 -(1126 + 425)) ,v87[409 -(118 + (1531 -(485 + 759))) ] do v131=v131   .. v85[v229] ;end v85[v87[7 -5 ]]=v131;end elseif (v88<=5) then if (v88==(4 + (0 -0))) then v85[v87[1123 -(118 + 1003) ]]=v85[v87[(1197 -(442 + 747)) -5 ]][v87[381 -(142 + 235) ]];else v79=v87[3];end elseif ((v88>(27 -21)) or (2745>3128)) then v85[v87[1 + 1 ]]=v85[v87[980 -(553 + 424) ]] -v85[v87[7 -3 ]] ;else local v137=v87[(1136 -(832 + 303)) + 1 ];local v138={v85[v137]()};local v139=v87[4 + 0 ];local v140=0 + 0 ;for v230=v137,v139 do v140=v140 + 1 + 0 ;v85[v230]=v138[v140];end end elseif (v88<=(7 + 4)) then if (v88<=9) then if ((v88==(17 -9)) or (1144>=4606)) then v85[v87[5 -(949 -(88 + 858)) ]]=v85[v87[6 -3 ]] -v85[v87[2 + 2 ]] ;elseif (v85[v87[(3 + 6) -7 ]]==v85[v87[757 -(239 + 514) ]]) then v79=v79 + 1 + 0 ;else v79=v87[6 -3 ];end elseif ((2776>=1321) and (v88>(1339 -(797 + 532)))) then if ((v87[2 + 0 ]<=v85[v87[2 + 2 ]]) or (487>2303)) then v79=v79 + (2 -1) ;else v79=v87[1205 -(373 + 829) ];end else local v142=731 -(476 + 255) ;local v143;while true do if ((v142==(1130 -(369 + 761))) or (4503==3462)) then v143=v87[2 + 0 ];v85[v143]=v85[v143]();break;end end end elseif (v88<=(11 + 2)) then if (v88>12) then local v144=v87[2];local v145=v85[v144];for v233=v144 + 1 + 0 ,v87[5 -(2 + 0) ] do v7(v145,v85[v233]);end elseif ((3338>=277) and (v85[v87[553 -(83 + 468) ]]<=v87[(75 + 1735) -(1202 + 604) ])) then v79=v79 + (4 -3) ;else v79=v87[(793 -(766 + 23)) -1 ];end elseif (v88==(26 -12)) then local v146=v87[240 -(64 + 174) ];v85[v146]=v85[v146](v13(v85,v146 + 1 + 0 ,v87[3 -0 ]));elseif ((553<=1543) and  not v85[v87[338 -(144 + 192) ]]) then v79=v79 + (217 -(42 + (858 -684))) ;else v79=v87[(3 -0) + 0 ];end elseif ((2610>2560) and (v88<=((52 -32) + 3))) then if ((v88<=(9 + 10)) or (1194>3083)) then if (v88<=(7 + 10)) then if (v88==(1520 -(363 + 1141))) then local v148=v87[1582 -(1183 + 397) ];local v149={v85[v148]()};local v150=v87[1038 -(125 + (3085 -2176)) ];local v151=0 + 0 ;for v234=v148,v150 do v151=v151 + 1 + 0 ;v85[v234]=v149[v151];end else v85[v87[1977 -(1913 + 62) ]][v87[(1075 -(1036 + 37)) + 1 ]]=v87[10 -6 ];end elseif ((2015==2015) and (916>=747) and (v88==(1951 -(565 + 1368)))) then local v154=v87[7 -(4 + 1) ];local v155=v87[1665 -(1477 + 184) ];local v156=v154 + 2 ;local v157={v85[v154](v85[v154 + 1 + 0 ],v85[v156])};for v237=857 -(564 + 292) ,v155 do v85[v156 + v237 ]=v157[v237];end local v158=v157[(1 + 0) -0 ];if (v158 or (2444>2954)) then v85[v156]=v158;v79=v87[8 -5 ];else v79=v79 + (305 -(244 + 60)) ;end elseif (v85[v87[2 + 0 ]]==v85[v87[480 -((1521 -(641 + 839)) + (1348 -(910 + 3))) ]]) then v79=v79 + (1002 -(938 + 63)) ;else v79=v87[3 + 0 ];end elseif (v88<=21) then if (v88==(1145 -((2386 -1450) + 189))) then v85[v87[1 + 1 ]]= #v85[v87[1616 -(1565 + 48) ]];else v85[v87[2 + (1684 -(1466 + 218)) ]][v87[1141 -(782 + 356) ]]=v87[271 -(176 + 91) ];end elseif ((2892<3514) and (v88==(56 -34))) then local v162=v87[2 -0 ];v85[v162]=v85[v162](v13(v85,v162 + (1093 -(975 + 117)) ,v87[1878 -(157 + 1718) ]));else v85[v87[2 + 0 ]]=v85[v87[10 -7 ]] + v85[v87[13 -9 ]] ;end elseif ((v88<=(22 + 5)) or (4241<=2332)) then if (v88<=(1043 -(697 + 321))) then if ((v88==(65 -41)) or (2364<1157)) then v85[v87[3 -1 ]]=v64[v87[9 -6 ]];else v85[v87[4 -2 ]]={};end elseif ((v88==(11 + 15)) or (1167>1278)) then v85[v87[3 -1 ]][v87[161 -(91 + 67) ]]=v85[v87[10 -6 ]];elseif v85[v87[2]] then v79=v79 + (1228 -(322 + 905)) ;else v79=v87[526 -(195 + 228 + 100) ];end elseif (v88<=(640 -((1750 -(556 + 592)) + 9))) then if ((533==533) and (v88>(1217 -(449 + 740)))) then v85[v87[2 + 0 ]]={};else local v171=872 -(826 + 46) ;local v172;while true do if (v171==(947 -(245 + 702))) then v172=v87[(3 + 5) -6 ];v85[v172](v85[v172 + (3 -2) ]);break;end end end elseif (v88<=(70 -40)) then local v173=v87[1 + 1 ];local v174=v85[v87[1901 -(260 + 1638) ]];v85[v173 + (441 -(382 + 58)) ]=v174;v85[v173]=v174[v87[(820 -(329 + 479)) -8 ]];elseif ((595<=3413) and (v88==(63 -(19 + 13)))) then if (v85[v87[2 -0 ]]<=v87[4 + 0 ]) then v79=v79 + (1 -0) ;else v79=v87[1 + 2 ];end else local v262=0 -0 ;local v263;while true do if (v262==(1205 -(902 + 303))) then v263=v87[3 -1 ];v85[v263]=v85[v263](v13(v85,v263 + ((2667 -(174 + 680)) -(1293 + 519)) ,v80));break;end end end elseif (v88<=(99 -(171 -121))) then if (v88<=(87 -47)) then if (v88<=(86 -50)) then if (v88<=(3 + 31)) then if (v88>((3570 -1847) -(1121 + 407 + 162))) then if v85[v87[2]] then v79=v79 + (215 -(22 + 192)) ;else v79=v87[686 -(483 + (939 -(396 + 343))) ];end else v85[v87[1 + 1 ]]= #v85[v87[3]];end elseif (v88>(1498 -(1404 + 59))) then v85[v87[5 -3 ]]=v64[v87[3 -(1477 -(29 + 1448)) ]];else v79=v87[768 -(468 + 297) ];end elseif (v88<=(8 + 30)) then if ((3078>=2591) and (v88>((1988 -(135 + 1254)) -(334 + 228)))) then v85[v87[1 + 1 ]]=v85[v87[10 -7 ]];else do return;end end elseif ((3199<4030) and (v88==(89 -50))) then v85[v87[2 -0 ]]=v87[1 + (7 -5) ]~=(236 -(141 + (443 -348))) ;else local v185=v87[2 + 0 ];local v186=v85[v185];local v187=v87[7 -4 ];for v240=1 -0 ,v187 do v186[v240]=v85[v185 + v240 ];end end elseif (((777<2078) and (v88<=(30 + 14))) or (1145<=1082)) then if (v88<=((1558 -(389 + 1138)) + 11)) then if ((v88>(98 -57)) or (3105==4881)) then local v188=0 + 0 ;local v189;while true do if (v188==(0 + 0)) then v189=v87[5 -3 ];v85[v189]=v85[v189](v13(v85,v189 + 1 + 0 ,v80));break;end end else v85[v87[2 + 0 ]]=v85[v87[4 -1 ]] * v87[1884 -(446 + 1434) ] ;end elseif ((v88>(26 + 17)) or (1887>4878)) then v85[v87[165 -(92 + 71) ]]=v85[v87[8 -5 ]]/v87[2 + 2 ] ;else v85[v87[2 -0 ]]=v87[3]~=0 ;end elseif (v88<=((1385 -(102 + 472)) -(574 + 191))) then if (v88>(38 + 7)) then v85[v87[4 -2 ]]=v85[v87[2 + 0 + 1 ]][v87[853 -(254 + 595) ]];else do return;end end elseif ((1696<=2282) and (v88<=(173 -(31 + 24 + 71)))) then if ((v87[(2 + 0) -0 ]<=v85[v87[1794 -(573 + 1217) ]]) or (1761>=2462)) then v79=v79 + (2 -1) ;else v79=v87[1 + 2 ];end elseif (v88==(2 + 46)) then local v266=0 -(1545 -(320 + 1225)) ;local v267;local v268;local v269;while true do if ((4551>2328) and (v266==(1 -0))) then v269=939 -(714 + 225) ;for v318=v267,v87[11 -7 ] do local v319=0 -0 ;while true do if ((3825>=467) and (v319==(0 + 0))) then v269=v269 + 1 + 0 ;v85[v318]=v268[v269];break;end end end break;end if ((0 -0)==v266) then v267=v87[808 -(118 + 688) ];v268={v85[v267](v85[v267 + 1 + 0 ])};v266=1 + 0 ;end end elseif ( not v85[v87[2 + 0 ]] or (2890==557)) then v79=v79 + 1 + 0 ;else v79=v87[1889 -(927 + 959) ];end elseif (v88<=(191 -134)) then if (v88<=(30 + 18 + 5)) then if (v88<=(783 -(16 + 716))) then if ((v88>50) or (4087>4116)) then local v195=v87[2 + 0 ];v85[v195]=v85[v195](v85[v195 + (1 -0) ]);else v85[v87[99 -(11 + 86) ]]=v87[6 -3 ];end elseif (v88==52) then v85[v87[287 -((1639 -(157 + 1307)) + 110) ]]=v85[v87[3]] + v85[v87[9 -5 ]] ;else v85[v87[9 -7 ]][v87[3 + 0 ]]=v85[v87[1800 -(503 + 1293) ]];end elseif (v88<=(1104 -(572 + 477))) then if ((v88==(150 -96)) or (4770==2904)) then if (v85[v87[(1861 -(821 + 1038)) + 0 ]]==v87[3 + 1 ]) then v79=v79 + (1062 -(810 + (626 -375))) ;else v79=v87[3];end else local v202=v87[88 -(84 + 2) ];v85[v202](v85[v202 + 1 + 0 ]);end elseif ((1106<=1266) and (v88==(18 + 38))) then local v203=v87[2];v85[v203]=v85[v203](v85[v203 + 1 + 0 ]);else local v205=v87[1 + 1 ];local v206,v207=v78(v85[v205](v13(v85,v205 + (534 -(43 + 490)) ,v87[(4 -1) + 0 ])));v80=(v207 + v205) -(734 -(711 + 22)) ;local v208=(0 + 0) -(0 -0) ;for v243=v205,v80 do v208=v208 + (860 -(240 + 619)) ;v85[v243]=v206[v208];end end elseif ((v88<=((1041 -(834 + 192)) + 3 + 43)) or (3903==4536)) then if (v88<=(93 -34)) then if (v88==(4 + 54)) then local v209=1744 -(345 + 999 + 400) ;local v210;local v211;local v212;local v213;while true do if (v209==(405 -(255 + 150))) then v210=v87[2];v211,v212=v78(v85[v210](v13(v85,v210 + 1 + 0 + 0 ,v87[3 + 0 ])));v209=1 + 0 ;end if ((4093<=4845) and (v209==(8 -6))) then for v301=v210,v80 do local v302=0 -0 ;while true do if ((0 -0)==v302) then v213=v213 + (1740 -(404 + 1335)) ;v85[v301]=v211[v213];break;end end end break;end if (v209==(1 + 0)) then v80=(v212 + v210) -(407 -(183 + 223)) ;v213=0 -0 ;v209=2 + 0 ;end end else v85[v87[1 + 1 ]]=v85[v87[3 + 0 ]];end elseif (v88>((320 -(300 + 4)) + 44)) then v85[v87[339 -(10 + 88 + 239) ]]=v87[3 + 0 ];else v85[v87[798 -(588 + 208) ]]=v85[v87[341 -(118 + 220) ]] * v87[2 + 2 ] ;end elseif (v88<=(512 -(108 + 341))) then if (v88==((73 -45) + 34)) then local v219=0;local v220;local v221;while true do if ((3155<4650) and (1569<=3647) and ((4 -3)==v219)) then v85[v220 + ((1856 -(112 + 250)) -(711 + 782)) ]=v221;v85[v220]=v221[v87[4]];break;end if ((v219==(0 -(0 + 0))) or (4046>=4927)) then v220=v87[471 -(270 + 199) ];v221=v85[v87[(2 -1) + 2 ]];v219=1 + 0 ;end end else local v222=1819 -(580 + 1239) ;local v223;local v224;local v225;while true do if ((3774>=1839) and (((0 + 0) -0)==v222)) then v223=v87[2 + 0 ];v224=v85[v223];v222=3 -2 ;end if ((2811==2811) and (4623>=2787) and (v222==(1 + 0))) then v225=v87[2 + 1 ];for v303=2 -(1 + 0) ,v225 do v224[v303]=v85[v223 + v303 ];end break;end end end elseif ((2234>=1230) and (v88<=(40 + 24))) then local v226=v87[1169 -(645 + 522) ];local v227={v85[v226](v85[v226 + 1 + 0 ])};local v228=0 + 0 + 0 + 0 ;for v246=v226,v87[19 -15 ] do local v247=0 -0 ;while true do if (v247==((1364 + 472) -(1045 + 791))) then v228=v228 + (2 -(1415 -(1001 + 413))) ;v85[v246]=v227[v228];break;end end end elseif (v88==(99 -34)) then local v271=505 -(351 + 154) ;local v272;local v273;while true do if (v271==(2 -1)) then for v320=v272 + (1575 -(1281 + 293)) ,v87[270 -(28 + 238) ] do v273=v273   .. v85[v320] ;end v85[v87[4 -2 ]]=v273;break;end if (v271==(1559 -(1381 + 178))) then v272=v87[3 + 0 ];v273=v85[v272];v271=1 + 0 ;end end else local v274=v87[1 + 1 ];local v275=v87[13 -9 ];local v276=v274 + 2 ;local v277={v85[v274](v85[v274 + 1 + 0 ],v85[v276])};for v296=471 -(381 + 89) ,v275 do v85[v276 + v296 ]=v277[v296];end local v278=v277[1 + 0 ];if v278 then v85[v276]=v278;v79=v87[3 + (882 -(244 + 638)) ];else v79=v79 + 1 + 0 ;end end v79=v79 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
