local RunService = game:GetService("RunService")

local songs = {
    {id = "https://www.roblox.com/asset/?id=7028570258", name = "Rome in Silver & Beach Season - Skin"},
    {id = "https://www.roblox.com/asset/?id=5410083447", name = "Duumu & Pauline Herr - You Say"},
    {id = "https://www.roblox.com/asset/?id=9039769451", name = "Sometimes You Win"},
    {id = "https://www.roblox.com/asset/?id=7028919492", name = "SMLE - Found A Reason"},
}

local currentSongIndex = 1
local sound = Instance.new("Sound")
sound.Parent = ScreenGui
local isPlaying = false
local totalTime = 0
local progressUpdateConnection

function PlaySongByIndex(index, TitleLabel, TimeLabel, ProgressCircle)
    local song = songs[index]
    if song then
        sound.SoundId = song.id
        sound:Play()
        isPlaying = true
        TitleLabel.Text = song.name
        totalTime = sound.TimeLength
        game.StarterGui:SetCore("SendNotification", {
            Title = "Playing",
            Text = "Playing song: " .. song.name,
            Duration = 2,
        })
        StartProgressUpdate(ProgressCircle, TimeLabel)
    end
end

local function FormatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local remainingSeconds = math.floor(seconds % 60)
    if hours > 0 then
        return string.format("%02d:%02d:%02d", hours, minutes, remainingSeconds)
    elseif minutes >= 10 then
        return string.format("%02d:%02d", minutes, remainingSeconds)
    else
        return string.format("%d:%02d", minutes, remainingSeconds)
    end
end


function StartProgressUpdate(ProgressCircle, TimeLabel)
    if progressUpdateConnection then
        progressUpdateConnection:Disconnect()
    end

    progressUpdateConnection = RunService.Heartbeat:Connect(function()
        if isPlaying and sound.IsPlaying then
            ProgressCircle.Rotation = (ProgressCircle.Rotation + 1) % 360
            local currentTime = sound.TimePosition
            local totalTime = sound.TimeLength
            local progress = currentTime / totalTime
            TimeLabel.Text = string.format("%s / %s", FormatTime(currentTime), FormatTime(totalTime))
        else
            if progressUpdateConnection then
                progressUpdateConnection:Disconnect()
                progressUpdateConnection = nil
            end
        end
    end)
end


function AddMusicPlayer(parent, Configs)
    local Frame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 150),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Name = "MusicPlayerFrame"
    })
    Corner(Frame)
    Stroke(Frame)

    local TitleLabel = Create("TextLabel", Frame, {
        TextSize = 14,
        TextWrapped = true,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = songs[currentSongIndex].name,
        Size = UDim2.new(0.45, 0, 0, 40),
        Position = UDim2.new(0.56, -25, 0.36, -25),
        BackgroundTransparency = 1,
        TextXAlignment = "Center",
        Font = Configs_HUB.Text_Font
    })
    TextSetColor(TitleLabel)

    local ProgressCircle = Create("ImageLabel", Frame, {
        Size = UDim2.new(0, 100, 0, 100),
        Position = UDim2.new(0.13, -25, 0.32, -25),
        BackgroundTransparency = 1,
        Image = "rbxassetid://16855304544"
    })

    local TimeLabel = Create("TextLabel", Frame, {
        TextSize = 12,
        TextWrapped = true,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = "0:00 / 0:00",
        Size = UDim2.new(0.3, 0, 0, 20),
        Position = UDim2.new(0.63, -25, 0.56, -25),
        BackgroundTransparency = 1,
        TextXAlignment = "Center",
        Font = Configs_HUB.Text_Font
    })

    local NextButton = Create("TextButton", Frame, {
        TextSize = 14,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = "⏭",
        Size = UDim2.new(0, 30, 0, 30),
        Position = UDim2.new(0.69, 28, 0.25, 60),
        BackgroundColor3 = Configs_HUB.Cor_Button,
        Font = Configs_HUB.Text_Font,
    })
    TextSetColor(NextButton)

    NextButton.MouseButton1Click:Connect(function()
        currentSongIndex = (currentSongIndex % #songs) + 1
        PlaySongByIndex(currentSongIndex, TitleLabel, TimeLabel, ProgressCircle)
    end)

    local PreviousButton = Create("TextButton", Frame, {
        TextSize = 14,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = "⏮",
        Size = UDim2.new(0, 30, 0, 30),
        Position = UDim2.new(0.48, 28, 0.25, 60),
        BackgroundColor3 = Configs_HUB.Cor_Button,
        Font = Configs_HUB.Text_Font,
    })
    TextSetColor(PreviousButton)

    PreviousButton.MouseButton1Click:Connect(function()
        currentSongIndex = (currentSongIndex - 2 + #songs) % #songs + 1
        PlaySongByIndex(currentSongIndex, TitleLabel, TimeLabel, ProgressCircle)
    end)

    local ToggleButton = Create("ImageButton", Frame, {
        Size = UDim2.new(0, 30, 0, 30),
        Position = UDim2.new(0.57, 28, 0.25, 60),
        BackgroundColor3 = Configs_HUB.Cor_Button,
        Image = "rbxthumb://type=Asset&id=133872094700280&w=150&h=150",
    })

    ToggleButton.MouseButton1Click:Connect(function()
        if isPlaying then
            sound:Stop()
            isPlaying = false
            TitleLabel.Text = "Stopped"
            ToggleButton.Image = "rbxthumb://type=Asset&id=120936263094449&w=150&h=150"
        else
            PlaySongByIndex(currentSongIndex, TitleLabel, TimeLabel, ProgressCircle)
            ToggleButton.Image = "rbxthumb://type=Asset&id=133872094700280&w=150&h=150"
        end
    end)
end
